===============================================
     SA MARKETS DIRECTORY - COMPLETE ANALYSIS
     CODE + DATABASE + INFRASTRUCTURE
===============================================
Generated on: Mon Jun  2 13:13:13 UTC 2025
Project: SA Markets Directory
Analysis Type: Full Stack Review

üóÑÔ∏è  POCKETBASE DATABASE ANALYSIS
=============================================

PocketBase URL: http://localhost:8090
Analysis Time: Mon Jun  2 13:13:13 UTC 2025

‚úÖ PocketBase Status: ONLINE

üìã COLLECTIONS OVERVIEW
------------------------

Total Collections: 0

Collection Names:

üìä DETAILED COLLECTION SCHEMAS
================================


========================================

üìÅ PROJECT DIRECTORY STRUCTURE
=============================================

-I [error opening dir]
node_modules|.git|dist|build|coverage [error opening dir]
-a [error opening dir]
--dirsfirst [error opening dir]

0 directories, 0 files

========================================

üìÑ FILE INVENTORY & ANALYSIS
=============================================

File Type Analysis:
-------------------
css       :   2 files (1.4K)
js        :   8 files (25K)
jsx       :  13 files (55K)
svg       :   1 files (4.1K)

üîç CRITICAL FILES CHECK
=============================================

‚úÖ src/App.jsx                              Main application component
‚úÖ src/main.jsx                             Application entry point
‚úÖ src/index.css                            Main stylesheet
‚úÖ src/contexts/AuthContext.jsx             Authentication context
‚úÖ src/components/layout/Layout.jsx         Main layout component
‚úÖ src/components/layout/Header.jsx         Header component
‚úÖ src/components/layout/Footer.jsx         Footer component
‚úÖ src/components/auth/ProtectedRoute.jsx   Route protection
‚úÖ src/pages/Home.jsx                       Home page
‚úÖ src/pages/Login.jsx                      Login page
‚úÖ src/pages/Register.jsx                   Registration page
‚úÖ src/pages/Dashboard.jsx                  User dashboard
‚úÖ src/pages/MarketList.jsx                 Market listing page
‚úÖ src/pages/MarketDetail.jsx               Market detail page
‚úÖ src/services/marketService.js            Market data service
‚úÖ src/services/StallholderService.js       Stallholder service
‚úÖ src/services/ApplicationService.js       Application service
‚úÖ src/lib/pocketbase.js                    PocketBase configuration
‚úÖ src/lib/constants.js                     Application constants
‚úÖ src/utils/security.js                    Security utilities
‚úÖ package.json                             Project dependencies
‚úÖ .env                                     Environment configuration
‚úÖ vite.config.js                           Vite configuration
‚úÖ tailwind.config.js                       Tailwind CSS configuration

üì¶ DEPENDENCIES ANALYSIS
=============================================

Production Dependencies:
------------------------
  @tanstack/react-query: ^5.79.0
  axios: ^1.9.0
  crypto-js: ^4.2.0
  dompurify: ^3.2.6
  lucide-react: ^0.511.0
  pocketbase: ^0.26.0
  react: ^19.1.0
  react-dom: ^19.1.0
  react-router-dom: ^7.6.1
  resend: ^4.5.1
  validator: ^13.15.15
  zxcvbn: ^4.4.2

Development Dependencies:
-------------------------
  @eslint/js: ^9.25.0
  @types/crypto-js: ^4.2.2
  @types/node: ^22.15.29
  @types/react: ^19.1.2
  @types/react-dom: ^19.1.2
  @vitejs/plugin-react: ^4.4.1
  autoprefixer: ^10.4.21
  eslint: ^9.25.0
  eslint-plugin-react-hooks: ^5.2.0
  eslint-plugin-react-refresh: ^0.4.19
  globals: ^16.0.0
  postcss: ^8.5.4
  tailwindcss: ^3.4.17
  vite: ^6.3.5

üåç ENVIRONMENT CONFIGURATION
=============================================

Environment file (.env) found:
------------------------------
# PocketBase Configuration
VITE_POCKETBASE_URL=http://localhost:8090

# Google Maps (we'll add this later)
VITE_GOOGLE_MAPS_API_KEY=***MASKED***

# Email Service (Resend)
VITE_RESEND_API_KEY=***MASKED***
VITE_FROM_EMAIL=noreply@samarkets.com.au

# Security
VITE_ENCRYPTION_KEY=***MASKED***
VITE_JWT_SECRET=***MASKED***

# App Configuration
VITE_APP_NAME=SA Markets Directory
VITE_APP_VERSION=1.0.0
VITE_ENVIRONMENT=development

# URLs
VITE_FRONTEND_URL=http://localhost:5173
VITE_API_URL=http://localhost:8090

# Feature Flags
VITE_ENABLE_2FA=true
VITE_ENABLE_EMAIL_VERIFICATION=true
VITE_ENABLE_AUDIT_LOGGING=true

========================================

üíª SOURCE CODE FILES
=============================================

üìÅ FILE: package.json
   Size: 1.1K | Modified: 2025-06-02
----------------------------------------
     1	{
     2	  "name": "markets-directory",
     3	  "private": true,
     4	  "version": "0.0.0",
     5	  "type": "module",
     6	  "scripts": {
     7	    "dev": "vite",
     8	    "build": "vite build",
     9	    "lint": "eslint .",
    10	    "preview": "vite preview"
    11	  },
    12	  "dependencies": {
    13	    "@tanstack/react-query": "^5.79.0",
    14	    "axios": "^1.9.0",
    15	    "crypto-js": "^4.2.0",
    16	    "dompurify": "^3.2.6",
    17	    "lucide-react": "^0.511.0",
    18	    "pocketbase": "^0.26.0",
    19	    "react": "^19.1.0",
    20	    "react-dom": "^19.1.0",
    21	    "react-router-dom": "^7.6.1",
    22	    "resend": "^4.5.1",
    23	    "validator": "^13.15.15",
    24	    "zxcvbn": "^4.4.2"
    25	  },
    26	  "devDependencies": {
    27	    "@eslint/js": "^9.25.0",
    28	    "@types/crypto-js": "^4.2.2",
    29	    "@types/node": "^22.15.29",
    30	    "@types/react": "^19.1.2",
    31	    "@types/react-dom": "^19.1.2",
    32	    "@vitejs/plugin-react": "^4.4.1",
    33	    "autoprefixer": "^10.4.21",
    34	    "eslint": "^9.25.0",
    35	    "eslint-plugin-react-hooks": "^5.2.0",
    36	    "eslint-plugin-react-refresh": "^0.4.19",
    37	    "globals": "^16.0.0",
    38	    "postcss": "^8.5.4",
    39	    "tailwindcss": "^3.4.17",
    40	    "vite": "^6.3.5"
    41	  }
    42	}

========================================

üìÅ FILE: .env
   Size: 672 | Modified: 2025-06-02
----------------------------------------
     1	# PocketBase Configuration
     2	VITE_POCKETBASE_URL=http://localhost:8090
     3	
     4	# Google Maps (we'll add this later)
     5	VITE_GOOGLE_MAPS_API_KEY=your_google_maps_api_key_here
     6	
     7	# Email Service (Resend)
     8	VITE_RESEND_API_KEY=your_resend_api_key_here
     9	VITE_FROM_EMAIL=noreply@samarkets.com.au
    10	
    11	# Security
    12	VITE_ENCRYPTION_KEY=dev_key_32_characters_long_12345
    13	VITE_JWT_SECRET=your_jwt_secret_here
    14	
    15	# App Configuration
    16	VITE_APP_NAME=SA Markets Directory
    17	VITE_APP_VERSION=1.0.0
    18	VITE_ENVIRONMENT=development
    19	
    20	# URLs
    21	VITE_FRONTEND_URL=http://localhost:5173
    22	VITE_API_URL=http://localhost:8090
    23	
    24	# Feature Flags
    25	VITE_ENABLE_2FA=true
    26	VITE_ENABLE_EMAIL_VERIFICATION=true
    27	VITE_ENABLE_AUDIT_LOGGING=true

========================================

üìÅ FILE: vite.config.js
   Size: 161 | Modified: 2025-06-02
----------------------------------------
     1	import { defineConfig } from 'vite'
     2	import react from '@vitejs/plugin-react'
     3	
     4	// https://vite.dev/config/
     5	export default defineConfig({
     6	  plugins: [react()],
     7	})

========================================

üìÅ FILE: tailwind.config.js
   Size: 872 | Modified: 2025-06-02
----------------------------------------
     1	/** @type {import('tailwindcss').Config} */
     2	export default {
     3	  content: [
     4	    "./index.html",
     5	    "./src/**/*.{js,ts,jsx,tsx}",
     6	  ],
     7	  theme: {
     8	    extend: {
     9	      colors: {
    10	        primary: {
    11	          50: '#f0f9ff',
    12	          100: '#e0f2fe',
    13	          200: '#bae6fd',
    14	          300: '#7dd3fc',
    15	          400: '#38bdf8',
    16	          500: '#0ea5e9',
    17	          600: '#0284c7',
    18	          700: '#0369a1',
    19	          800: '#075985',
    20	          900: '#0c4a6e',
    21	        },
    22	        secondary: {
    23	          50: '#fefce8',
    24	          100: '#fef9c3',
    25	          200: '#fef08a',
    26	          300: '#fde047',
    27	          400: '#facc15',
    28	          500: '#eab308',
    29	          600: '#ca8a04',
    30	          700: '#a16207',
    31	          800: '#854d0e',
    32	          900: '#713f12',
    33	        }
    34	      },
    35	      fontFamily: {
    36	        sans: ['Inter', 'system-ui', 'sans-serif'],
    37	      },
    38	    },
    39	  },
    40	  plugins: [],
    41	}

========================================

üìÅ FILE: src/main.jsx
   Size: 229 | Modified: 2025-06-02
----------------------------------------
     1	import { StrictMode } from 'react'
     2	import { createRoot } from 'react-dom/client'
     3	import './index.css'
     4	import App from './App.jsx'
     5	
     6	createRoot(document.getElementById('root')).render(
     7	  <StrictMode>
     8	    <App />
     9	  </StrictMode>,
    10	)

========================================

üìÅ FILE: src/App.css
   Size: 606 | Modified: 2025-06-02
----------------------------------------
     1	#root {
     2	  max-width: 1280px;
     3	  margin: 0 auto;
     4	  padding: 2rem;
     5	  text-align: center;
     6	}
     7	
     8	.logo {
     9	  height: 6em;
    10	  padding: 1.5em;
    11	  will-change: filter;
    12	  transition: filter 300ms;
    13	}
    14	.logo:hover {
    15	  filter: drop-shadow(0 0 2em #646cffaa);
    16	}
    17	.logo.react:hover {
    18	  filter: drop-shadow(0 0 2em #61dafbaa);
    19	}
    20	
    21	@keyframes logo-spin {
    22	  from {
    23	    transform: rotate(0deg);
    24	  }
    25	  to {
    26	    transform: rotate(360deg);
    27	  }
    28	}
    29	
    30	@media (prefers-reduced-motion: no-preference) {
    31	  a:nth-of-type(2) .logo {
    32	    animation: logo-spin infinite 20s linear;
    33	  }
    34	}
    35	
    36	.card {
    37	  padding: 2em;
    38	}
    39	
    40	.read-the-docs {
    41	  color: #888;
    42	}

========================================

üìÅ FILE: src/App.jsx
   Size: 3.3K | Modified: 2025-06-02
----------------------------------------
     1	// src/App.jsx - ONLY this content (clean version)
     2	import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'
     3	import { AuthProvider } from './contexts/AuthContext'
     4	import Layout from './components/layout/Layout'
     5	import Home from './pages/Home'
     6	import MarketList from './pages/MarketList'
     7	import MarketDetail from './pages/MarketDetail'
     8	import Login from './pages/Login'
     9	import Register from './pages/Register'
    10	import Dashboard from './pages/Dashboard'
    11	import ProtectedRoute from './components/auth/ProtectedRoute'
    12	import './App.css'
    13	
    14	function App() {
    15	  return (
    16	    <AuthProvider>
    17	      <Router>
    18	        <Layout>
    19	          <Routes>
    20	            <Route path="/" element={<Home />} />
    21	            <Route path="/markets" element={<MarketList />} />
    22	            <Route path="/markets/:slug" element={<MarketDetail />} />
    23	            <Route path="/login" element={<Login />} />
    24	            <Route path="/register" element={<Register />} />
    25	            <Route 
    26	              path="/dashboard" 
    27	              element={
    28	                <ProtectedRoute>
    29	                  <Dashboard />
    30	                </ProtectedRoute>
    31	              } 
    32	            />
    33	            {/* Placeholder routes for future features */}
    34	            <Route 
    35	              path="/profile" 
    36	              element={
    37	                <ProtectedRoute>
    38	                  <div className="min-h-screen bg-gray-50 py-8">
    39	                    <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    40	                      <h1 className="text-3xl font-bold text-gray-900 mb-4">Profile</h1>
    41	                      <p className="text-gray-600">Profile management coming soon...</p>
    42	                    </div>
    43	                  </div>
    44	                </ProtectedRoute>
    45	              } 
    46	            />
    47	            <Route 
    48	              path="/stallholders" 
    49	              element={
    50	                <div className="min-h-screen bg-gray-50 py-8">
    51	                  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    52	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">For Stallholders</h1>
    53	                    <p className="text-gray-600">Stallholder directory coming soon...</p>
    54	                  </div>
    55	                </div>
    56	              } 
    57	            />
    58	            <Route 
    59	              path="/organizers" 
    60	              element={
    61	                <div className="min-h-screen bg-gray-50 py-8">
    62	                  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    63	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">For Market Organizers</h1>
    64	                    <p className="text-gray-600">Market organizer tools coming soon...</p>
    65	                  </div>
    66	                </div>
    67	              } 
    68	            />
    69	            <Route 
    70	              path="/about" 
    71	              element={
    72	                <div className="min-h-screen bg-gray-50 py-8">
    73	                  <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    74	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">About SA Markets</h1>
    75	                    <p className="text-gray-600">About page coming soon...</p>
    76	                  </div>
    77	                </div>
    78	              } 
    79	            />
    80	          </Routes>
    81	        </Layout>
    82	      </Router>
    83	    </AuthProvider>
    84	  )
    85	}
    86	
    87	export default App

========================================

üìÅ FILE: src/index.css
   Size: 813 | Modified: 2025-06-02
----------------------------------------
     1	@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
     2	
     3	@tailwind base;
     4	@tailwind components;
     5	@tailwind utilities;
     6	
     7	@layer base {
     8	  html {
     9	    font-family: 'Inter', system-ui, sans-serif;
    10	  }
    11	}
    12	
    13	@layer components {
    14	  .btn-primary {
    15	    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
    16	  }
    17	  
    18	  .btn-secondary {
    19	    @apply bg-secondary-500 hover:bg-secondary-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
    20	  }
    21	  
    22	  .card {
    23	    @apply bg-white rounded-lg shadow-md border border-gray-200 p-6;
    24	  }
    25	  
    26	  .input-field {
    27	    @apply w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent;
    28	  }
    29	}

========================================

üìÅ FILE: src/lib/constants.js
   Size: 1.5K | Modified: 2025-06-02
----------------------------------------
     1	export const USER_ROLES = {
     2	  CUSTOMER: 'customer',
     3	  ORGANIZER: 'organizer', 
     4	  STALLHOLDER: 'stallholder'
     5	};
     6	
     7	export const MARKET_FREQUENCIES = {
     8	  DAILY: 'Daily',
     9	  WEEKLY: 'Weekly',
    10	  FIRST_SATURDAY: '1st Saturday',
    11	  FIRST_SUNDAY: '1st Sunday',
    12	  SECOND_SATURDAY: '2nd Saturday',
    13	  SECOND_SUNDAY: '2nd Sunday',
    14	  THIRD_SATURDAY: '3rd Saturday',
    15	  THIRD_SUNDAY: '3rd Sunday',
    16	  FOURTH_SATURDAY: '4th Saturday',
    17	  FOURTH_SUNDAY: '4th Sunday',
    18	  SPECIFIC_DATES: 'Specific Dates',
    19	  SEASONAL: 'Seasonal',
    20	  MONTHLY: 'Monthly'
    21	};
    22	
    23	export const MARKET_CATEGORIES = {
    24	  FARMERS: 'Farmers Market',
    25	  CRAFT: 'Craft & Artisan',
    26	  COMMUNITY: 'Community Market',
    27	  SPECIALTY: 'Specialty Market',
    28	  FOOD: 'Food Market',
    29	  VINTAGE: 'Vintage & Antiques',
    30	  GENERAL: 'General Market'
    31	};
    32	
    33	export const AUSTRALIAN_STATES = {
    34	  SA: 'South Australia',
    35	  VIC: 'Victoria',
    36	  NSW: 'New South Wales',
    37	  QLD: 'Queensland',
    38	  WA: 'Western Australia',
    39	  TAS: 'Tasmania',
    40	  NT: 'Northern Territory',
    41	  ACT: 'Australian Capital Territory'
    42	};
    43	
    44	export const SUBSCRIPTION_TIERS = {
    45	  FREE: 'free',
    46	  BASIC: 'basic',
    47	  PREMIUM: 'premium',
    48	  ENTERPRISE: 'enterprise'
    49	};
    50	
    51	export const APPLICATION_STATUS = {
    52	  PENDING: 'pending',
    53	  APPROVED: 'approved',
    54	  REJECTED: 'rejected',
    55	  WAITLISTED: 'waitlisted'
    56	};
    57	
    58	export const SEARCH_RADIUS_OPTIONS = [
    59	  { value: 5, label: '5 km' },
    60	  { value: 10, label: '10 km' },
    61	  { value: 25, label: '25 km' },
    62	  { value: 50, label: '50 km' },
    63	  { value: 100, label: '100 km' }
    64	];

========================================

üìÅ FILE: src/lib/pocketbase.js
   Size: 1.4K | Modified: 2025-06-02
----------------------------------------
     1	import PocketBase from 'pocketbase';
     2	
     3	const pb = new PocketBase(import.meta.env.VITE_POCKETBASE_URL || 'http://localhost:8090');
     4	
     5	// Configure authentication
     6	pb.autoCancellation(false);
     7	
     8	// Export the instance
     9	export default pb;
    10	
    11	// Helper functions for common operations
    12	export const auth = {
    13	  // Login user
    14	  async login(email, password) {
    15	    return await pb.collection('users').authWithPassword(email, password);
    16	  },
    17	
    18	  // Register user
    19	  async register(data) {
    20	    return await pb.collection('users').create(data);
    21	  },
    22	
    23	  // Logout
    24	  logout() {
    25	    pb.authStore.clear();
    26	  },
    27	
    28	  // Get current user
    29	  getCurrentUser() {
    30	    return pb.authStore.model;
    31	  },
    32	
    33	  // Check if user is authenticated
    34	  isAuthenticated() {
    35	    return pb.authStore.isValid;
    36	  },
    37	
    38	  // Subscribe to auth changes
    39	  onChange(callback) {
    40	    return pb.authStore.onChange(callback);
    41	  }
    42	};
    43	
    44	// Helper for handling API errors
    45	export const handlePocketBaseError = (error) => {
    46	  console.error('PocketBase Error:', error);
    47	  
    48	  if (error?.response?.data) {
    49	    // Extract field-specific errors
    50	    const fieldErrors = {};
    51	    Object.entries(error.response.data).forEach(([field, fieldError]) => {
    52	      fieldErrors[field] = fieldError.message || fieldError;
    53	    });
    54	    return fieldErrors;
    55	  }
    56	  
    57	  return { general: error.message || 'An unexpected error occurred' };
    58	};

========================================

üìÅ FILE: src/utils/security.js
   Size: 4.3K | Modified: 2025-06-02
----------------------------------------
     1	// Input validation and sanitization
     2	export const validation = {
     3	  // Australian-specific validation
     4	  validateABN(abn) {
     5	    const cleanABN = abn.replace(/\s/g, '');
     6	    if (!/^\d{11}$/.test(cleanABN)) return false;
     7	    
     8	    // ABN checksum validation
     9	    const weights = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];
    10	    let sum = 0;
    11	    
    12	    for (let i = 0; i < 11; i++) {
    13	      sum += (parseInt(cleanABN[i]) - (i === 0 ? 1 : 0)) * weights[i];
    14	    }
    15	    
    16	    return sum % 89 === 0;
    17	  },
    18	
    19	  validateAustralianPhone(phone) {
    20	    const cleanPhone = phone.replace(/[\s\-\(\)]/g, '');
    21	    const australianPhoneRegex = /^(\+61|0)[2-478](?:[0-9]){8}$/;
    22	    return australianPhoneRegex.test(cleanPhone);
    23	  },
    24	
    25	  validatePostcode(postcode) {
    26	    return /^\d{4}$/.test(postcode);
    27	  },
    28	
    29	  validateEmail(email) {
    30	    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    31	    return emailRegex.test(email) && email.length <= 254;
    32	  },
    33	
    34	  // Password strength validation
    35	  validatePassword(password) {
    36	    const minLength = 12;
    37	    const hasUpperCase = /[A-Z]/.test(password);
    38	    const hasLowerCase = /[a-z]/.test(password);
    39	    const hasNumbers = /\d/.test(password);
    40	    const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
    41	    
    42	    return {
    43	      isValid: password.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar,
    44	      length: password.length >= minLength,
    45	      uppercase: hasUpperCase,
    46	      lowercase: hasLowerCase,
    47	      numbers: hasNumbers,
    48	      special: hasSpecialChar,
    49	      score: [hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChar, password.length >= minLength]
    50	        .filter(Boolean).length
    51	    };
    52	  }
    53	};
    54	
    55	// Data sanitization
    56	export const sanitizer = {
    57	  // Remove potentially dangerous characters
    58	  sanitizeInput(input) {
    59	    if (typeof input !== 'string') return input;
    60	    
    61	    return input
    62	      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '') // Remove script tags
    63	      .replace(/javascript:/gi, '') // Remove javascript: URLs
    64	      .replace(/on\w+=/gi, '') // Remove event handlers
    65	      .replace(/[<>]/g, '') // Remove angle brackets
    66	      .trim();
    67	  },
    68	
    69	  // Sanitize HTML content (for descriptions, etc.)
    70	  sanitizeHTML(html) {
    71	    // In production, use a proper HTML sanitizer like DOMPurify
    72	    const allowedTags = ['p', 'br', 'strong', 'em', 'ul', 'ol', 'li', 'h1', 'h2', 'h3'];
    73	    // For now, just remove script tags and dangerous attributes
    74	    return html
    75	      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
    76	      .replace(/on\w+="[^"]*"/gi, '')
    77	      .replace(/javascript:/gi, '');
    78	  },
    79	
    80	  // Sanitize file names
    81	  sanitizeFileName(fileName) {
    82	    return fileName
    83	      .replace(/[^a-zA-Z0-9.\-_]/g, '_')
    84	      .replace(/_{2,}/g, '_')
    85	      .substr(0, 255);
    86	  }
    87	};
    88	
    89	// Rate limiting helper
    90	export const rateLimiter = {
    91	  attempts: new Map(),
    92	
    93	  isAllowed(key, limit = 5, windowMs = 15 * 60 * 1000) { // 5 attempts per 15 minutes
    94	    const now = Date.now();
    95	    const userAttempts = this.attempts.get(key) || [];
    96	    
    97	    // Remove old attempts outside the window
    98	    const validAttempts = userAttempts.filter(time => now - time < windowMs);
    99	    
   100	    if (validAttempts.length >= limit) {
   101	      return false;
   102	    }
   103	    
   104	    // Add current attempt
   105	    validAttempts.push(now);
   106	    this.attempts.set(key, validAttempts);
   107	    
   108	    return true;
   109	  },
   110	
   111	  getRemainingAttempts(key, limit = 5, windowMs = 15 * 60 * 1000) {
   112	    const now = Date.now();
   113	    const userAttempts = this.attempts.get(key) || [];
   114	    const validAttempts = userAttempts.filter(time => now - time < windowMs);
   115	    
   116	    return Math.max(0, limit - validAttempts.length);
   117	  }
   118	};
   119	
   120	// Audit logging
   121	export const auditLogger = {
   122	  log(event, userId, details = {}) {
   123	    const auditEntry = {
   124	      event,
   125	      userId,
   126	      details,
   127	      timestamp: new Date().toISOString(),
   128	      userAgent: navigator.userAgent,
   129	      sessionId: sessionStorage.getItem('session_id') || 'no_session'
   130	    };
   131	
   132	    // In development, log to console
   133	    if (import.meta.env.VITE_ENVIRONMENT === 'development') {
   134	      console.log('AUDIT LOG:', auditEntry);
   135	    }
   136	
   137	    // Store in local storage for debugging (remove in production)
   138	    const logs = JSON.parse(localStorage.getItem('audit_logs') || '[]');
   139	    logs.push(auditEntry);
   140	    localStorage.setItem('audit_logs', JSON.stringify(logs.slice(-100))); // Keep last 100
   141	  }
   142	};

========================================

üìÅ FILE: src/contexts/AuthContext.jsx
   Size: 2.5K | Modified: 2025-06-02
----------------------------------------
     1	import React, { createContext, useContext, useState, useEffect } from 'react';
     2	import pb, { auth, handlePocketBaseError } from '../lib/pocketbase';
     3	
     4	const AuthContext = createContext({});
     5	
     6	export const useAuth = () => {
     7	  const context = useContext(AuthContext);
     8	  if (!context) {
     9	    throw new Error('useAuth must be used within an AuthProvider');
    10	  }
    11	  return context;
    12	};
    13	
    14	export const AuthProvider = ({ children }) => {
    15	  const [user, setUser] = useState(null);
    16	  const [loading, setLoading] = useState(true);
    17	  const [error, setError] = useState(null);
    18	
    19	  useEffect(() => {
    20	    if (pb.authStore.isValid) {
    21	      setUser(pb.authStore.model);
    22	    }
    23	    setLoading(false);
    24	
    25	    const unsubscribe = pb.authStore.onChange((token, model) => {
    26	      setUser(model);
    27	    });
    28	
    29	    return unsubscribe;
    30	  }, []);
    31	
    32	  const login = async (email, password) => {
    33	    try {
    34	      setLoading(true);
    35	      setError(null);
    36	      
    37	      const authData = await auth.login(email, password);
    38	      setUser(authData.record);
    39	      
    40	      return authData;
    41	    } catch (err) {
    42	      const errorData = handlePocketBaseError(err);
    43	      setError(errorData);
    44	      throw errorData;
    45	    } finally {
    46	      setLoading(false);
    47	    }
    48	  };
    49	
    50	  const register = async (userData) => {
    51	    try {
    52	      setLoading(true);
    53	      setError(null);
    54	      
    55	      const user = await auth.register({
    56	        ...userData,
    57	        emailVisibility: true,
    58	        passwordConfirm: userData.password
    59	      });
    60	
    61	      const authData = await auth.login(userData.email, userData.password);
    62	      setUser(authData.record);
    63	      
    64	      return authData;
    65	    } catch (err) {
    66	      const errorData = handlePocketBaseError(err);
    67	      setError(errorData);
    68	      throw errorData;
    69	    } finally {
    70	      setLoading(false);
    71	    }
    72	  };
    73	
    74	  const logout = () => {
    75	    auth.logout();
    76	    setUser(null);
    77	    setError(null);
    78	  };
    79	
    80	  const updateProfile = async (userData) => {
    81	    try {
    82	      setLoading(true);
    83	      setError(null);
    84	      
    85	      const updatedUser = await pb.collection('users').update(user.id, userData);
    86	      setUser(updatedUser);
    87	      
    88	      return updatedUser;
    89	    } catch (err) {
    90	      const errorData = handlePocketBaseError(err);
    91	      setError(errorData);
    92	      throw errorData;
    93	    } finally {
    94	      setLoading(false);
    95	    }
    96	  };
    97	
    98	  const value = {
    99	    user,
   100	    loading,
   101	    error,
   102	    login,
   103	    register,
   104	    logout,
   105	    updateProfile,
   106	    isAuthenticated: !!user
   107	  };
   108	
   109	  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
   110	};

========================================

üìÅ FILE: src/hooks/useApplications.js
   Size: 1.9K | Modified: 2025-06-02
----------------------------------------
     1	// src/hooks/useApplications.js - Fixed import
     2	import { useState, useEffect } from 'react';
     3	import ApplicationService from '../services/ApplicationService.js';
     4	
     5	export const useApplications = (stallholderId, filters = {}) => {
     6	  const [applications, setApplications] = useState([]);
     7	  const [loading, setLoading] = useState(true);
     8	  const [error, setError] = useState(null);
     9	  const [pagination, setPagination] = useState(null);
    10	
    11	  useEffect(() => {
    12	    if (stallholderId) {
    13	      fetchApplications();
    14	    }
    15	  }, [stallholderId, filters]);
    16	
    17	  const fetchApplications = async () => {
    18	    try {
    19	      setLoading(true);
    20	      const result = await ApplicationService.getStallholderApplications(stallholderId, filters);
    21	      setApplications(result.items);
    22	      setPagination({
    23	        page: result.page,
    24	        perPage: result.perPage,
    25	        totalItems: result.totalItems,
    26	        totalPages: result.totalPages
    27	      });
    28	    } catch (err) {
    29	      setError(err.message);
    30	    } finally {
    31	      setLoading(false);
    32	    }
    33	  };
    34	
    35	  const submitApplication = async (applicationData) => {
    36	    try {
    37	      const newApplication = await ApplicationService.submitApplication(applicationData);
    38	      setApplications(prev => [newApplication, ...prev]);
    39	      return newApplication;
    40	    } catch (err) {
    41	      setError(err.message);
    42	      throw err;
    43	    }
    44	  };
    45	
    46	  const cancelApplication = async (applicationId) => {
    47	    try {
    48	      await ApplicationService.cancelApplication(applicationId);
    49	      setApplications(prev => 
    50	        prev.map(app => 
    51	          app.id === applicationId 
    52	            ? { ...app, status: 'cancelled' }
    53	            : app
    54	        )
    55	      );
    56	    } catch (err) {
    57	      setError(err.message);
    58	      throw err;
    59	    }
    60	  };
    61	
    62	  return {
    63	    applications,
    64	    loading,
    65	    error,
    66	    pagination,
    67	    submitApplication,
    68	    cancelApplication,
    69	    refetch: fetchApplications
    70	  };
    71	};

========================================

üìÅ FILE: src/hooks/useStallholder.js
   Size: 1.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/hooks/useStallholder.js - Fixed import path
     2	import { useState, useEffect } from 'react';
     3	import StallholderService from '../services/StallholderService.js';
     4	import { useAuth } from '../contexts/AuthContext';
     5	
     6	export const useStallholder = () => {
     7	  const [stallholder, setStallholder] = useState(null);
     8	  const [loading, setLoading] = useState(true);
     9	  const [error, setError] = useState(null);
    10	  const { user } = useAuth();
    11	
    12	  useEffect(() => {
    13	    if (user && user.role === 'stallholder') {
    14	      fetchStallholder();
    15	    } else {
    16	      setLoading(false);
    17	    }
    18	  }, [user]);
    19	
    20	  const fetchStallholder = async () => {
    21	    try {
    22	      setLoading(true);
    23	      // Get stallholder profile for current user
    24	      const result = await StallholderService.getStallholders({
    25	        user: user.id
    26	      });
    27	      
    28	      if (result.items.length > 0) {
    29	        setStallholder(result.items[0]);
    30	      }
    31	    } catch (err) {
    32	      setError(err.message);
    33	    } finally {
    34	      setLoading(false);
    35	    }
    36	  };
    37	
    38	  return {
    39	    stallholder,
    40	    loading,
    41	    error,
    42	    updateStallholder,
    43	    createStallholder,
    44	    refetch: fetchStallholder
    45	  };
    46	};

========================================

üìÅ FILE: src/services/ApplicationService.js
   Size: 4.5K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/ApplicationService.js - Fix the import and missing methods
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	
     5	class ApplicationService {
     6	  // Get applications for market organizer
     7	  async getMarketApplications(marketId, filters = {}) {
     8	    try {
     9	      const filterConditions = [`market = "${marketId}"`];
    10	      
    11	      if (filters.status) {
    12	        filterConditions.push(`status = "${filters.status}"`);
    13	      }
    14	
    15	      const result = await pb.collection('applications').getList(
    16	        filters.page || 1,
    17	        filters.perPage || 20,
    18	        {
    19	          filter: filterConditions.join(' && '),
    20	          sort: '-created',
    21	          expand: 'stallholder,stallholder.user,market'
    22	        }
    23	      );
    24	
    25	      return result;
    26	    } catch (error) {
    27	      console.error('Error fetching market applications:', error);
    28	      throw error;
    29	    }
    30	  }
    31	
    32	  // Get applications for stallholder (method that was missing)
    33	  async getStallholderApplications(stallholderId, filters = {}) {
    34	    try {
    35	      const filterConditions = [`stallholder = "${stallholderId}"`];
    36	      
    37	      if (filters.status) {
    38	        filterConditions.push(`status = "${filters.status}"`);
    39	      }
    40	
    41	      const result = await pb.collection('applications').getList(
    42	        filters.page || 1,
    43	        filters.perPage || 20,
    44	        {
    45	          filter: filterConditions.join(' && '),
    46	          sort: '-created',
    47	          expand: 'market,stallholder'
    48	        }
    49	      );
    50	
    51	      return result;
    52	    } catch (error) {
    53	      console.error('Error fetching stallholder applications:', error);
    54	      throw error;
    55	    }
    56	  }
    57	
    58	  // Submit application to market
    59	  async submitApplication(applicationData) {
    60	    try {
    61	      const application = await pb.collection('applications').create({
    62	        ...applicationData,
    63	        status: 'pending',
    64	        payment_status: 'unpaid'
    65	      });
    66	      
    67	      auditLogger.log('application_submitted', pb.authStore.model?.id, {
    68	        applicationId: application.id,
    69	        marketId: applicationData.market,
    70	        stallholderId: applicationData.stallholder
    71	      });
    72	
    73	      return application;
    74	    } catch (error) {
    75	      console.error('Error submitting application:', error);
    76	      throw error;
    77	    }
    78	  }
    79	
    80	  // Update application status
    81	  async updateApplicationStatus(applicationId, status, organizerNotes = '') {
    82	    try {
    83	      const application = await pb.collection('applications').update(applicationId, {
    84	        status,
    85	        organizer_notes: organizerNotes
    86	      });
    87	      
    88	      auditLogger.log('application_status_updated', pb.authStore.model?.id, {
    89	        applicationId,
    90	        newStatus: status
    91	      });
    92	
    93	      return application;
    94	    } catch (error) {
    95	      console.error('Error updating application status:', error);
    96	      throw error;
    97	    }
    98	  }
    99	
   100	  // Get application statistics for market
   101	  async getApplicationStats(marketId) {
   102	    try {
   103	      const applications = await pb.collection('applications').getFullList({
   104	        filter: `market = "${marketId}"`
   105	      });
   106	
   107	      const stats = {
   108	        total: applications.length,
   109	        pending: applications.filter(app => app.status === 'pending').length,
   110	        approved: applications.filter(app => app.status === 'approved').length,
   111	        rejected: applications.filter(app => app.status === 'rejected').length,
   112	        cancelled: applications.filter(app => app.status === 'cancelled').length
   113	      };
   114	
   115	      return stats;
   116	    } catch (error) {
   117	      console.error('Error fetching application stats:', error);
   118	      throw error;
   119	    }
   120	  }
   121	
   122	  // Check if stallholder has existing application for market
   123	  async checkExistingApplication(stallholderId, marketId) {
   124	    try {
   125	      const existing = await pb.collection('applications').getFirstListItem(
   126	        `stallholder = "${stallholderId}" && market = "${marketId}" && status != "cancelled" && status != "rejected"`
   127	      );
   128	      return existing;
   129	    } catch (error) {
   130	      if (error.status === 404) {
   131	        return null; // No existing application
   132	      }
   133	      throw error;
   134	    }
   135	  }
   136	
   137	  // Cancel application
   138	  async cancelApplication(applicationId) {
   139	    try {
   140	      const application = await pb.collection('applications').update(applicationId, {
   141	        status: 'cancelled'
   142	      });
   143	      
   144	      auditLogger.log('application_cancelled', pb.authStore.model?.id, {
   145	        applicationId
   146	      });
   147	
   148	      return application;
   149	    } catch (error) {
   150	      console.error('Error cancelling application:', error);
   151	      throw error;
   152	    }
   153	  }
   154	}
   155	
   156	export default new ApplicationService();

========================================

üìÅ FILE: src/services/StallholderService.js
   Size: 5.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/StallholderService.js - Updated to fix import issues
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	import ApplicationService from './ApplicationService.js';
     5	
     6	class StallholderService {
     7	  // Get all stallholders with filtering
     8	  async getStallholders(filters = {}) {
     9	    try {
    10	      const filterConditions = ['user != ""']; // Changed from 'active = true' since we don't have that field
    11	      
    12	      if (filters.category) {
    13	        filterConditions.push(`product_categories ~ "${filters.category}"`);
    14	      }
    15	      
    16	      if (filters.state) {
    17	        filterConditions.push(`state = "${filters.state}"`);
    18	      }
    19	      
    20	      if (filters.search) {
    21	        filterConditions.push(`(business_name ~ "${filters.search}" || description ~ "${filters.search}")`);
    22	      }
    23	
    24	      if (filters.rating) {
    25	        filterConditions.push(`rating >= ${filters.rating}`);
    26	      }
    27	
    28	      if (filters.user) {
    29	        filterConditions.push(`user = "${filters.user}"`);
    30	      }
    31	
    32	      const result = await pb.collection('stallholders').getList(
    33	        filters.page || 1,
    34	        filters.perPage || 20,
    35	        {
    36	          filter: filterConditions.join(' && '),
    37	          sort: filters.sort || '-created',
    38	          expand: 'user'
    39	        }
    40	      );
    41	
    42	      return result;
    43	    } catch (error) {
    44	      console.error('Error fetching stallholders:', error);
    45	      throw error;
    46	    }
    47	  }
    48	
    49	  // Get single stallholder
    50	  async getStallholder(id) {
    51	    try {
    52	      const stallholder = await pb.collection('stallholders').getOne(id, {
    53	        expand: 'user'
    54	      });
    55	      return stallholder;
    56	    } catch (error) {
    57	      console.error('Error fetching stallholder:', error);
    58	      throw error;
    59	    }
    60	  }
    61	
    62	  // Create stallholder profile
    63	  async createStallholder(stallholderData) {
    64	    try {
    65	      const stallholder = await pb.collection('stallholders').create(stallholderData);
    66	      
    67	      auditLogger.log('stallholder_created', pb.authStore.model?.id, {
    68	        stallholderId: stallholder.id,
    69	        businessName: stallholder.business_name
    70	      });
    71	
    72	      return stallholder;
    73	    } catch (error) {
    74	      console.error('Error creating stallholder:', error);
    75	      throw error;
    76	    }
    77	  }
    78	
    79	  // Update stallholder profile
    80	  async updateStallholder(id, stallholderData) {
    81	    try {
    82	      const stallholder = await pb.collection('stallholders').update(id, stallholderData);
    83	      
    84	      auditLogger.log('stallholder_updated', pb.authStore.model?.id, {
    85	        stallholderId: id,
    86	        changes: Object.keys(stallholderData)
    87	      });
    88	
    89	      return stallholder;
    90	    } catch (error) {
    91	      console.error('Error updating stallholder:', error);
    92	      throw error;
    93	    }
    94	  }
    95	
    96	  // Get stallholder's applications - now properly delegated
    97	  async getApplications(stallholderId, filters = {}) {
    98	    return ApplicationService.getStallholderApplications(stallholderId, filters);
    99	  }
   100	
   101	  // Submit application to market - now properly delegated
   102	  async submitApplication(applicationData) {
   103	    return ApplicationService.submitApplication(applicationData);
   104	  }
   105	
   106	  // Get reviews for stallholder
   107	  async getReviews(stallholderId) {
   108	    try {
   109	      const reviews = await pb.collection('reviews').getList(1, 50, {
   110	        filter: `target_id = "${stallholderId}" && target_type = "stallholder"`,
   111	        sort: '-created',
   112	        expand: 'reviewer'
   113	      });
   114	      return reviews;
   115	    } catch (error) {
   116	      console.error('Error fetching reviews:', error);
   117	      throw error;
   118	    }
   119	  }
   120	
   121	  // Add review for stallholder
   122	  async addReview(reviewData) {
   123	    try {
   124	      const review = await pb.collection('reviews').create({
   125	        ...reviewData,
   126	        target_type: 'stallholder'
   127	      });
   128	
   129	      // Update stallholder rating
   130	      await this.updateStallholderRating(reviewData.target_id);
   131	      
   132	      auditLogger.log('review_added', pb.authStore.model?.id, {
   133	        reviewId: review.id,
   134	        targetId: reviewData.target_id,
   135	        rating: reviewData.rating
   136	      });
   137	
   138	      return review;
   139	    } catch (error) {
   140	      console.error('Error adding review:', error);
   141	      throw error;
   142	    }
   143	  }
   144	
   145	  // Update stallholder's average rating
   146	  async updateStallholderRating(stallholderId) {
   147	    try {
   148	      const reviews = await pb.collection('reviews').getFullList({
   149	        filter: `target_id = "${stallholderId}" && target_type = "stallholder"`
   150	      });
   151	
   152	      if (reviews.length === 0) return;
   153	
   154	      const totalRating = reviews.reduce((sum, review) => sum + review.rating, 0);
   155	      const averageRating = totalRating / reviews.length;
   156	
   157	      await pb.collection('stallholders').update(stallholderId, {
   158	        rating: Math.round(averageRating * 10) / 10, // Round to 1 decimal
   159	        reviews_count: reviews.length
   160	      });
   161	    } catch (error) {
   162	      console.error('Error updating stallholder rating:', error);
   163	    }
   164	  }
   165	
   166	  // Get product categories
   167	  async getProductCategories() {
   168	    return [
   169	      'Fresh Produce',
   170	      'Baked Goods',
   171	      'Arts & Crafts',
   172	      'Clothing & Accessories',
   173	      'Food & Beverages',
   174	      'Home & Garden',
   175	      'Beauty & Wellness',
   176	      'Books & Media',
   177	      'Vintage & Antiques',
   178	      'Handmade Jewelry',
   179	      'Plants & Flowers',
   180	      'Other'
   181	    ];
   182	  }
   183	}
   184	
   185	export default new StallholderService();

========================================

üìÅ FILE: src/services/marketService.js
   Size: 5.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/marketService.js - Updated with better error handling
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	
     5	class MarketService {
     6	  // Get all active markets
     7	  async getMarkets(filters = {}) {
     8	    try {
     9	      const filterConditions = []; // Removed 'active = true' since the field might not exist yet
    10	      
    11	      if (filters.state) {
    12	        filterConditions.push(`state = "${filters.state}"`);
    13	      }
    14	      
    15	      if (filters.category) {
    16	        filterConditions.push(`category = "${filters.category}"`);
    17	      }
    18	      
    19	      if (filters.search) {
    20	        filterConditions.push(`(name ~ "${filters.search}" || suburb ~ "${filters.search}" || description ~ "${filters.search}")`);
    21	      }
    22	
    23	      const filterString = filterConditions.length > 0 ? filterConditions.join(' && ') : '';
    24	
    25	      const result = await pb.collection('markets').getList(
    26	        filters.page || 1,
    27	        filters.perPage || 20,
    28	        {
    29	          filter: filterString,
    30	          sort: filters.sort || '-created',
    31	          expand: 'category,organizer'
    32	        }
    33	      );
    34	
    35	      return result;
    36	    } catch (error) {
    37	      console.error('Error fetching markets:', error);
    38	      throw error;
    39	    }
    40	  }
    41	
    42	  // Get single market by ID or slug
    43	  async getMarket(idOrSlug) {
    44	    try {
    45	      const market = await pb.collection('markets').getFirstListItem(
    46	        `id = "${idOrSlug}" || slug = "${idOrSlug}"`,
    47	        {
    48	          expand: 'category,organizer'
    49	        }
    50	      );
    51	
    52	      return market;
    53	    } catch (error) {
    54	      console.error('Error fetching market:', error);
    55	      throw error;
    56	    }
    57	  }
    58	
    59	  // Create new market
    60	  async createMarket(marketData) {
    61	    try {
    62	      const market = await pb.collection('markets').create(marketData);
    63	      
    64	      auditLogger.log('market_created', pb.authStore.model?.id, {
    65	        marketId: market.id,
    66	        marketName: market.name
    67	      });
    68	
    69	      return market;
    70	    } catch (error) {
    71	      console.error('Error creating market:', error);
    72	      throw error;
    73	    }
    74	  }
    75	
    76	  // Update market
    77	  async updateMarket(id, marketData) {
    78	    try {
    79	      const market = await pb.collection('markets').update(id, marketData);
    80	      
    81	      auditLogger.log('market_updated', pb.authStore.model?.id, {
    82	        marketId: id,
    83	        changes: Object.keys(marketData)
    84	      });
    85	
    86	      return market;
    87	    } catch (error) {
    88	      console.error('Error updating market:', error);
    89	      throw error;
    90	    }
    91	  }
    92	
    93	  // Delete market
    94	  async deleteMarket(id) {
    95	    try {
    96	      await pb.collection('markets').delete(id);
    97	      
    98	      auditLogger.log('market_deleted', pb.authStore.model?.id, {
    99	        marketId: id
   100	      });
   101	
   102	      return true;
   103	    } catch (error) {
   104	      console.error('Error deleting market:', error);
   105	      throw error;
   106	    }
   107	  }
   108	
   109	  // Search markets by location (geolocation)
   110	  async searchNearby(latitude, longitude, radiusKm = 25) {
   111	    try {
   112	      // This is a simplified version - in production you'd use proper geospatial queries
   113	      const markets = await pb.collection('markets').getList(1, 50, {
   114	        filter: 'latitude != null && longitude != null',
   115	        expand: 'category'
   116	      });
   117	
   118	      // Calculate distances client-side (in production, do this server-side)
   119	      const marketsWithDistance = markets.items.map(market => {
   120	        const distance = this.calculateDistance(
   121	          latitude, longitude,
   122	          market.latitude, market.longitude
   123	        );
   124	        return { ...market, distance };
   125	      });
   126	
   127	      // Filter by radius and sort by distance
   128	      return marketsWithDistance
   129	        .filter(market => market.distance <= radiusKm)
   130	        .sort((a, b) => a.distance - b.distance);
   131	    } catch (error) {
   132	      console.error('Error searching nearby markets:', error);
   133	      throw error;
   134	    }
   135	  }
   136	
   137	  // Calculate distance between two points (Haversine formula)
   138	  calculateDistance(lat1, lon1, lat2, lon2) {
   139	    const R = 6371; // Earth's radius in kilometers
   140	    const dLat = this.deg2rad(lat2 - lat1);
   141	    const dLon = this.deg2rad(lon2 - lon1);
   142	    const a = 
   143	      Math.sin(dLat/2) * Math.sin(dLat/2) +
   144	      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * 
   145	      Math.sin(dLon/2) * Math.sin(dLon/2);
   146	    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
   147	    return R * c;
   148	  }
   149	
   150	  deg2rad(deg) {
   151	    return deg * (Math.PI/180);
   152	  }
   153	
   154	  // Get market categories - handle case where collection might not exist yet
   155	  async getCategories() {
   156	    try {
   157	      const categories = await pb.collection('market_categories').getFullList({
   158	        sort: 'name'
   159	      });
   160	      return categories;
   161	    } catch (error) {
   162	      console.error('Error fetching categories:', error);
   163	      // Return default categories if collection doesn't exist yet
   164	      return [
   165	        { id: 'farmers', name: 'Farmers Market', color: '#22c55e' },
   166	        { id: 'craft', name: 'Craft & Artisan', color: '#8b5cf6' },
   167	        { id: 'community', name: 'Community Market', color: '#3b82f6' },
   168	        { id: 'specialty', name: 'Specialty Market', color: '#f59e0b' },
   169	        { id: 'food', name: 'Food Market', color: '#ef4444' },
   170	        { id: 'vintage', name: 'Vintage & Antiques', color: '#6b7280' }
   171	      ];
   172	    }
   173	  }
   174	}
   175	
   176	export default new MarketService();

========================================

üìÅ FILE: src/components/auth/ProtectedRoute.jsx
   Size: 749 | Modified: 2025-06-02
----------------------------------------
     1	// src/components/auth/ProtectedRoute.jsx
     2	import { Navigate, useLocation } from 'react-router-dom'
     3	import { useAuth } from '../../contexts/AuthContext'
     4	
     5	export default function ProtectedRoute({ children, requiredRole = null }) {
     6	  const { user, loading } = useAuth()
     7	  const location = useLocation()
     8	
     9	  if (loading) {
    10	    return (
    11	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    12	        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
    13	      </div>
    14	    )
    15	  }
    16	
    17	  if (!user) {
    18	    return <Navigate to="/login" state={{ from: location }} replace />
    19	  }
    20	
    21	  if (requiredRole && user.role !== requiredRole) {
    22	    return <Navigate to="/dashboard" replace />
    23	  }
    24	
    25	  return children
    26	}

========================================

üìÅ FILE: src/components/layout/Footer.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { MapPin, Mail, Phone, Facebook, Instagram, Twitter } from 'lucide-react'
     3	
     4	export default function Footer() {
     5	  return (
     6	    <footer className="bg-gray-900 text-white">
     7	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
     8	        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
     9	          {/* Brand */}
    10	          <div className="col-span-1 md:col-span-2">
    11	            <div className="flex items-center space-x-2 mb-4">
    12	              <MapPin className="h-8 w-8 text-primary-400" />
    13	              <span className="text-xl font-bold">SA Markets Directory</span>
    14	            </div>
    15	            <p className="text-gray-300 mb-4 max-w-md">
    16	              Connecting communities through vibrant local markets across South Australia. 
    17	              Discover fresh produce, unique crafts, and local businesses in your area.
    18	            </p>
    19	            <div className="flex space-x-4">
    20	              <Facebook className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    21	              <Instagram className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    22	              <Twitter className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    23	            </div>
    24	          </div>
    25	
    26	          {/* Quick Links */}
    27	          <div>
    28	            <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
    29	            <ul className="space-y-2">
    30	              <li><Link to="/markets" className="text-gray-300 hover:text-primary-400 transition-colors">Browse Markets</Link></li>
    31	              <li><Link to="/stallholders" className="text-gray-300 hover:text-primary-400 transition-colors">For Stallholders</Link></li>
    32	              <li><Link to="/organizers" className="text-gray-300 hover:text-primary-400 transition-colors">For Organizers</Link></li>
    33	              <li><Link to="/about" className="text-gray-300 hover:text-primary-400 transition-colors">About Us</Link></li>
    34	              <li><Link to="/contact" className="text-gray-300 hover:text-primary-400 transition-colors">Contact</Link></li>
    35	            </ul>
    36	          </div>
    37	
    38	          {/* Support */}
    39	          <div>
    40	            <h3 className="text-lg font-semibold mb-4">Support</h3>
    41	            <ul className="space-y-2">
    42	              <li><Link to="/help" className="text-gray-300 hover:text-primary-400 transition-colors">Help Center</Link></li>
    43	              <li><Link to="/privacy" className="text-gray-300 hover:text-primary-400 transition-colors">Privacy Policy</Link></li>
    44	              <li><Link to="/terms" className="text-gray-300 hover:text-primary-400 transition-colors">Terms of Service</Link></li>
    45	              <li>
    46	                <div className="flex items-center space-x-2 text-gray-300">
    47	                  <Mail className="h-4 w-4" />
    48	                  <span>hello@samarkets.com.au</span>
    49	                </div>
    50	              </li>
    51	            </ul>
    52	          </div>
    53	        </div>
    54	
    55	        <hr className="border-gray-800 my-8" />
    56	
    57	        <div className="flex flex-col md:flex-row justify-between items-center">
    58	          <p className="text-gray-400 text-sm">
    59	            ¬© 2025 SA Markets Directory. All rights reserved.
    60	          </p>
    61	          <p className="text-gray-400 text-sm mt-2 md:mt-0">
    62	            Built with ‚ù§Ô∏è for Australian communities
    63	          </p>
    64	        </div>
    65	      </div>
    66	    </footer>
    67	  )
    68	}

========================================

üìÅ FILE: src/components/layout/Header.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Menu, X, MapPin, User } from 'lucide-react'
     4	
     5	export default function Header() {
     6	  const [isMenuOpen, setIsMenuOpen] = useState(false)
     7	
     8	  return (
     9	    <header className="bg-white shadow-sm border-b">
    10	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    11	        <div className="flex justify-between items-center h-16">
    12	          {/* Logo */}
    13	          <Link to="/" className="flex items-center space-x-2">
    14	            <MapPin className="h-8 w-8 text-primary-600" />
    15	            <span className="text-xl font-bold text-gray-900">SA Markets</span>
    16	          </Link>
    17	
    18	          {/* Desktop Navigation */}
    19	          <nav className="hidden md:flex space-x-8">
    20	            <Link to="/markets" className="text-gray-700 hover:text-primary-600 transition-colors">
    21	              Browse Markets
    22	            </Link>
    23	            <Link to="/stallholders" className="text-gray-700 hover:text-primary-600 transition-colors">
    24	              For Stallholders
    25	            </Link>
    26	            <Link to="/organizers" className="text-gray-700 hover:text-primary-600 transition-colors">
    27	              For Organizers
    28	            </Link>
    29	            <Link to="/about" className="text-gray-700 hover:text-primary-600 transition-colors">
    30	              About
    31	            </Link>
    32	          </nav>
    33	
    34	          {/* Desktop Auth Buttons */}
    35	          <div className="hidden md:flex items-center space-x-4">
    36	            <Link to="/login" className="text-gray-700 hover:text-primary-600 transition-colors">
    37	              Log In
    38	            </Link>
    39	            <Link to="/register" className="btn-primary">
    40	              Sign Up
    41	            </Link>
    42	            <Link to="/dashboard" className="text-gray-700 hover:text-primary-600 transition-colors">
    43	              <User className="h-5 w-5" />
    44	            </Link>
    45	          </div>
    46	
    47	          {/* Mobile menu button */}
    48	          <button
    49	            onClick={() => setIsMenuOpen(!isMenuOpen)}
    50	            className="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600 hover:bg-gray-100"
    51	          >
    52	            {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
    53	          </button>
    54	        </div>
    55	
    56	        {/* Mobile Navigation */}
    57	        {isMenuOpen && (
    58	          <div className="md:hidden py-4 border-t">
    59	            <nav className="flex flex-col space-y-2">
    60	              <Link to="/markets" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    61	                Browse Markets
    62	              </Link>
    63	              <Link to="/stallholders" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    64	                For Stallholders
    65	              </Link>
    66	              <Link to="/organizers" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    67	                For Organizers
    68	              </Link>
    69	              <Link to="/about" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    70	                About
    71	              </Link>
    72	              <hr className="my-2" />
    73	              <Link to="/login" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    74	                Log In
    75	              </Link>
    76	              <Link to="/register" className="px-3 py-2 btn-primary text-center">
    77	                Sign Up
    78	              </Link>
    79	            </nav>
    80	          </div>
    81	        )}
    82	      </div>
    83	    </header>
    84	  )
    85	}

========================================

üìÅ FILE: src/components/layout/Layout.jsx
   Size: 287 | Modified: 2025-06-02
----------------------------------------
     1	import Header from './Header'
     2	import Footer from './Footer'
     3	
     4	export default function Layout({ children }) {
     5	  return (
     6	    <div className="min-h-screen flex flex-col">
     7	      <Header />
     8	      <main className="flex-grow">
     9	        {children}
    10	      </main>
    11	      <Footer />
    12	    </div>
    13	  )
    14	}

========================================

üìÅ FILE: src/components/auth/ProtectedRoute.jsx
   Size: 749 | Modified: 2025-06-02
----------------------------------------
     1	// src/components/auth/ProtectedRoute.jsx
     2	import { Navigate, useLocation } from 'react-router-dom'
     3	import { useAuth } from '../../contexts/AuthContext'
     4	
     5	export default function ProtectedRoute({ children, requiredRole = null }) {
     6	  const { user, loading } = useAuth()
     7	  const location = useLocation()
     8	
     9	  if (loading) {
    10	    return (
    11	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    12	        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
    13	      </div>
    14	    )
    15	  }
    16	
    17	  if (!user) {
    18	    return <Navigate to="/login" state={{ from: location }} replace />
    19	  }
    20	
    21	  if (requiredRole && user.role !== requiredRole) {
    22	    return <Navigate to="/dashboard" replace />
    23	  }
    24	
    25	  return children
    26	}

========================================

üìÅ FILE: src/components/layout/Footer.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { MapPin, Mail, Phone, Facebook, Instagram, Twitter } from 'lucide-react'
     3	
     4	export default function Footer() {
     5	  return (
     6	    <footer className="bg-gray-900 text-white">
     7	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
     8	        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
     9	          {/* Brand */}
    10	          <div className="col-span-1 md:col-span-2">
    11	            <div className="flex items-center space-x-2 mb-4">
    12	              <MapPin className="h-8 w-8 text-primary-400" />
    13	              <span className="text-xl font-bold">SA Markets Directory</span>
    14	            </div>
    15	            <p className="text-gray-300 mb-4 max-w-md">
    16	              Connecting communities through vibrant local markets across South Australia. 
    17	              Discover fresh produce, unique crafts, and local businesses in your area.
    18	            </p>
    19	            <div className="flex space-x-4">
    20	              <Facebook className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    21	              <Instagram className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    22	              <Twitter className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    23	            </div>
    24	          </div>
    25	
    26	          {/* Quick Links */}
    27	          <div>
    28	            <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
    29	            <ul className="space-y-2">
    30	              <li><Link to="/markets" className="text-gray-300 hover:text-primary-400 transition-colors">Browse Markets</Link></li>
    31	              <li><Link to="/stallholders" className="text-gray-300 hover:text-primary-400 transition-colors">For Stallholders</Link></li>
    32	              <li><Link to="/organizers" className="text-gray-300 hover:text-primary-400 transition-colors">For Organizers</Link></li>
    33	              <li><Link to="/about" className="text-gray-300 hover:text-primary-400 transition-colors">About Us</Link></li>
    34	              <li><Link to="/contact" className="text-gray-300 hover:text-primary-400 transition-colors">Contact</Link></li>
    35	            </ul>
    36	          </div>
    37	
    38	          {/* Support */}
    39	          <div>
    40	            <h3 className="text-lg font-semibold mb-4">Support</h3>
    41	            <ul className="space-y-2">
    42	              <li><Link to="/help" className="text-gray-300 hover:text-primary-400 transition-colors">Help Center</Link></li>
    43	              <li><Link to="/privacy" className="text-gray-300 hover:text-primary-400 transition-colors">Privacy Policy</Link></li>
    44	              <li><Link to="/terms" className="text-gray-300 hover:text-primary-400 transition-colors">Terms of Service</Link></li>
    45	              <li>
    46	                <div className="flex items-center space-x-2 text-gray-300">
    47	                  <Mail className="h-4 w-4" />
    48	                  <span>hello@samarkets.com.au</span>
    49	                </div>
    50	              </li>
    51	            </ul>
    52	          </div>
    53	        </div>
    54	
    55	        <hr className="border-gray-800 my-8" />
    56	
    57	        <div className="flex flex-col md:flex-row justify-between items-center">
    58	          <p className="text-gray-400 text-sm">
    59	            ¬© 2025 SA Markets Directory. All rights reserved.
    60	          </p>
    61	          <p className="text-gray-400 text-sm mt-2 md:mt-0">
    62	            Built with ‚ù§Ô∏è for Australian communities
    63	          </p>
    64	        </div>
    65	      </div>
    66	    </footer>
    67	  )
    68	}

========================================

üìÅ FILE: src/components/layout/Header.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Menu, X, MapPin, User } from 'lucide-react'
     4	
     5	export default function Header() {
     6	  const [isMenuOpen, setIsMenuOpen] = useState(false)
     7	
     8	  return (
     9	    <header className="bg-white shadow-sm border-b">
    10	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    11	        <div className="flex justify-between items-center h-16">
    12	          {/* Logo */}
    13	          <Link to="/" className="flex items-center space-x-2">
    14	            <MapPin className="h-8 w-8 text-primary-600" />
    15	            <span className="text-xl font-bold text-gray-900">SA Markets</span>
    16	          </Link>
    17	
    18	          {/* Desktop Navigation */}
    19	          <nav className="hidden md:flex space-x-8">
    20	            <Link to="/markets" className="text-gray-700 hover:text-primary-600 transition-colors">
    21	              Browse Markets
    22	            </Link>
    23	            <Link to="/stallholders" className="text-gray-700 hover:text-primary-600 transition-colors">
    24	              For Stallholders
    25	            </Link>
    26	            <Link to="/organizers" className="text-gray-700 hover:text-primary-600 transition-colors">
    27	              For Organizers
    28	            </Link>
    29	            <Link to="/about" className="text-gray-700 hover:text-primary-600 transition-colors">
    30	              About
    31	            </Link>
    32	          </nav>
    33	
    34	          {/* Desktop Auth Buttons */}
    35	          <div className="hidden md:flex items-center space-x-4">
    36	            <Link to="/login" className="text-gray-700 hover:text-primary-600 transition-colors">
    37	              Log In
    38	            </Link>
    39	            <Link to="/register" className="btn-primary">
    40	              Sign Up
    41	            </Link>
    42	            <Link to="/dashboard" className="text-gray-700 hover:text-primary-600 transition-colors">
    43	              <User className="h-5 w-5" />
    44	            </Link>
    45	          </div>
    46	
    47	          {/* Mobile menu button */}
    48	          <button
    49	            onClick={() => setIsMenuOpen(!isMenuOpen)}
    50	            className="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600 hover:bg-gray-100"
    51	          >
    52	            {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
    53	          </button>
    54	        </div>
    55	
    56	        {/* Mobile Navigation */}
    57	        {isMenuOpen && (
    58	          <div className="md:hidden py-4 border-t">
    59	            <nav className="flex flex-col space-y-2">
    60	              <Link to="/markets" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    61	                Browse Markets
    62	              </Link>
    63	              <Link to="/stallholders" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    64	                For Stallholders
    65	              </Link>
    66	              <Link to="/organizers" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    67	                For Organizers
    68	              </Link>
    69	              <Link to="/about" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    70	                About
    71	              </Link>
    72	              <hr className="my-2" />
    73	              <Link to="/login" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    74	                Log In
    75	              </Link>
    76	              <Link to="/register" className="px-3 py-2 btn-primary text-center">
    77	                Sign Up
    78	              </Link>
    79	            </nav>
    80	          </div>
    81	        )}
    82	      </div>
    83	    </header>
    84	  )
    85	}

========================================

üìÅ FILE: src/components/layout/Layout.jsx
   Size: 287 | Modified: 2025-06-02
----------------------------------------
     1	import Header from './Header'
     2	import Footer from './Footer'
     3	
     4	export default function Layout({ children }) {
     5	  return (
     6	    <div className="min-h-screen flex flex-col">
     7	      <Header />
     8	      <main className="flex-grow">
     9	        {children}
    10	      </main>
    11	      <Footer />
    12	    </div>
    13	  )
    14	}

========================================

üìÅ FILE: src/pages/Dashboard.jsx
   Size: 16K | Modified: 2025-06-02
----------------------------------------
     1	// src/pages/Dashboard.jsx - Enhanced with role-based content
     2	import { useState, useEffect } from 'react'
     3	import { Link } from 'react-router-dom'
     4	import { User, MapPin, ShoppingBag, BarChart3, Plus, Calendar, Users } from 'lucide-react'
     5	import { useAuth } from '../contexts/AuthContext'
     6	
     7	export default function Dashboard() {
     8	  const [activeTab, setActiveTab] = useState('overview')
     9	  const { user } = useAuth()
    10	
    11	  if (!user) {
    12	    return (
    13	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    14	        <div className="text-center">
    15	          <p className="text-gray-600">Please log in to access your dashboard.</p>
    16	          <Link to="/login" className="btn-primary mt-4">
    17	            Log In
    18	          </Link>
    19	        </div>
    20	      </div>
    21	    )
    22	  }
    23	
    24	  const renderRoleSpecificContent = () => {
    25	    switch (user.role) {
    26	      case 'stallholder':
    27	        return <StallholderDashboard />
    28	      case 'organizer':
    29	        return <OrganizerDashboard />
    30	      default:
    31	        return <CustomerDashboard />
    32	    }
    33	  }
    34	
    35	  return (
    36	    <div className="min-h-screen bg-gray-50 py-8">
    37	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    38	        {/* Header */}
    39	        <div className="mb-8">
    40	          <h1 className="text-3xl font-bold text-gray-900 mb-2">
    41	            Welcome back, {user.name}!
    42	          </h1>
    43	          <p className="text-gray-600">
    44	            {user.role === 'stallholder' && 'Manage your stallholder profile and applications'}
    45	            {user.role === 'organizer' && 'Manage your markets and stallholder applications'}
    46	            {user.role === 'customer' && 'Discover and save your favorite markets'}
    47	          </p>
    48	        </div>
    49	
    50	        {renderRoleSpecificContent()}
    51	      </div>
    52	    </div>
    53	  )
    54	}
    55	
    56	// Customer Dashboard Component
    57	const CustomerDashboard = () => {
    58	  return (
    59	    <div>
    60	      {/* Quick Stats */}
    61	      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    62	        <div className="card">
    63	          <div className="flex items-center">
    64	            <div className="bg-primary-100 rounded-lg p-3">
    65	              <MapPin className="h-6 w-6 text-primary-600" />
    66	            </div>
    67	            <div className="ml-4">
    68	              <p className="text-2xl font-bold text-gray-900">12</p>
    69	              <p className="text-gray-600">Favorite Markets</p>
    70	            </div>
    71	          </div>
    72	        </div>
    73	        <div className="card">
    74	          <div className="flex items-center">
    75	            <div className="bg-secondary-100 rounded-lg p-3">
    76	              <Calendar className="h-6 w-6 text-secondary-600" />
    77	            </div>
    78	            <div className="ml-4">
    79	              <p className="text-2xl font-bold text-gray-900">3</p>
    80	              <p className="text-gray-600">This Weekend</p>
    81	            </div>
    82	          </div>
    83	        </div>
    84	        <div className="card">
    85	          <div className="flex items-center">
    86	            <div className="bg-green-100 rounded-lg p-3">
    87	              <User className="h-6 w-6 text-green-600" />
    88	            </div>
    89	            <div className="ml-4">
    90	              <p className="text-2xl font-bold text-gray-900">Free</p>
    91	              <p className="text-gray-600">Current Plan</p>
    92	            </div>
    93	          </div>
    94	        </div>
    95	      </div>
    96	
    97	      {/* Recent Activity */}
    98	      <div className="bg-white rounded-lg shadow p-6 mb-8">
    99	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Upcoming Markets</h2>
   100	        <div className="space-y-4">
   101	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   102	            <div>
   103	              <h3 className="font-medium text-gray-900">Adelaide Central Market</h3>
   104	              <p className="text-sm text-gray-600">Saturday, June 7 ‚Ä¢ 7:00 AM - 2:00 PM</p>
   105	            </div>
   106	            <Link to="/markets/adelaide-central" className="btn-primary">
   107	              View Details
   108	            </Link>
   109	          </div>
   110	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   111	            <div>
   112	              <h3 className="font-medium text-gray-900">Barossa Farmers Market</h3>
   113	              <p className="text-sm text-gray-600">Saturday, June 7 ‚Ä¢ 7:30 AM - 11:30 AM</p>
   114	            </div>
   115	            <Link to="/markets/barossa-farmers" className="btn-primary">
   116	              View Details
   117	            </Link>
   118	          </div>
   119	        </div>
   120	      </div>
   121	
   122	      {/* Quick Actions */}
   123	      <div className="bg-white rounded-lg shadow p-6">
   124	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   125	        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
   126	          <Link to="/markets" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   127	            <MapPin className="h-8 w-8 text-primary-600 mr-4" />
   128	            <div>
   129	              <h3 className="font-medium text-gray-900">Browse Markets</h3>
   130	              <p className="text-sm text-gray-600">Find new markets in your area</p>
   131	            </div>
   132	          </Link>
   133	          <Link to="/register?role=stallholder" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   134	            <ShoppingBag className="h-8 w-8 text-secondary-600 mr-4" />
   135	            <div>
   136	              <h3 className="font-medium text-gray-900">Become a Stallholder</h3>
   137	              <p className="text-sm text-gray-600">Start selling at local markets</p>
   138	            </div>
   139	          </Link>
   140	        </div>
   141	      </div>
   142	    </div>
   143	  )
   144	}
   145	
   146	// Stallholder Dashboard Component
   147	const StallholderDashboard = () => {
   148	  return (
   149	    <div>
   150	      {/* Quick Stats */}
   151	      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
   152	        <div className="card">
   153	          <div className="flex items-center">
   154	            <div className="bg-primary-100 rounded-lg p-3">
   155	              <ShoppingBag className="h-6 w-6 text-primary-600" />
   156	            </div>
   157	            <div className="ml-4">
   158	              <p className="text-2xl font-bold text-gray-900">5</p>
   159	              <p className="text-gray-600">Active Applications</p>
   160	            </div>
   161	          </div>
   162	        </div>
   163	        <div className="card">
   164	          <div className="flex items-center">
   165	            <div className="bg-green-100 rounded-lg p-3">
   166	              <BarChart3 className="h-6 w-6 text-green-600" />
   167	            </div>
   168	            <div className="ml-4">
   169	              <p className="text-2xl font-bold text-gray-900">3</p>
   170	              <p className="text-gray-600">Approved</p>
   171	            </div>
   172	          </div>
   173	        </div>
   174	        <div className="card">
   175	          <div className="flex items-center">
   176	            <div className="bg-yellow-100 rounded-lg p-3">
   177	              <Calendar className="h-6 w-6 text-yellow-600" />
   178	            </div>
   179	            <div className="ml-4">
   180	              <p className="text-2xl font-bold text-gray-900">2</p>
   181	              <p className="text-gray-600">This Weekend</p>
   182	            </div>
   183	          </div>
   184	        </div>
   185	        <div className="card">
   186	          <div className="flex items-center">
   187	            <div className="bg-purple-100 rounded-lg p-3">
   188	              <User className="h-6 w-6 text-purple-600" />
   189	            </div>
   190	            <div className="ml-4">
   191	              <p className="text-2xl font-bold text-gray-900">4.8</p>
   192	              <p className="text-gray-600">Rating</p>
   193	            </div>
   194	          </div>
   195	        </div>
   196	      </div>
   197	
   198	      {/* Recent Applications */}
   199	      <div className="bg-white rounded-lg shadow p-6 mb-8">
   200	        <div className="flex items-center justify-between mb-4">
   201	          <h2 className="text-xl font-semibold text-gray-900">Recent Applications</h2>
   202	          <Link to="/apply" className="btn-primary">
   203	            <Plus className="h-4 w-4 mr-2" />
   204	            New Application
   205	          </Link>
   206	        </div>
   207	        <div className="space-y-4">
   208	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   209	            <div>
   210	              <h3 className="font-medium text-gray-900">Adelaide Central Market</h3>
   211	              <p className="text-sm text-gray-600">Applied 2 days ago</p>
   212	            </div>
   213	            <span className="px-3 py-1 text-sm bg-yellow-100 text-yellow-800 rounded-full">
   214	              Pending
   215	            </span>
   216	          </div>
   217	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   218	            <div>
   219	              <h3 className="font-medium text-gray-900">Barossa Farmers Market</h3>
   220	              <p className="text-sm text-gray-600">Applied 1 week ago</p>
   221	            </div>
   222	            <span className="px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full">
   223	              Approved
   224	            </span>
   225	          </div>
   226	        </div>
   227	      </div>
   228	
   229	      {/* Quick Actions */}
   230	      <div className="bg-white rounded-lg shadow p-6">
   231	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   232	        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
   233	          <Link to="/profile" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   234	            <User className="h-8 w-8 text-primary-600 mr-4" />
   235	            <div>
   236	              <h3 className="font-medium text-gray-900">Update Profile</h3>
   237	              <p className="text-sm text-gray-600">Edit your business details</p>
   238	            </div>
   239	          </Link>
   240	          <Link to="/markets" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   241	            <MapPin className="h-8 w-8 text-secondary-600 mr-4" />
   242	            <div>
   243	              <h3 className="font-medium text-gray-900">Find Markets</h3>
   244	              <p className="text-sm text-gray-600">Discover new opportunities</p>
   245	            </div>
   246	          </Link>
   247	          <Link to="/analytics" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   248	            <BarChart3 className="h-8 w-8 text-green-600 mr-4" />
   249	            <div>
   250	              <h3 className="font-medium text-gray-900">View Analytics</h3>
   251	              <p className="text-sm text-gray-600">Track your performance</p>
   252	            </div>
   253	          </Link>
   254	        </div>
   255	      </div>
   256	    </div>
   257	  )
   258	}
   259	
   260	// Organizer Dashboard Component
   261	const OrganizerDashboard = () => {
   262	  return (
   263	    <div>
   264	      {/* Quick Stats */}
   265	      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
   266	        <div className="card">
   267	          <div className="flex items-center">
   268	            <div className="bg-primary-100 rounded-lg p-3">
   269	              <MapPin className="h-6 w-6 text-primary-600" />
   270	            </div>
   271	            <div className="ml-4">
   272	              <p className="text-2xl font-bold text-gray-900">3</p>
   273	              <p className="text-gray-600">Active Markets</p>
   274	            </div>
   275	          </div>
   276	        </div>
   277	        <div className="card">
   278	          <div className="flex items-center">
   279	            <div className="bg-secondary-100 rounded-lg p-3">
   280	              <Users className="h-6 w-6 text-secondary-600" />
   281	            </div>
   282	            <div className="ml-4">
   283	              <p className="text-2xl font-bold text-gray-900">47</p>
   284	              <p className="text-gray-600">Total Stallholders</p>
   285	            </div>
   286	          </div>
   287	        </div>
   288	        <div className="card">
   289	          <div className="flex items-center">
   290	            <div className="bg-yellow-100 rounded-lg p-3">
   291	              <ShoppingBag className="h-6 w-6 text-yellow-600" />
   292	            </div>
   293	            <div className="ml-4">
   294	              <p className="text-2xl font-bold text-gray-900">12</p>
   295	              <p className="text-gray-600">Pending Applications</p>
   296	            </div>
   297	          </div>
   298	        </div>
   299	        <div className="card">
   300	          <div className="flex items-center">
   301	            <div className="bg-green-100 rounded-lg p-3">
   302	              <BarChart3 className="h-6 w-6 text-green-600" />
   303	            </div>
   304	            <div className="ml-4">
   305	              <p className="text-2xl font-bold text-gray-900">$2,450</p>
   306	              <p className="text-gray-600">Monthly Revenue</p>
   307	            </div>
   308	          </div>
   309	        </div>
   310	      </div>
   311	
   312	      {/* Pending Applications */}
   313	      <div className="bg-white rounded-lg shadow p-6 mb-8">
   314	        <div className="flex items-center justify-between mb-4">
   315	          <h2 className="text-xl font-semibold text-gray-900">Pending Applications</h2>
   316	          <Link to="/applications" className="text-primary-600 hover:text-primary-500">
   317	            View all
   318	          </Link>
   319	        </div>
   320	        <div className="space-y-4">
   321	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   322	            <div className="flex items-center">
   323	              <div className="w-10 h-10 bg-gray-200 rounded-full mr-4"></div>
   324	              <div>
   325	                <h3 className="font-medium text-gray-900">Sarah's Organic Produce</h3>
   326	                <p className="text-sm text-gray-600">Applied for Adelaide Central Market</p>
   327	              </div>
   328	            </div>
   329	            <div className="flex space-x-2">
   330	              <button className="px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700">
   331	                Approve
   332	              </button>
   333	              <button className="px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700">
   334	                Reject
   335	              </button>
   336	            </div>
   337	          </div>
   338	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   339	            <div className="flex items-center">
   340	              <div className="w-10 h-10 bg-gray-200 rounded-full mr-4"></div>
   341	              <div>
   342	                <h3 className="font-medium text-gray-900">Handmade Crafts Co</h3>
   343	                <p className="text-sm text-gray-600">Applied for Barossa Farmers Market</p>
   344	              </div>
   345	            </div>
   346	            <div className="flex space-x-2">
   347	              <button className="px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700">
   348	                Approve
   349	              </button>
   350	              <button className="px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700">
   351	                Reject
   352	              </button>
   353	            </div>
   354	          </div>
   355	        </div>
   356	      </div>
   357	
   358	      {/* Quick Actions */}
   359	      <div className="bg-white rounded-lg shadow p-6">
   360	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   361	        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
   362	          <Link to="/markets/create" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   363	            <Plus className="h-8 w-8 text-primary-600 mr-4" />
   364	            <div>
   365	              <h3 className="font-medium text-gray-900">Create Market</h3>
   366	              <p className="text-sm text-gray-600">Add a new market listing</p>
   367	            </div>
   368	          </Link>
   369	          <Link to="/applications" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   370	            <Users className="h-8 w-8 text-secondary-600 mr-4" />
   371	            <div>
   372	              <h3 className="font-medium text-gray-900">Manage Applications</h3>
   373	              <p className="text-sm text-gray-600">Review stallholder requests</p>
   374	            </div>
   375	          </Link>
   376	          <Link to="/analytics" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   377	            <BarChart3 className="h-8 w-8 text-green-600 mr-4" />
   378	            <div>
   379	              <h3 className="font-medium text-gray-900">View Analytics</h3>
   380	              <p className="text-sm text-gray-600">Market performance data</p>
   381	            </div>
   382	          </Link>
   383	        </div>
   384	      </div>
   385	    </div>
   386	  )
   387	}

========================================

üìÅ FILE: src/pages/Home.jsx
   Size: 4.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { Search, MapPin, Users, ShoppingBag, ArrowRight } from 'lucide-react'
     3	
     4	export default function Home() {
     5	  return (
     6	    <div>
     7	      {/* Hero Section */}
     8	      <section className="bg-gradient-to-br from-primary-600 to-primary-800 text-white">
     9	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
    10	          <div className="text-center">
    11	            <h1 className="text-4xl md:text-6xl font-bold mb-6">
    12	              Discover Local Markets
    13	              <span className="block text-secondary-400">Across South Australia</span>
    14	            </h1>
    15	            <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto text-primary-100">
    16	              Connect with vibrant local markets, fresh produce, unique crafts, and community experiences right in your neighborhood.
    17	            </p>
    18	            <div className="flex flex-col sm:flex-row gap-4 justify-center">
    19	              <Link to="/markets" className="btn-secondary text-lg px-8 py-3">
    20	                <Search className="h-5 w-5 mr-2" />
    21	                Browse Markets
    22	              </Link>
    23	              <Link to="/register" className="bg-white text-primary-600 hover:bg-gray-100 font-medium py-3 px-8 rounded-lg transition-colors text-lg">
    24	                Join as Stallholder
    25	              </Link>
    26	            </div>
    27	          </div>
    28	        </div>
    29	      </section>
    30	
    31	      {/* Features Section */}
    32	      <section className="py-20 bg-white">
    33	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    34	          <div className="text-center mb-16">
    35	            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
    36	              Why Choose SA Markets?
    37	            </h2>
    38	            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
    39	              We're building stronger communities by connecting local markets, stallholders, and customers across South Australia.
    40	            </p>
    41	          </div>
    42	
    43	          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
    44	            <div className="text-center">
    45	              <div className="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    46	                <MapPin className="h-8 w-8 text-primary-600" />
    47	              </div>
    48	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Find Markets Nearby</h3>
    49	              <p className="text-gray-600">
    50	                Discover farmers markets, craft fairs, and community markets in your local area with our interactive map and search tools.
    51	              </p>
    52	            </div>
    53	
    54	            <div className="text-center">
    55	              <div className="bg-secondary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    56	                <Users className="h-8 w-8 text-secondary-600" />
    57	              </div>
    58	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Connect Communities</h3>
    59	              <p className="text-gray-600">
    60	                Join a vibrant network of local producers, artisans, and market-goers who share a passion for community and quality.
    61	              </p>
    62	            </div>
    63	
    64	            <div className="text-center">
    65	              <div className="bg-green-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    66	                <ShoppingBag className="h-8 w-8 text-green-600" />
    67	              </div>
    68	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Support Local Business</h3>
    69	              <p className="text-gray-600">
    70	                Shop directly from local farmers, makers, and small businesses while supporting your community's economic growth.
    71	              </p>
    72	            </div>
    73	          </div>
    74	        </div>
    75	      </section>
    76	
    77	      {/* CTA Section */}
    78	      <section className="py-16 bg-gray-50">
    79	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
    80	          <h2 className="text-3xl font-bold text-gray-900 mb-4">
    81	            Ready to explore local markets?
    82	          </h2>
    83	          <p className="text-xl text-gray-600 mb-8">
    84	            Join thousands of South Australians discovering amazing local products and experiences.
    85	          </p>
    86	          <Link to="/markets" className="btn-primary text-lg px-8 py-3 inline-flex items-center">
    87	            Start Exploring
    88	            <ArrowRight className="h-5 w-5 ml-2" />
    89	          </Link>
    90	        </div>
    91	      </section>
    92	    </div>
    93	  )
    94	}

========================================

üìÅ FILE: src/pages/Login.jsx
   Size: 3.9K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Eye, EyeOff } from 'lucide-react'
     4	
     5	export default function Login() {
     6	  const [showPassword, setShowPassword] = useState(false)
     7	  const [formData, setFormData] = useState({
     8	    email: '',
     9	    password: ''
    10	  })
    11	
    12	  const handleSubmit = (e) => {
    13	    e.preventDefault()
    14	    // TODO: Implement login with PocketBase
    15	    console.log('Login:', formData)
    16	  }
    17	
    18	  return (
    19	    <div className="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    20	      <div className="max-w-md w-full space-y-8">
    21	        <div>
    22	          <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
    23	            Welcome back
    24	          </h2>
    25	          <p className="mt-2 text-center text-sm text-gray-600">
    26	            Sign in to your account
    27	          </p>
    28	        </div>
    29	        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
    30	          <div className="space-y-4">
    31	            <div>
    32	              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
    33	                Email address
    34	              </label>
    35	              <input
    36	                id="email"
    37	                name="email"
    38	                type="email"
    39	                required
    40	                className="input-field mt-1"
    41	                placeholder="Enter your email"
    42	                value={formData.email}
    43	                onChange={(e) => setFormData({...formData, email: e.target.value})}
    44	              />
    45	            </div>
    46	            <div>
    47	              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
    48	                Password
    49	              </label>
    50	              <div className="mt-1 relative">
    51	                <input
    52	                  id="password"
    53	                  name="password"
    54	                  type={showPassword ? 'text' : 'password'}
    55	                  required
    56	                  className="input-field pr-10"
    57	                  placeholder="Enter your password"
    58	                  value={formData.password}
    59	                  onChange={(e) => setFormData({...formData, password: e.target.value})}
    60	                />
    61	                <button
    62	                  type="button"
    63	                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
    64	                  onClick={() => setShowPassword(!showPassword)}
    65	                >
    66	                  {showPassword ? (
    67	                    <EyeOff className="h-5 w-5 text-gray-400" />
    68	                  ) : (
    69	                    <Eye className="h-5 w-5 text-gray-400" />
    70	                  )}
    71	                </button>
    72	              </div>
    73	            </div>
    74	          </div>
    75	
    76	          <div className="flex items-center justify-between">
    77	            <div className="flex items-center">
    78	              <input
    79	                id="remember-me"
    80	                name="remember-me"
    81	                type="checkbox"
    82	                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
    83	              />
    84	              <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-900">
    85	                Remember me
    86	              </label>
    87	            </div>
    88	
    89	            <div className="text-sm">
    90	              <Link to="/forgot-password" className="text-primary-600 hover:text-primary-500">
    91	                Forgot your password?
    92	              </Link>
    93	            </div>
    94	          </div>
    95	
    96	          <div>
    97	            <button type="submit" className="btn-primary w-full">
    98	              Sign in
    99	            </button>
   100	          </div>
   101	
   102	          <div className="text-center">
   103	            <span className="text-sm text-gray-600">
   104	              Don't have an account?{' '}
   105	              <Link to="/register" className="text-primary-600 hover:text-primary-500 font-medium">
   106	                Sign up here
   107	              </Link>
   108	            </span>
   109	          </div>
   110	        </form>
   111	      </div>
   112	    </div>
   113	  )
   114	}

========================================

üìÅ FILE: src/pages/MarketDetail.jsx
   Size: 5.1K | Modified: 2025-06-02
----------------------------------------
     1	import { useState, useEffect } from 'react'
     2	import { useParams, Link } from 'react-router-dom'
     3	import { MapPin, Clock, Calendar, ArrowLeft } from 'lucide-react'
     4	import marketService from '../services/marketService'
     5	
     6	export default function MarketDetail() {
     7	  const { slug } = useParams()
     8	  const [market, setMarket] = useState(null)
     9	  const [loading, setLoading] = useState(true)
    10	  const [error, setError] = useState(null)
    11	
    12	  useEffect(() => {
    13	    fetchMarket()
    14	  }, [slug])
    15	
    16	  const fetchMarket = async () => {
    17	    try {
    18	      setLoading(true)
    19	      setError(null)
    20	      const marketData = await marketService.getMarket(slug)
    21	      setMarket(marketData)
    22	    } catch (error) {
    23	      console.error('Error fetching market:', error)
    24	      setError('Market not found or failed to load.')
    25	    } finally {
    26	      setLoading(false)
    27	    }
    28	  }
    29	
    30	  if (loading) {
    31	    return (
    32	      <div className="min-h-screen bg-gray-50 py-8">
    33	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    34	          <div className="text-center py-12">
    35	            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
    36	            <p className="mt-4 text-gray-600">Loading market details...</p>
    37	          </div>
    38	        </div>
    39	      </div>
    40	    )
    41	  }
    42	
    43	  if (error || !market) {
    44	    return (
    45	      <div className="min-h-screen bg-gray-50 py-8">
    46	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    47	          <div className="text-center py-12">
    48	            <p className="text-red-600 mb-4">{error}</p>
    49	            <Link to="/markets" className="btn-primary">
    50	              Back to Markets
    51	            </Link>
    52	          </div>
    53	        </div>
    54	      </div>
    55	    )
    56	  }
    57	
    58	  return (
    59	    <div className="min-h-screen bg-gray-50 py-8">
    60	      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    61	        <Link to="/markets" className="inline-flex items-center text-primary-600 hover:text-primary-500 mb-6">
    62	          <ArrowLeft className="h-5 w-5 mr-2" />
    63	          Back to Markets
    64	        </Link>
    65	
    66	        <div className="bg-white rounded-lg shadow p-8 mb-8">
    67	          {market.expand?.category && (
    68	            <div className="mb-4">
    69	              <span 
    70	                className="inline-block text-white text-sm px-3 py-1 rounded-full"
    71	                style={{ backgroundColor: market.expand.category.color || '#6b7280' }}
    72	              >
    73	                {market.expand.category.name}
    74	              </span>
    75	            </div>
    76	          )}
    77	
    78	          <h1 className="text-4xl font-bold text-gray-900 mb-4">{market.name}</h1>
    79	          
    80	          <div className="flex items-center text-gray-600 mb-6">
    81	            <MapPin className="h-5 w-5 mr-2" />
    82	            <span>{market.address || `${market.suburb}, ${market.state}`}</span>
    83	          </div>
    84	          
    85	          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
    86	            {market.frequency && (
    87	              <div className="flex items-center">
    88	                <Calendar className="h-5 w-5 text-primary-600 mr-3" />
    89	                <div>
    90	                  <p className="font-medium text-gray-900">Schedule</p>
    91	                  <p className="text-gray-600">{market.frequency}</p>
    92	                </div>
    93	              </div>
    94	            )}
    95	
    96	            {market.operating_hours && (
    97	              <div className="flex items-center">
    98	                <Clock className="h-5 w-5 text-primary-600 mr-3" />
    99	                <div>
   100	                  <p className="font-medium text-gray-900">Hours</p>
   101	                  <p className="text-gray-600">{market.operating_hours}</p>
   102	                </div>
   103	              </div>
   104	            )}
   105	
   106	            {market.website && (
   107	              <div className="flex items-center">
   108	                <div>
   109	                  <p className="font-medium text-gray-900">Website</p>
   110	                  <a 
   111	                    href={market.website} 
   112	                    target="_blank" 
   113	                    rel="noopener noreferrer"
   114	                    className="text-primary-600 hover:underline"
   115	                  >
   116	                    Visit Site
   117	                  </a>
   118	                </div>
   119	              </div>
   120	            )}
   121	          </div>
   122	        </div>
   123	
   124	        {market.description && (
   125	          <div className="bg-white rounded-lg shadow p-8 mb-8">
   126	            <h2 className="text-2xl font-bold text-gray-900 mb-4">About This Market</h2>
   127	            <div className="text-gray-600 leading-relaxed">
   128	              {market.description}
   129	            </div>
   130	          </div>
   131	        )}
   132	
   133	        <div className="bg-white rounded-lg shadow p-8">
   134	          <h2 className="text-2xl font-bold text-gray-900 mb-4">Interested in Selling Here?</h2>
   135	          <p className="text-gray-600 mb-6">
   136	            Connect with the market organizers to learn about stallholder opportunities, 
   137	            application requirements, and available spaces.
   138	          </p>
   139	          <div className="flex flex-col sm:flex-row gap-4">
   140	            <Link to="/register" className="btn-primary">
   141	              Apply as Stallholder
   142	            </Link>
   143	            <button className="btn-secondary">
   144	              Contact Organizer
   145	            </button>
   146	          </div>
   147	        </div>
   148	      </div>
   149	    </div>
   150	  )
   151	}

========================================

üìÅ FILE: src/pages/MarketList.jsx
   Size: 7.3K | Modified: 2025-06-02
----------------------------------------
     1	import { useState, useEffect } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Search, Filter, MapPin, Clock, Calendar } from 'lucide-react'
     4	import marketService from '../services/marketService'
     5	
     6	export default function MarketList() {
     7	  const [markets, setMarkets] = useState([])
     8	  const [categories, setCategories] = useState([])
     9	  const [loading, setLoading] = useState(true)
    10	  const [error, setError] = useState(null)
    11	  const [filters, setFilters] = useState({
    12	    search: '',
    13	    category: '',
    14	    state: 'SA'
    15	  })
    16	
    17	  useEffect(() => {
    18	    fetchData()
    19	  }, [filters])
    20	
    21	  const fetchData = async () => {
    22	    try {
    23	      setLoading(true)
    24	      setError(null)
    25	
    26	      // Fetch categories
    27	      const categoriesData = await marketService.getCategories()
    28	      setCategories(categoriesData)
    29	
    30	      // Fetch markets with filters
    31	      const marketsData = await marketService.getMarkets({
    32	        search: filters.search,
    33	        category: filters.category,
    34	        state: filters.state,
    35	        perPage: 50
    36	      })
    37	      
    38	      setMarkets(marketsData.items || [])
    39	    } catch (error) {
    40	      console.error('Error fetching data:', error)
    41	      setError('Failed to load markets. Please try again.')
    42	    } finally {
    43	      setLoading(false)
    44	    }
    45	  }
    46	
    47	  const handleSearchChange = (e) => {
    48	    setFilters({ ...filters, search: e.target.value })
    49	  }
    50	
    51	  const handleCategoryChange = (categoryId) => {
    52	    setFilters({ ...filters, category: categoryId })
    53	  }
    54	
    55	  if (loading) {
    56	    return (
    57	      <div className="min-h-screen bg-gray-50 py-8">
    58	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    59	          <div className="text-center py-12">
    60	            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
    61	            <p className="mt-4 text-gray-600">Loading markets...</p>
    62	          </div>
    63	        </div>
    64	      </div>
    65	    )
    66	  }
    67	
    68	  if (error) {
    69	    return (
    70	      <div className="min-h-screen bg-gray-50 py-8">
    71	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    72	          <div className="text-center py-12">
    73	            <p className="text-red-600">{error}</p>
    74	            <button 
    75	              onClick={fetchData}
    76	              className="btn-primary mt-4"
    77	            >
    78	              Try Again
    79	            </button>
    80	          </div>
    81	        </div>
    82	      </div>
    83	    )
    84	  }
    85	
    86	  return (
    87	    <div className="min-h-screen bg-gray-50 py-8">
    88	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    89	        <div className="mb-8">
    90	          <h1 className="text-3xl font-bold text-gray-900 mb-4">Browse Markets</h1>
    91	          <p className="text-gray-600">
    92	            Discover {markets.length} local markets across South Australia
    93	          </p>
    94	        </div>
    95	
    96	        <div className="bg-white rounded-lg shadow p-6 mb-8">
    97	          <div className="grid grid-cols-1 md:grid-cols-12 gap-4">
    98	            <div className="md:col-span-6">
    99	              <div className="relative">
   100	                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
   101	                <input
   102	                  type="text"
   103	                  placeholder="Search markets by name or location..."
   104	                  className="input-field pl-10"
   105	                  value={filters.search}
   106	                  onChange={handleSearchChange}
   107	                />
   108	              </div>
   109	            </div>
   110	
   111	            <div className="md:col-span-4">
   112	              <select
   113	                className="input-field"
   114	                value={filters.category}
   115	                onChange={(e) => handleCategoryChange(e.target.value)}
   116	              >
   117	                <option value="">All Categories</option>
   118	                {categories.map((category) => (
   119	                  <option key={category.id} value={category.id}>
   120	                    {category.name}
   121	                  </option>
   122	                ))}
   123	              </select>
   124	            </div>
   125	
   126	            <div className="md:col-span-2">
   127	              <select
   128	                className="input-field"
   129	                value={filters.state}
   130	                onChange={(e) => setFilters({ ...filters, state: e.target.value })}
   131	              >
   132	                <option value="SA">South Australia</option>
   133	                <option value="VIC">Victoria</option>
   134	                <option value="NSW">New South Wales</option>
   135	                <option value="QLD">Queensland</option>
   136	                <option value="WA">Western Australia</option>
   137	                <option value="TAS">Tasmania</option>
   138	                <option value="NT">Northern Territory</option>
   139	                <option value="ACT">ACT</option>
   140	              </select>
   141	            </div>
   142	          </div>
   143	        </div>
   144	
   145	        {markets.length === 0 ? (
   146	          <div className="text-center py-12">
   147	            <p className="text-gray-600">No markets found matching your criteria.</p>
   148	            <button 
   149	              onClick={() => setFilters({ search: '', category: '', state: 'SA' })}
   150	              className="btn-secondary mt-4"
   151	            >
   152	              Clear Filters
   153	            </button>
   154	          </div>
   155	        ) : (
   156	          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
   157	            {markets.map((market) => (
   158	              <div key={market.id} className="card hover:shadow-lg transition-shadow">
   159	                {market.expand?.category && (
   160	                  <div className="mb-4">
   161	                    <span 
   162	                      className="inline-block text-white text-xs px-2 py-1 rounded-full"
   163	                      style={{ backgroundColor: market.expand.category.color || '#6b7280' }}
   164	                    >
   165	                      {market.expand.category.name}
   166	                    </span>
   167	                  </div>
   168	                )}
   169	
   170	                <h3 className="text-xl font-semibold text-gray-900 mb-2">{market.name}</h3>
   171	                
   172	                <div className="flex items-center text-gray-600 mb-2">
   173	                  <MapPin className="h-4 w-4 mr-1" />
   174	                  <span>{market.suburb}, {market.state}</span>
   175	                </div>
   176	
   177	                {market.frequency && (
   178	                  <div className="flex items-center text-gray-600 mb-2">
   179	                    <Calendar className="h-4 w-4 mr-1" />
   180	                    <span>{market.frequency}</span>
   181	                  </div>
   182	                )}
   183	
   184	                {market.operating_hours && (
   185	                  <div className="flex items-center text-gray-600 mb-4">
   186	                    <Clock className="h-4 w-4 mr-1" />
   187	                    <span>{market.operating_hours}</span>
   188	                  </div>
   189	                )}
   190	
   191	                {market.description && (
   192	                  <p className="text-gray-600 text-sm mb-4 line-clamp-2">
   193	                    {market.description.substring(0, 100)}...
   194	                  </p>
   195	                )}
   196	
   197	                <div className="flex gap-2">
   198	                  <Link 
   199	                    to={`/markets/${market.slug}`}
   200	                    className="btn-primary flex-1 text-center"
   201	                  >
   202	                    View Details
   203	                  </Link>
   204	                  {market.website && (
   205	                    <button className="btn-secondary px-3 py-2" title="Visit Website">
   206	                      üåê
   207	                    </button>
   208	                  )}
   209	                </div>
   210	              </div>
   211	            ))}
   212	          </div>
   213	        )}
   214	      </div>
   215	    </div>
   216	  )
   217	}

========================================

üìÅ FILE: src/pages/Register.jsx
   Size: 4.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Eye, EyeOff } from 'lucide-react'
     4	
     5	export default function Register() {
     6	  const [showPassword, setShowPassword] = useState(false)
     7	  const [formData, setFormData] = useState({
     8	    name: '',
     9	    email: '',
    10	    password: '',
    11	    role: 'customer'
    12	  })
    13	
    14	  const handleSubmit = (e) => {
    15	    e.preventDefault()
    16	    // TODO: Implement registration with PocketBase
    17	    console.log('Register:', formData)
    18	  }
    19	
    20	  return (
    21	    <div className="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    22	      <div className="max-w-md w-full space-y-8">
    23	        <div>
    24	          <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
    25	            Join SA Markets
    26	          </h2>
    27	          <p className="mt-2 text-center text-sm text-gray-600">
    28	            Create your account to get started
    29	          </p>
    30	        </div>
    31	        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
    32	          <div className="space-y-4">
    33	            <div>
    34	              <label htmlFor="name" className="block text-sm font-medium text-gray-700">
    35	                Full Name
    36	              </label>
    37	              <input
    38	                id="name"
    39	                name="name"
    40	                type="text"
    41	                required
    42	                className="input-field mt-1"
    43	                placeholder="Enter your full name"
    44	                value={formData.name}
    45	                onChange={(e) => setFormData({...formData, name: e.target.value})}
    46	              />
    47	            </div>
    48	            <div>
    49	              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
    50	                Email address
    51	              </label>
    52	              <input
    53	                id="email"
    54	                name="email"
    55	                type="email"
    56	                required
    57	                className="input-field mt-1"
    58	                placeholder="Enter your email"
    59	                value={formData.email}
    60	                onChange={(e) => setFormData({...formData, email: e.target.value})}
    61	              />
    62	            </div>
    63	            <div>
    64	              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
    65	                Password
    66	              </label>
    67	              <div className="mt-1 relative">
    68	                <input
    69	                  id="password"
    70	                  name="password"
    71	                  type={showPassword ? 'text' : 'password'}
    72	                  required
    73	                  className="input-field pr-10"
    74	                  placeholder="Create a password"
    75	                  value={formData.password}
    76	                  onChange={(e) => setFormData({...formData, password: e.target.value})}
    77	                />
    78	                <button
    79	                  type="button"
    80	                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
    81	                  onClick={() => setShowPassword(!showPassword)}
    82	                >
    83	                  {showPassword ? (
    84	                    <EyeOff className="h-5 w-5 text-gray-400" />
    85	                  ) : (
    86	                    <Eye className="h-5 w-5 text-gray-400" />
    87	                  )}
    88	                </button>
    89	              </div>
    90	            </div>
    91	            <div>
    92	              <label htmlFor="role" className="block text-sm font-medium text-gray-700">
    93	                I am a...
    94	              </label>
    95	              <select
    96	                id="role"
    97	                name="role"
    98	                className="input-field mt-1"
    99	                value={formData.role}
   100	                onChange={(e) => setFormData({...formData, role: e.target.value})}
   101	              >
   102	                <option value="customer">Market Customer</option>
   103	                <option value="stallholder">Stallholder/Vendor</option>
   104	                <option value="organizer">Market Organizer</option>
   105	              </select>
   106	            </div>
   107	          </div>
   108	
   109	          <div>
   110	            <button type="submit" className="btn-primary w-full">
   111	              Create Account
   112	            </button>
   113	          </div>
   114	
   115	          <div className="text-center">
   116	            <span className="text-sm text-gray-600">
   117	              Already have an account?{' '}
   118	              <Link to="/login" className="text-primary-600 hover:text-primary-500 font-medium">
   119	                Sign in here
   120	              </Link>
   121	            </span>
   122	          </div>
   123	        </form>
   124	      </div>
   125	    </div>
   126	  )
   127	}

========================================

üìÅ FILE: src/App.css
   Size: 606 | Modified: 2025-06-02
----------------------------------------
     1	#root {
     2	  max-width: 1280px;
     3	  margin: 0 auto;
     4	  padding: 2rem;
     5	  text-align: center;
     6	}
     7	
     8	.logo {
     9	  height: 6em;
    10	  padding: 1.5em;
    11	  will-change: filter;
    12	  transition: filter 300ms;
    13	}
    14	.logo:hover {
    15	  filter: drop-shadow(0 0 2em #646cffaa);
    16	}
    17	.logo.react:hover {
    18	  filter: drop-shadow(0 0 2em #61dafbaa);
    19	}
    20	
    21	@keyframes logo-spin {
    22	  from {
    23	    transform: rotate(0deg);
    24	  }
    25	  to {
    26	    transform: rotate(360deg);
    27	  }
    28	}
    29	
    30	@media (prefers-reduced-motion: no-preference) {
    31	  a:nth-of-type(2) .logo {
    32	    animation: logo-spin infinite 20s linear;
    33	  }
    34	}
    35	
    36	.card {
    37	  padding: 2em;
    38	}
    39	
    40	.read-the-docs {
    41	  color: #888;
    42	}

========================================

üìÅ FILE: src/App.jsx
   Size: 3.3K | Modified: 2025-06-02
----------------------------------------
     1	// src/App.jsx - ONLY this content (clean version)
     2	import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'
     3	import { AuthProvider } from './contexts/AuthContext'
     4	import Layout from './components/layout/Layout'
     5	import Home from './pages/Home'
     6	import MarketList from './pages/MarketList'
     7	import MarketDetail from './pages/MarketDetail'
     8	import Login from './pages/Login'
     9	import Register from './pages/Register'
    10	import Dashboard from './pages/Dashboard'
    11	import ProtectedRoute from './components/auth/ProtectedRoute'
    12	import './App.css'
    13	
    14	function App() {
    15	  return (
    16	    <AuthProvider>
    17	      <Router>
    18	        <Layout>
    19	          <Routes>
    20	            <Route path="/" element={<Home />} />
    21	            <Route path="/markets" element={<MarketList />} />
    22	            <Route path="/markets/:slug" element={<MarketDetail />} />
    23	            <Route path="/login" element={<Login />} />
    24	            <Route path="/register" element={<Register />} />
    25	            <Route 
    26	              path="/dashboard" 
    27	              element={
    28	                <ProtectedRoute>
    29	                  <Dashboard />
    30	                </ProtectedRoute>
    31	              } 
    32	            />
    33	            {/* Placeholder routes for future features */}
    34	            <Route 
    35	              path="/profile" 
    36	              element={
    37	                <ProtectedRoute>
    38	                  <div className="min-h-screen bg-gray-50 py-8">
    39	                    <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    40	                      <h1 className="text-3xl font-bold text-gray-900 mb-4">Profile</h1>
    41	                      <p className="text-gray-600">Profile management coming soon...</p>
    42	                    </div>
    43	                  </div>
    44	                </ProtectedRoute>
    45	              } 
    46	            />
    47	            <Route 
    48	              path="/stallholders" 
    49	              element={
    50	                <div className="min-h-screen bg-gray-50 py-8">
    51	                  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    52	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">For Stallholders</h1>
    53	                    <p className="text-gray-600">Stallholder directory coming soon...</p>
    54	                  </div>
    55	                </div>
    56	              } 
    57	            />
    58	            <Route 
    59	              path="/organizers" 
    60	              element={
    61	                <div className="min-h-screen bg-gray-50 py-8">
    62	                  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    63	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">For Market Organizers</h1>
    64	                    <p className="text-gray-600">Market organizer tools coming soon...</p>
    65	                  </div>
    66	                </div>
    67	              } 
    68	            />
    69	            <Route 
    70	              path="/about" 
    71	              element={
    72	                <div className="min-h-screen bg-gray-50 py-8">
    73	                  <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    74	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">About SA Markets</h1>
    75	                    <p className="text-gray-600">About page coming soon...</p>
    76	                  </div>
    77	                </div>
    78	              } 
    79	            />
    80	          </Routes>
    81	        </Layout>
    82	      </Router>
    83	    </AuthProvider>
    84	  )
    85	}
    86	
    87	export default App

========================================

üìÅ FILE: src/assets/react.svg
   Size: 4.1K | Modified: 2025-06-02
----------------------------------------
     1	<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" role="img" class="iconify iconify--logos" width="35.93" height="32" preserveAspectRatio="xMidYMid meet" viewBox="0 0 256 228"><path fill="#00D8FF" d="M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z"></path></svg>

========================================

üìÅ FILE: src/components/auth/ProtectedRoute.jsx
   Size: 749 | Modified: 2025-06-02
----------------------------------------
     1	// src/components/auth/ProtectedRoute.jsx
     2	import { Navigate, useLocation } from 'react-router-dom'
     3	import { useAuth } from '../../contexts/AuthContext'
     4	
     5	export default function ProtectedRoute({ children, requiredRole = null }) {
     6	  const { user, loading } = useAuth()
     7	  const location = useLocation()
     8	
     9	  if (loading) {
    10	    return (
    11	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    12	        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
    13	      </div>
    14	    )
    15	  }
    16	
    17	  if (!user) {
    18	    return <Navigate to="/login" state={{ from: location }} replace />
    19	  }
    20	
    21	  if (requiredRole && user.role !== requiredRole) {
    22	    return <Navigate to="/dashboard" replace />
    23	  }
    24	
    25	  return children
    26	}

========================================

üìÅ FILE: src/components/layout/Footer.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { MapPin, Mail, Phone, Facebook, Instagram, Twitter } from 'lucide-react'
     3	
     4	export default function Footer() {
     5	  return (
     6	    <footer className="bg-gray-900 text-white">
     7	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
     8	        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
     9	          {/* Brand */}
    10	          <div className="col-span-1 md:col-span-2">
    11	            <div className="flex items-center space-x-2 mb-4">
    12	              <MapPin className="h-8 w-8 text-primary-400" />
    13	              <span className="text-xl font-bold">SA Markets Directory</span>
    14	            </div>
    15	            <p className="text-gray-300 mb-4 max-w-md">
    16	              Connecting communities through vibrant local markets across South Australia. 
    17	              Discover fresh produce, unique crafts, and local businesses in your area.
    18	            </p>
    19	            <div className="flex space-x-4">
    20	              <Facebook className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    21	              <Instagram className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    22	              <Twitter className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    23	            </div>
    24	          </div>
    25	
    26	          {/* Quick Links */}
    27	          <div>
    28	            <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
    29	            <ul className="space-y-2">
    30	              <li><Link to="/markets" className="text-gray-300 hover:text-primary-400 transition-colors">Browse Markets</Link></li>
    31	              <li><Link to="/stallholders" className="text-gray-300 hover:text-primary-400 transition-colors">For Stallholders</Link></li>
    32	              <li><Link to="/organizers" className="text-gray-300 hover:text-primary-400 transition-colors">For Organizers</Link></li>
    33	              <li><Link to="/about" className="text-gray-300 hover:text-primary-400 transition-colors">About Us</Link></li>
    34	              <li><Link to="/contact" className="text-gray-300 hover:text-primary-400 transition-colors">Contact</Link></li>
    35	            </ul>
    36	          </div>
    37	
    38	          {/* Support */}
    39	          <div>
    40	            <h3 className="text-lg font-semibold mb-4">Support</h3>
    41	            <ul className="space-y-2">
    42	              <li><Link to="/help" className="text-gray-300 hover:text-primary-400 transition-colors">Help Center</Link></li>
    43	              <li><Link to="/privacy" className="text-gray-300 hover:text-primary-400 transition-colors">Privacy Policy</Link></li>
    44	              <li><Link to="/terms" className="text-gray-300 hover:text-primary-400 transition-colors">Terms of Service</Link></li>
    45	              <li>
    46	                <div className="flex items-center space-x-2 text-gray-300">
    47	                  <Mail className="h-4 w-4" />
    48	                  <span>hello@samarkets.com.au</span>
    49	                </div>
    50	              </li>
    51	            </ul>
    52	          </div>
    53	        </div>
    54	
    55	        <hr className="border-gray-800 my-8" />
    56	
    57	        <div className="flex flex-col md:flex-row justify-between items-center">
    58	          <p className="text-gray-400 text-sm">
    59	            ¬© 2025 SA Markets Directory. All rights reserved.
    60	          </p>
    61	          <p className="text-gray-400 text-sm mt-2 md:mt-0">
    62	            Built with ‚ù§Ô∏è for Australian communities
    63	          </p>
    64	        </div>
    65	      </div>
    66	    </footer>
    67	  )
    68	}

========================================

üìÅ FILE: src/components/layout/Header.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Menu, X, MapPin, User } from 'lucide-react'
     4	
     5	export default function Header() {
     6	  const [isMenuOpen, setIsMenuOpen] = useState(false)
     7	
     8	  return (
     9	    <header className="bg-white shadow-sm border-b">
    10	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    11	        <div className="flex justify-between items-center h-16">
    12	          {/* Logo */}
    13	          <Link to="/" className="flex items-center space-x-2">
    14	            <MapPin className="h-8 w-8 text-primary-600" />
    15	            <span className="text-xl font-bold text-gray-900">SA Markets</span>
    16	          </Link>
    17	
    18	          {/* Desktop Navigation */}
    19	          <nav className="hidden md:flex space-x-8">
    20	            <Link to="/markets" className="text-gray-700 hover:text-primary-600 transition-colors">
    21	              Browse Markets
    22	            </Link>
    23	            <Link to="/stallholders" className="text-gray-700 hover:text-primary-600 transition-colors">
    24	              For Stallholders
    25	            </Link>
    26	            <Link to="/organizers" className="text-gray-700 hover:text-primary-600 transition-colors">
    27	              For Organizers
    28	            </Link>
    29	            <Link to="/about" className="text-gray-700 hover:text-primary-600 transition-colors">
    30	              About
    31	            </Link>
    32	          </nav>
    33	
    34	          {/* Desktop Auth Buttons */}
    35	          <div className="hidden md:flex items-center space-x-4">
    36	            <Link to="/login" className="text-gray-700 hover:text-primary-600 transition-colors">
    37	              Log In
    38	            </Link>
    39	            <Link to="/register" className="btn-primary">
    40	              Sign Up
    41	            </Link>
    42	            <Link to="/dashboard" className="text-gray-700 hover:text-primary-600 transition-colors">
    43	              <User className="h-5 w-5" />
    44	            </Link>
    45	          </div>
    46	
    47	          {/* Mobile menu button */}
    48	          <button
    49	            onClick={() => setIsMenuOpen(!isMenuOpen)}
    50	            className="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600 hover:bg-gray-100"
    51	          >
    52	            {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
    53	          </button>
    54	        </div>
    55	
    56	        {/* Mobile Navigation */}
    57	        {isMenuOpen && (
    58	          <div className="md:hidden py-4 border-t">
    59	            <nav className="flex flex-col space-y-2">
    60	              <Link to="/markets" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    61	                Browse Markets
    62	              </Link>
    63	              <Link to="/stallholders" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    64	                For Stallholders
    65	              </Link>
    66	              <Link to="/organizers" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    67	                For Organizers
    68	              </Link>
    69	              <Link to="/about" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    70	                About
    71	              </Link>
    72	              <hr className="my-2" />
    73	              <Link to="/login" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    74	                Log In
    75	              </Link>
    76	              <Link to="/register" className="px-3 py-2 btn-primary text-center">
    77	                Sign Up
    78	              </Link>
    79	            </nav>
    80	          </div>
    81	        )}
    82	      </div>
    83	    </header>
    84	  )
    85	}

========================================

üìÅ FILE: src/components/layout/Layout.jsx
   Size: 287 | Modified: 2025-06-02
----------------------------------------
     1	import Header from './Header'
     2	import Footer from './Footer'
     3	
     4	export default function Layout({ children }) {
     5	  return (
     6	    <div className="min-h-screen flex flex-col">
     7	      <Header />
     8	      <main className="flex-grow">
     9	        {children}
    10	      </main>
    11	      <Footer />
    12	    </div>
    13	  )
    14	}

========================================

üìÅ FILE: src/contexts/AuthContext.jsx
   Size: 2.5K | Modified: 2025-06-02
----------------------------------------
     1	import React, { createContext, useContext, useState, useEffect } from 'react';
     2	import pb, { auth, handlePocketBaseError } from '../lib/pocketbase';
     3	
     4	const AuthContext = createContext({});
     5	
     6	export const useAuth = () => {
     7	  const context = useContext(AuthContext);
     8	  if (!context) {
     9	    throw new Error('useAuth must be used within an AuthProvider');
    10	  }
    11	  return context;
    12	};
    13	
    14	export const AuthProvider = ({ children }) => {
    15	  const [user, setUser] = useState(null);
    16	  const [loading, setLoading] = useState(true);
    17	  const [error, setError] = useState(null);
    18	
    19	  useEffect(() => {
    20	    if (pb.authStore.isValid) {
    21	      setUser(pb.authStore.model);
    22	    }
    23	    setLoading(false);
    24	
    25	    const unsubscribe = pb.authStore.onChange((token, model) => {
    26	      setUser(model);
    27	    });
    28	
    29	    return unsubscribe;
    30	  }, []);
    31	
    32	  const login = async (email, password) => {
    33	    try {
    34	      setLoading(true);
    35	      setError(null);
    36	      
    37	      const authData = await auth.login(email, password);
    38	      setUser(authData.record);
    39	      
    40	      return authData;
    41	    } catch (err) {
    42	      const errorData = handlePocketBaseError(err);
    43	      setError(errorData);
    44	      throw errorData;
    45	    } finally {
    46	      setLoading(false);
    47	    }
    48	  };
    49	
    50	  const register = async (userData) => {
    51	    try {
    52	      setLoading(true);
    53	      setError(null);
    54	      
    55	      const user = await auth.register({
    56	        ...userData,
    57	        emailVisibility: true,
    58	        passwordConfirm: userData.password
    59	      });
    60	
    61	      const authData = await auth.login(userData.email, userData.password);
    62	      setUser(authData.record);
    63	      
    64	      return authData;
    65	    } catch (err) {
    66	      const errorData = handlePocketBaseError(err);
    67	      setError(errorData);
    68	      throw errorData;
    69	    } finally {
    70	      setLoading(false);
    71	    }
    72	  };
    73	
    74	  const logout = () => {
    75	    auth.logout();
    76	    setUser(null);
    77	    setError(null);
    78	  };
    79	
    80	  const updateProfile = async (userData) => {
    81	    try {
    82	      setLoading(true);
    83	      setError(null);
    84	      
    85	      const updatedUser = await pb.collection('users').update(user.id, userData);
    86	      setUser(updatedUser);
    87	      
    88	      return updatedUser;
    89	    } catch (err) {
    90	      const errorData = handlePocketBaseError(err);
    91	      setError(errorData);
    92	      throw errorData;
    93	    } finally {
    94	      setLoading(false);
    95	    }
    96	  };
    97	
    98	  const value = {
    99	    user,
   100	    loading,
   101	    error,
   102	    login,
   103	    register,
   104	    logout,
   105	    updateProfile,
   106	    isAuthenticated: !!user
   107	  };
   108	
   109	  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
   110	};

========================================

üìÅ FILE: src/hooks/useApplications.js
   Size: 1.9K | Modified: 2025-06-02
----------------------------------------
     1	// src/hooks/useApplications.js - Fixed import
     2	import { useState, useEffect } from 'react';
     3	import ApplicationService from '../services/ApplicationService.js';
     4	
     5	export const useApplications = (stallholderId, filters = {}) => {
     6	  const [applications, setApplications] = useState([]);
     7	  const [loading, setLoading] = useState(true);
     8	  const [error, setError] = useState(null);
     9	  const [pagination, setPagination] = useState(null);
    10	
    11	  useEffect(() => {
    12	    if (stallholderId) {
    13	      fetchApplications();
    14	    }
    15	  }, [stallholderId, filters]);
    16	
    17	  const fetchApplications = async () => {
    18	    try {
    19	      setLoading(true);
    20	      const result = await ApplicationService.getStallholderApplications(stallholderId, filters);
    21	      setApplications(result.items);
    22	      setPagination({
    23	        page: result.page,
    24	        perPage: result.perPage,
    25	        totalItems: result.totalItems,
    26	        totalPages: result.totalPages
    27	      });
    28	    } catch (err) {
    29	      setError(err.message);
    30	    } finally {
    31	      setLoading(false);
    32	    }
    33	  };
    34	
    35	  const submitApplication = async (applicationData) => {
    36	    try {
    37	      const newApplication = await ApplicationService.submitApplication(applicationData);
    38	      setApplications(prev => [newApplication, ...prev]);
    39	      return newApplication;
    40	    } catch (err) {
    41	      setError(err.message);
    42	      throw err;
    43	    }
    44	  };
    45	
    46	  const cancelApplication = async (applicationId) => {
    47	    try {
    48	      await ApplicationService.cancelApplication(applicationId);
    49	      setApplications(prev => 
    50	        prev.map(app => 
    51	          app.id === applicationId 
    52	            ? { ...app, status: 'cancelled' }
    53	            : app
    54	        )
    55	      );
    56	    } catch (err) {
    57	      setError(err.message);
    58	      throw err;
    59	    }
    60	  };
    61	
    62	  return {
    63	    applications,
    64	    loading,
    65	    error,
    66	    pagination,
    67	    submitApplication,
    68	    cancelApplication,
    69	    refetch: fetchApplications
    70	  };
    71	};

========================================

üìÅ FILE: src/hooks/useStallholder.js
   Size: 1.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/hooks/useStallholder.js - Fixed import path
     2	import { useState, useEffect } from 'react';
     3	import StallholderService from '../services/StallholderService.js';
     4	import { useAuth } from '../contexts/AuthContext';
     5	
     6	export const useStallholder = () => {
     7	  const [stallholder, setStallholder] = useState(null);
     8	  const [loading, setLoading] = useState(true);
     9	  const [error, setError] = useState(null);
    10	  const { user } = useAuth();
    11	
    12	  useEffect(() => {
    13	    if (user && user.role === 'stallholder') {
    14	      fetchStallholder();
    15	    } else {
    16	      setLoading(false);
    17	    }
    18	  }, [user]);
    19	
    20	  const fetchStallholder = async () => {
    21	    try {
    22	      setLoading(true);
    23	      // Get stallholder profile for current user
    24	      const result = await StallholderService.getStallholders({
    25	        user: user.id
    26	      });
    27	      
    28	      if (result.items.length > 0) {
    29	        setStallholder(result.items[0]);
    30	      }
    31	    } catch (err) {
    32	      setError(err.message);
    33	    } finally {
    34	      setLoading(false);
    35	    }
    36	  };
    37	
    38	  return {
    39	    stallholder,
    40	    loading,
    41	    error,
    42	    updateStallholder,
    43	    createStallholder,
    44	    refetch: fetchStallholder
    45	  };
    46	};

========================================

üìÅ FILE: src/index.css
   Size: 813 | Modified: 2025-06-02
----------------------------------------
     1	@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
     2	
     3	@tailwind base;
     4	@tailwind components;
     5	@tailwind utilities;
     6	
     7	@layer base {
     8	  html {
     9	    font-family: 'Inter', system-ui, sans-serif;
    10	  }
    11	}
    12	
    13	@layer components {
    14	  .btn-primary {
    15	    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
    16	  }
    17	  
    18	  .btn-secondary {
    19	    @apply bg-secondary-500 hover:bg-secondary-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
    20	  }
    21	  
    22	  .card {
    23	    @apply bg-white rounded-lg shadow-md border border-gray-200 p-6;
    24	  }
    25	  
    26	  .input-field {
    27	    @apply w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent;
    28	  }
    29	}

========================================

üìÅ FILE: src/lib/constants.js
   Size: 1.5K | Modified: 2025-06-02
----------------------------------------
     1	export const USER_ROLES = {
     2	  CUSTOMER: 'customer',
     3	  ORGANIZER: 'organizer', 
     4	  STALLHOLDER: 'stallholder'
     5	};
     6	
     7	export const MARKET_FREQUENCIES = {
     8	  DAILY: 'Daily',
     9	  WEEKLY: 'Weekly',
    10	  FIRST_SATURDAY: '1st Saturday',
    11	  FIRST_SUNDAY: '1st Sunday',
    12	  SECOND_SATURDAY: '2nd Saturday',
    13	  SECOND_SUNDAY: '2nd Sunday',
    14	  THIRD_SATURDAY: '3rd Saturday',
    15	  THIRD_SUNDAY: '3rd Sunday',
    16	  FOURTH_SATURDAY: '4th Saturday',
    17	  FOURTH_SUNDAY: '4th Sunday',
    18	  SPECIFIC_DATES: 'Specific Dates',
    19	  SEASONAL: 'Seasonal',
    20	  MONTHLY: 'Monthly'
    21	};
    22	
    23	export const MARKET_CATEGORIES = {
    24	  FARMERS: 'Farmers Market',
    25	  CRAFT: 'Craft & Artisan',
    26	  COMMUNITY: 'Community Market',
    27	  SPECIALTY: 'Specialty Market',
    28	  FOOD: 'Food Market',
    29	  VINTAGE: 'Vintage & Antiques',
    30	  GENERAL: 'General Market'
    31	};
    32	
    33	export const AUSTRALIAN_STATES = {
    34	  SA: 'South Australia',
    35	  VIC: 'Victoria',
    36	  NSW: 'New South Wales',
    37	  QLD: 'Queensland',
    38	  WA: 'Western Australia',
    39	  TAS: 'Tasmania',
    40	  NT: 'Northern Territory',
    41	  ACT: 'Australian Capital Territory'
    42	};
    43	
    44	export const SUBSCRIPTION_TIERS = {
    45	  FREE: 'free',
    46	  BASIC: 'basic',
    47	  PREMIUM: 'premium',
    48	  ENTERPRISE: 'enterprise'
    49	};
    50	
    51	export const APPLICATION_STATUS = {
    52	  PENDING: 'pending',
    53	  APPROVED: 'approved',
    54	  REJECTED: 'rejected',
    55	  WAITLISTED: 'waitlisted'
    56	};
    57	
    58	export const SEARCH_RADIUS_OPTIONS = [
    59	  { value: 5, label: '5 km' },
    60	  { value: 10, label: '10 km' },
    61	  { value: 25, label: '25 km' },
    62	  { value: 50, label: '50 km' },
    63	  { value: 100, label: '100 km' }
    64	];

========================================

üìÅ FILE: src/lib/pocketbase.js
   Size: 1.4K | Modified: 2025-06-02
----------------------------------------
     1	import PocketBase from 'pocketbase';
     2	
     3	const pb = new PocketBase(import.meta.env.VITE_POCKETBASE_URL || 'http://localhost:8090');
     4	
     5	// Configure authentication
     6	pb.autoCancellation(false);
     7	
     8	// Export the instance
     9	export default pb;
    10	
    11	// Helper functions for common operations
    12	export const auth = {
    13	  // Login user
    14	  async login(email, password) {
    15	    return await pb.collection('users').authWithPassword(email, password);
    16	  },
    17	
    18	  // Register user
    19	  async register(data) {
    20	    return await pb.collection('users').create(data);
    21	  },
    22	
    23	  // Logout
    24	  logout() {
    25	    pb.authStore.clear();
    26	  },
    27	
    28	  // Get current user
    29	  getCurrentUser() {
    30	    return pb.authStore.model;
    31	  },
    32	
    33	  // Check if user is authenticated
    34	  isAuthenticated() {
    35	    return pb.authStore.isValid;
    36	  },
    37	
    38	  // Subscribe to auth changes
    39	  onChange(callback) {
    40	    return pb.authStore.onChange(callback);
    41	  }
    42	};
    43	
    44	// Helper for handling API errors
    45	export const handlePocketBaseError = (error) => {
    46	  console.error('PocketBase Error:', error);
    47	  
    48	  if (error?.response?.data) {
    49	    // Extract field-specific errors
    50	    const fieldErrors = {};
    51	    Object.entries(error.response.data).forEach(([field, fieldError]) => {
    52	      fieldErrors[field] = fieldError.message || fieldError;
    53	    });
    54	    return fieldErrors;
    55	  }
    56	  
    57	  return { general: error.message || 'An unexpected error occurred' };
    58	};

========================================

üìÅ FILE: src/main.jsx
   Size: 229 | Modified: 2025-06-02
----------------------------------------
     1	import { StrictMode } from 'react'
     2	import { createRoot } from 'react-dom/client'
     3	import './index.css'
     4	import App from './App.jsx'
     5	
     6	createRoot(document.getElementById('root')).render(
     7	  <StrictMode>
     8	    <App />
     9	  </StrictMode>,
    10	)

========================================

üìÅ FILE: src/pages/Dashboard.jsx
   Size: 16K | Modified: 2025-06-02
----------------------------------------
     1	// src/pages/Dashboard.jsx - Enhanced with role-based content
     2	import { useState, useEffect } from 'react'
     3	import { Link } from 'react-router-dom'
     4	import { User, MapPin, ShoppingBag, BarChart3, Plus, Calendar, Users } from 'lucide-react'
     5	import { useAuth } from '../contexts/AuthContext'
     6	
     7	export default function Dashboard() {
     8	  const [activeTab, setActiveTab] = useState('overview')
     9	  const { user } = useAuth()
    10	
    11	  if (!user) {
    12	    return (
    13	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    14	        <div className="text-center">
    15	          <p className="text-gray-600">Please log in to access your dashboard.</p>
    16	          <Link to="/login" className="btn-primary mt-4">
    17	            Log In
    18	          </Link>
    19	        </div>
    20	      </div>
    21	    )
    22	  }
    23	
    24	  const renderRoleSpecificContent = () => {
    25	    switch (user.role) {
    26	      case 'stallholder':
    27	        return <StallholderDashboard />
    28	      case 'organizer':
    29	        return <OrganizerDashboard />
    30	      default:
    31	        return <CustomerDashboard />
    32	    }
    33	  }
    34	
    35	  return (
    36	    <div className="min-h-screen bg-gray-50 py-8">
    37	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    38	        {/* Header */}
    39	        <div className="mb-8">
    40	          <h1 className="text-3xl font-bold text-gray-900 mb-2">
    41	            Welcome back, {user.name}!
    42	          </h1>
    43	          <p className="text-gray-600">
    44	            {user.role === 'stallholder' && 'Manage your stallholder profile and applications'}
    45	            {user.role === 'organizer' && 'Manage your markets and stallholder applications'}
    46	            {user.role === 'customer' && 'Discover and save your favorite markets'}
    47	          </p>
    48	        </div>
    49	
    50	        {renderRoleSpecificContent()}
    51	      </div>
    52	    </div>
    53	  )
    54	}
    55	
    56	// Customer Dashboard Component
    57	const CustomerDashboard = () => {
    58	  return (
    59	    <div>
    60	      {/* Quick Stats */}
    61	      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    62	        <div className="card">
    63	          <div className="flex items-center">
    64	            <div className="bg-primary-100 rounded-lg p-3">
    65	              <MapPin className="h-6 w-6 text-primary-600" />
    66	            </div>
    67	            <div className="ml-4">
    68	              <p className="text-2xl font-bold text-gray-900">12</p>
    69	              <p className="text-gray-600">Favorite Markets</p>
    70	            </div>
    71	          </div>
    72	        </div>
    73	        <div className="card">
    74	          <div className="flex items-center">
    75	            <div className="bg-secondary-100 rounded-lg p-3">
    76	              <Calendar className="h-6 w-6 text-secondary-600" />
    77	            </div>
    78	            <div className="ml-4">
    79	              <p className="text-2xl font-bold text-gray-900">3</p>
    80	              <p className="text-gray-600">This Weekend</p>
    81	            </div>
    82	          </div>
    83	        </div>
    84	        <div className="card">
    85	          <div className="flex items-center">
    86	            <div className="bg-green-100 rounded-lg p-3">
    87	              <User className="h-6 w-6 text-green-600" />
    88	            </div>
    89	            <div className="ml-4">
    90	              <p className="text-2xl font-bold text-gray-900">Free</p>
    91	              <p className="text-gray-600">Current Plan</p>
    92	            </div>
    93	          </div>
    94	        </div>
    95	      </div>
    96	
    97	      {/* Recent Activity */}
    98	      <div className="bg-white rounded-lg shadow p-6 mb-8">
    99	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Upcoming Markets</h2>
   100	        <div className="space-y-4">
   101	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   102	            <div>
   103	              <h3 className="font-medium text-gray-900">Adelaide Central Market</h3>
   104	              <p className="text-sm text-gray-600">Saturday, June 7 ‚Ä¢ 7:00 AM - 2:00 PM</p>
   105	            </div>
   106	            <Link to="/markets/adelaide-central" className="btn-primary">
   107	              View Details
   108	            </Link>
   109	          </div>
   110	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   111	            <div>
   112	              <h3 className="font-medium text-gray-900">Barossa Farmers Market</h3>
   113	              <p className="text-sm text-gray-600">Saturday, June 7 ‚Ä¢ 7:30 AM - 11:30 AM</p>
   114	            </div>
   115	            <Link to="/markets/barossa-farmers" className="btn-primary">
   116	              View Details
   117	            </Link>
   118	          </div>
   119	        </div>
   120	      </div>
   121	
   122	      {/* Quick Actions */}
   123	      <div className="bg-white rounded-lg shadow p-6">
   124	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   125	        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
   126	          <Link to="/markets" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   127	            <MapPin className="h-8 w-8 text-primary-600 mr-4" />
   128	            <div>
   129	              <h3 className="font-medium text-gray-900">Browse Markets</h3>
   130	              <p className="text-sm text-gray-600">Find new markets in your area</p>
   131	            </div>
   132	          </Link>
   133	          <Link to="/register?role=stallholder" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   134	            <ShoppingBag className="h-8 w-8 text-secondary-600 mr-4" />
   135	            <div>
   136	              <h3 className="font-medium text-gray-900">Become a Stallholder</h3>
   137	              <p className="text-sm text-gray-600">Start selling at local markets</p>
   138	            </div>
   139	          </Link>
   140	        </div>
   141	      </div>
   142	    </div>
   143	  )
   144	}
   145	
   146	// Stallholder Dashboard Component
   147	const StallholderDashboard = () => {
   148	  return (
   149	    <div>
   150	      {/* Quick Stats */}
   151	      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
   152	        <div className="card">
   153	          <div className="flex items-center">
   154	            <div className="bg-primary-100 rounded-lg p-3">
   155	              <ShoppingBag className="h-6 w-6 text-primary-600" />
   156	            </div>
   157	            <div className="ml-4">
   158	              <p className="text-2xl font-bold text-gray-900">5</p>
   159	              <p className="text-gray-600">Active Applications</p>
   160	            </div>
   161	          </div>
   162	        </div>
   163	        <div className="card">
   164	          <div className="flex items-center">
   165	            <div className="bg-green-100 rounded-lg p-3">
   166	              <BarChart3 className="h-6 w-6 text-green-600" />
   167	            </div>
   168	            <div className="ml-4">
   169	              <p className="text-2xl font-bold text-gray-900">3</p>
   170	              <p className="text-gray-600">Approved</p>
   171	            </div>
   172	          </div>
   173	        </div>
   174	        <div className="card">
   175	          <div className="flex items-center">
   176	            <div className="bg-yellow-100 rounded-lg p-3">
   177	              <Calendar className="h-6 w-6 text-yellow-600" />
   178	            </div>
   179	            <div className="ml-4">
   180	              <p className="text-2xl font-bold text-gray-900">2</p>
   181	              <p className="text-gray-600">This Weekend</p>
   182	            </div>
   183	          </div>
   184	        </div>
   185	        <div className="card">
   186	          <div className="flex items-center">
   187	            <div className="bg-purple-100 rounded-lg p-3">
   188	              <User className="h-6 w-6 text-purple-600" />
   189	            </div>
   190	            <div className="ml-4">
   191	              <p className="text-2xl font-bold text-gray-900">4.8</p>
   192	              <p className="text-gray-600">Rating</p>
   193	            </div>
   194	          </div>
   195	        </div>
   196	      </div>
   197	
   198	      {/* Recent Applications */}
   199	      <div className="bg-white rounded-lg shadow p-6 mb-8">
   200	        <div className="flex items-center justify-between mb-4">
   201	          <h2 className="text-xl font-semibold text-gray-900">Recent Applications</h2>
   202	          <Link to="/apply" className="btn-primary">
   203	            <Plus className="h-4 w-4 mr-2" />
   204	            New Application
   205	          </Link>
   206	        </div>
   207	        <div className="space-y-4">
   208	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   209	            <div>
   210	              <h3 className="font-medium text-gray-900">Adelaide Central Market</h3>
   211	              <p className="text-sm text-gray-600">Applied 2 days ago</p>
   212	            </div>
   213	            <span className="px-3 py-1 text-sm bg-yellow-100 text-yellow-800 rounded-full">
   214	              Pending
   215	            </span>
   216	          </div>
   217	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   218	            <div>
   219	              <h3 className="font-medium text-gray-900">Barossa Farmers Market</h3>
   220	              <p className="text-sm text-gray-600">Applied 1 week ago</p>
   221	            </div>
   222	            <span className="px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full">
   223	              Approved
   224	            </span>
   225	          </div>
   226	        </div>
   227	      </div>
   228	
   229	      {/* Quick Actions */}
   230	      <div className="bg-white rounded-lg shadow p-6">
   231	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   232	        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
   233	          <Link to="/profile" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   234	            <User className="h-8 w-8 text-primary-600 mr-4" />
   235	            <div>
   236	              <h3 className="font-medium text-gray-900">Update Profile</h3>
   237	              <p className="text-sm text-gray-600">Edit your business details</p>
   238	            </div>
   239	          </Link>
   240	          <Link to="/markets" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   241	            <MapPin className="h-8 w-8 text-secondary-600 mr-4" />
   242	            <div>
   243	              <h3 className="font-medium text-gray-900">Find Markets</h3>
   244	              <p className="text-sm text-gray-600">Discover new opportunities</p>
   245	            </div>
   246	          </Link>
   247	          <Link to="/analytics" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   248	            <BarChart3 className="h-8 w-8 text-green-600 mr-4" />
   249	            <div>
   250	              <h3 className="font-medium text-gray-900">View Analytics</h3>
   251	              <p className="text-sm text-gray-600">Track your performance</p>
   252	            </div>
   253	          </Link>
   254	        </div>
   255	      </div>
   256	    </div>
   257	  )
   258	}
   259	
   260	// Organizer Dashboard Component
   261	const OrganizerDashboard = () => {
   262	  return (
   263	    <div>
   264	      {/* Quick Stats */}
   265	      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
   266	        <div className="card">
   267	          <div className="flex items-center">
   268	            <div className="bg-primary-100 rounded-lg p-3">
   269	              <MapPin className="h-6 w-6 text-primary-600" />
   270	            </div>
   271	            <div className="ml-4">
   272	              <p className="text-2xl font-bold text-gray-900">3</p>
   273	              <p className="text-gray-600">Active Markets</p>
   274	            </div>
   275	          </div>
   276	        </div>
   277	        <div className="card">
   278	          <div className="flex items-center">
   279	            <div className="bg-secondary-100 rounded-lg p-3">
   280	              <Users className="h-6 w-6 text-secondary-600" />
   281	            </div>
   282	            <div className="ml-4">
   283	              <p className="text-2xl font-bold text-gray-900">47</p>
   284	              <p className="text-gray-600">Total Stallholders</p>
   285	            </div>
   286	          </div>
   287	        </div>
   288	        <div className="card">
   289	          <div className="flex items-center">
   290	            <div className="bg-yellow-100 rounded-lg p-3">
   291	              <ShoppingBag className="h-6 w-6 text-yellow-600" />
   292	            </div>
   293	            <div className="ml-4">
   294	              <p className="text-2xl font-bold text-gray-900">12</p>
   295	              <p className="text-gray-600">Pending Applications</p>
   296	            </div>
   297	          </div>
   298	        </div>
   299	        <div className="card">
   300	          <div className="flex items-center">
   301	            <div className="bg-green-100 rounded-lg p-3">
   302	              <BarChart3 className="h-6 w-6 text-green-600" />
   303	            </div>
   304	            <div className="ml-4">
   305	              <p className="text-2xl font-bold text-gray-900">$2,450</p>
   306	              <p className="text-gray-600">Monthly Revenue</p>
   307	            </div>
   308	          </div>
   309	        </div>
   310	      </div>
   311	
   312	      {/* Pending Applications */}
   313	      <div className="bg-white rounded-lg shadow p-6 mb-8">
   314	        <div className="flex items-center justify-between mb-4">
   315	          <h2 className="text-xl font-semibold text-gray-900">Pending Applications</h2>
   316	          <Link to="/applications" className="text-primary-600 hover:text-primary-500">
   317	            View all
   318	          </Link>
   319	        </div>
   320	        <div className="space-y-4">
   321	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   322	            <div className="flex items-center">
   323	              <div className="w-10 h-10 bg-gray-200 rounded-full mr-4"></div>
   324	              <div>
   325	                <h3 className="font-medium text-gray-900">Sarah's Organic Produce</h3>
   326	                <p className="text-sm text-gray-600">Applied for Adelaide Central Market</p>
   327	              </div>
   328	            </div>
   329	            <div className="flex space-x-2">
   330	              <button className="px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700">
   331	                Approve
   332	              </button>
   333	              <button className="px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700">
   334	                Reject
   335	              </button>
   336	            </div>
   337	          </div>
   338	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   339	            <div className="flex items-center">
   340	              <div className="w-10 h-10 bg-gray-200 rounded-full mr-4"></div>
   341	              <div>
   342	                <h3 className="font-medium text-gray-900">Handmade Crafts Co</h3>
   343	                <p className="text-sm text-gray-600">Applied for Barossa Farmers Market</p>
   344	              </div>
   345	            </div>
   346	            <div className="flex space-x-2">
   347	              <button className="px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700">
   348	                Approve
   349	              </button>
   350	              <button className="px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700">
   351	                Reject
   352	              </button>
   353	            </div>
   354	          </div>
   355	        </div>
   356	      </div>
   357	
   358	      {/* Quick Actions */}
   359	      <div className="bg-white rounded-lg shadow p-6">
   360	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   361	        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
   362	          <Link to="/markets/create" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   363	            <Plus className="h-8 w-8 text-primary-600 mr-4" />
   364	            <div>
   365	              <h3 className="font-medium text-gray-900">Create Market</h3>
   366	              <p className="text-sm text-gray-600">Add a new market listing</p>
   367	            </div>
   368	          </Link>
   369	          <Link to="/applications" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   370	            <Users className="h-8 w-8 text-secondary-600 mr-4" />
   371	            <div>
   372	              <h3 className="font-medium text-gray-900">Manage Applications</h3>
   373	              <p className="text-sm text-gray-600">Review stallholder requests</p>
   374	            </div>
   375	          </Link>
   376	          <Link to="/analytics" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   377	            <BarChart3 className="h-8 w-8 text-green-600 mr-4" />
   378	            <div>
   379	              <h3 className="font-medium text-gray-900">View Analytics</h3>
   380	              <p className="text-sm text-gray-600">Market performance data</p>
   381	            </div>
   382	          </Link>
   383	        </div>
   384	      </div>
   385	    </div>
   386	  )
   387	}

========================================

üìÅ FILE: src/pages/Home.jsx
   Size: 4.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { Search, MapPin, Users, ShoppingBag, ArrowRight } from 'lucide-react'
     3	
     4	export default function Home() {
     5	  return (
     6	    <div>
     7	      {/* Hero Section */}
     8	      <section className="bg-gradient-to-br from-primary-600 to-primary-800 text-white">
     9	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
    10	          <div className="text-center">
    11	            <h1 className="text-4xl md:text-6xl font-bold mb-6">
    12	              Discover Local Markets
    13	              <span className="block text-secondary-400">Across South Australia</span>
    14	            </h1>
    15	            <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto text-primary-100">
    16	              Connect with vibrant local markets, fresh produce, unique crafts, and community experiences right in your neighborhood.
    17	            </p>
    18	            <div className="flex flex-col sm:flex-row gap-4 justify-center">
    19	              <Link to="/markets" className="btn-secondary text-lg px-8 py-3">
    20	                <Search className="h-5 w-5 mr-2" />
    21	                Browse Markets
    22	              </Link>
    23	              <Link to="/register" className="bg-white text-primary-600 hover:bg-gray-100 font-medium py-3 px-8 rounded-lg transition-colors text-lg">
    24	                Join as Stallholder
    25	              </Link>
    26	            </div>
    27	          </div>
    28	        </div>
    29	      </section>
    30	
    31	      {/* Features Section */}
    32	      <section className="py-20 bg-white">
    33	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    34	          <div className="text-center mb-16">
    35	            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
    36	              Why Choose SA Markets?
    37	            </h2>
    38	            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
    39	              We're building stronger communities by connecting local markets, stallholders, and customers across South Australia.
    40	            </p>
    41	          </div>
    42	
    43	          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
    44	            <div className="text-center">
    45	              <div className="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    46	                <MapPin className="h-8 w-8 text-primary-600" />
    47	              </div>
    48	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Find Markets Nearby</h3>
    49	              <p className="text-gray-600">
    50	                Discover farmers markets, craft fairs, and community markets in your local area with our interactive map and search tools.
    51	              </p>
    52	            </div>
    53	
    54	            <div className="text-center">
    55	              <div className="bg-secondary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    56	                <Users className="h-8 w-8 text-secondary-600" />
    57	              </div>
    58	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Connect Communities</h3>
    59	              <p className="text-gray-600">
    60	                Join a vibrant network of local producers, artisans, and market-goers who share a passion for community and quality.
    61	              </p>
    62	            </div>
    63	
    64	            <div className="text-center">
    65	              <div className="bg-green-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    66	                <ShoppingBag className="h-8 w-8 text-green-600" />
    67	              </div>
    68	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Support Local Business</h3>
    69	              <p className="text-gray-600">
    70	                Shop directly from local farmers, makers, and small businesses while supporting your community's economic growth.
    71	              </p>
    72	            </div>
    73	          </div>
    74	        </div>
    75	      </section>
    76	
    77	      {/* CTA Section */}
    78	      <section className="py-16 bg-gray-50">
    79	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
    80	          <h2 className="text-3xl font-bold text-gray-900 mb-4">
    81	            Ready to explore local markets?
    82	          </h2>
    83	          <p className="text-xl text-gray-600 mb-8">
    84	            Join thousands of South Australians discovering amazing local products and experiences.
    85	          </p>
    86	          <Link to="/markets" className="btn-primary text-lg px-8 py-3 inline-flex items-center">
    87	            Start Exploring
    88	            <ArrowRight className="h-5 w-5 ml-2" />
    89	          </Link>
    90	        </div>
    91	      </section>
    92	    </div>
    93	  )
    94	}

========================================

üìÅ FILE: src/pages/Login.jsx
   Size: 3.9K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Eye, EyeOff } from 'lucide-react'
     4	
     5	export default function Login() {
     6	  const [showPassword, setShowPassword] = useState(false)
     7	  const [formData, setFormData] = useState({
     8	    email: '',
     9	    password: ''
    10	  })
    11	
    12	  const handleSubmit = (e) => {
    13	    e.preventDefault()
    14	    // TODO: Implement login with PocketBase
    15	    console.log('Login:', formData)
    16	  }
    17	
    18	  return (
    19	    <div className="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    20	      <div className="max-w-md w-full space-y-8">
    21	        <div>
    22	          <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
    23	            Welcome back
    24	          </h2>
    25	          <p className="mt-2 text-center text-sm text-gray-600">
    26	            Sign in to your account
    27	          </p>
    28	        </div>
    29	        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
    30	          <div className="space-y-4">
    31	            <div>
    32	              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
    33	                Email address
    34	              </label>
    35	              <input
    36	                id="email"
    37	                name="email"
    38	                type="email"
    39	                required
    40	                className="input-field mt-1"
    41	                placeholder="Enter your email"
    42	                value={formData.email}
    43	                onChange={(e) => setFormData({...formData, email: e.target.value})}
    44	              />
    45	            </div>
    46	            <div>
    47	              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
    48	                Password
    49	              </label>
    50	              <div className="mt-1 relative">
    51	                <input
    52	                  id="password"
    53	                  name="password"
    54	                  type={showPassword ? 'text' : 'password'}
    55	                  required
    56	                  className="input-field pr-10"
    57	                  placeholder="Enter your password"
    58	                  value={formData.password}
    59	                  onChange={(e) => setFormData({...formData, password: e.target.value})}
    60	                />
    61	                <button
    62	                  type="button"
    63	                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
    64	                  onClick={() => setShowPassword(!showPassword)}
    65	                >
    66	                  {showPassword ? (
    67	                    <EyeOff className="h-5 w-5 text-gray-400" />
    68	                  ) : (
    69	                    <Eye className="h-5 w-5 text-gray-400" />
    70	                  )}
    71	                </button>
    72	              </div>
    73	            </div>
    74	          </div>
    75	
    76	          <div className="flex items-center justify-between">
    77	            <div className="flex items-center">
    78	              <input
    79	                id="remember-me"
    80	                name="remember-me"
    81	                type="checkbox"
    82	                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
    83	              />
    84	              <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-900">
    85	                Remember me
    86	              </label>
    87	            </div>
    88	
    89	            <div className="text-sm">
    90	              <Link to="/forgot-password" className="text-primary-600 hover:text-primary-500">
    91	                Forgot your password?
    92	              </Link>
    93	            </div>
    94	          </div>
    95	
    96	          <div>
    97	            <button type="submit" className="btn-primary w-full">
    98	              Sign in
    99	            </button>
   100	          </div>
   101	
   102	          <div className="text-center">
   103	            <span className="text-sm text-gray-600">
   104	              Don't have an account?{' '}
   105	              <Link to="/register" className="text-primary-600 hover:text-primary-500 font-medium">
   106	                Sign up here
   107	              </Link>
   108	            </span>
   109	          </div>
   110	        </form>
   111	      </div>
   112	    </div>
   113	  )
   114	}

========================================

üìÅ FILE: src/pages/MarketDetail.jsx
   Size: 5.1K | Modified: 2025-06-02
----------------------------------------
     1	import { useState, useEffect } from 'react'
     2	import { useParams, Link } from 'react-router-dom'
     3	import { MapPin, Clock, Calendar, ArrowLeft } from 'lucide-react'
     4	import marketService from '../services/marketService'
     5	
     6	export default function MarketDetail() {
     7	  const { slug } = useParams()
     8	  const [market, setMarket] = useState(null)
     9	  const [loading, setLoading] = useState(true)
    10	  const [error, setError] = useState(null)
    11	
    12	  useEffect(() => {
    13	    fetchMarket()
    14	  }, [slug])
    15	
    16	  const fetchMarket = async () => {
    17	    try {
    18	      setLoading(true)
    19	      setError(null)
    20	      const marketData = await marketService.getMarket(slug)
    21	      setMarket(marketData)
    22	    } catch (error) {
    23	      console.error('Error fetching market:', error)
    24	      setError('Market not found or failed to load.')
    25	    } finally {
    26	      setLoading(false)
    27	    }
    28	  }
    29	
    30	  if (loading) {
    31	    return (
    32	      <div className="min-h-screen bg-gray-50 py-8">
    33	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    34	          <div className="text-center py-12">
    35	            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
    36	            <p className="mt-4 text-gray-600">Loading market details...</p>
    37	          </div>
    38	        </div>
    39	      </div>
    40	    )
    41	  }
    42	
    43	  if (error || !market) {
    44	    return (
    45	      <div className="min-h-screen bg-gray-50 py-8">
    46	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    47	          <div className="text-center py-12">
    48	            <p className="text-red-600 mb-4">{error}</p>
    49	            <Link to="/markets" className="btn-primary">
    50	              Back to Markets
    51	            </Link>
    52	          </div>
    53	        </div>
    54	      </div>
    55	    )
    56	  }
    57	
    58	  return (
    59	    <div className="min-h-screen bg-gray-50 py-8">
    60	      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    61	        <Link to="/markets" className="inline-flex items-center text-primary-600 hover:text-primary-500 mb-6">
    62	          <ArrowLeft className="h-5 w-5 mr-2" />
    63	          Back to Markets
    64	        </Link>
    65	
    66	        <div className="bg-white rounded-lg shadow p-8 mb-8">
    67	          {market.expand?.category && (
    68	            <div className="mb-4">
    69	              <span 
    70	                className="inline-block text-white text-sm px-3 py-1 rounded-full"
    71	                style={{ backgroundColor: market.expand.category.color || '#6b7280' }}
    72	              >
    73	                {market.expand.category.name}
    74	              </span>
    75	            </div>
    76	          )}
    77	
    78	          <h1 className="text-4xl font-bold text-gray-900 mb-4">{market.name}</h1>
    79	          
    80	          <div className="flex items-center text-gray-600 mb-6">
    81	            <MapPin className="h-5 w-5 mr-2" />
    82	            <span>{market.address || `${market.suburb}, ${market.state}`}</span>
    83	          </div>
    84	          
    85	          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
    86	            {market.frequency && (
    87	              <div className="flex items-center">
    88	                <Calendar className="h-5 w-5 text-primary-600 mr-3" />
    89	                <div>
    90	                  <p className="font-medium text-gray-900">Schedule</p>
    91	                  <p className="text-gray-600">{market.frequency}</p>
    92	                </div>
    93	              </div>
    94	            )}
    95	
    96	            {market.operating_hours && (
    97	              <div className="flex items-center">
    98	                <Clock className="h-5 w-5 text-primary-600 mr-3" />
    99	                <div>
   100	                  <p className="font-medium text-gray-900">Hours</p>
   101	                  <p className="text-gray-600">{market.operating_hours}</p>
   102	                </div>
   103	              </div>
   104	            )}
   105	
   106	            {market.website && (
   107	              <div className="flex items-center">
   108	                <div>
   109	                  <p className="font-medium text-gray-900">Website</p>
   110	                  <a 
   111	                    href={market.website} 
   112	                    target="_blank" 
   113	                    rel="noopener noreferrer"
   114	                    className="text-primary-600 hover:underline"
   115	                  >
   116	                    Visit Site
   117	                  </a>
   118	                </div>
   119	              </div>
   120	            )}
   121	          </div>
   122	        </div>
   123	
   124	        {market.description && (
   125	          <div className="bg-white rounded-lg shadow p-8 mb-8">
   126	            <h2 className="text-2xl font-bold text-gray-900 mb-4">About This Market</h2>
   127	            <div className="text-gray-600 leading-relaxed">
   128	              {market.description}
   129	            </div>
   130	          </div>
   131	        )}
   132	
   133	        <div className="bg-white rounded-lg shadow p-8">
   134	          <h2 className="text-2xl font-bold text-gray-900 mb-4">Interested in Selling Here?</h2>
   135	          <p className="text-gray-600 mb-6">
   136	            Connect with the market organizers to learn about stallholder opportunities, 
   137	            application requirements, and available spaces.
   138	          </p>
   139	          <div className="flex flex-col sm:flex-row gap-4">
   140	            <Link to="/register" className="btn-primary">
   141	              Apply as Stallholder
   142	            </Link>
   143	            <button className="btn-secondary">
   144	              Contact Organizer
   145	            </button>
   146	          </div>
   147	        </div>
   148	      </div>
   149	    </div>
   150	  )
   151	}

========================================

üìÅ FILE: src/pages/MarketList.jsx
   Size: 7.3K | Modified: 2025-06-02
----------------------------------------
     1	import { useState, useEffect } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Search, Filter, MapPin, Clock, Calendar } from 'lucide-react'
     4	import marketService from '../services/marketService'
     5	
     6	export default function MarketList() {
     7	  const [markets, setMarkets] = useState([])
     8	  const [categories, setCategories] = useState([])
     9	  const [loading, setLoading] = useState(true)
    10	  const [error, setError] = useState(null)
    11	  const [filters, setFilters] = useState({
    12	    search: '',
    13	    category: '',
    14	    state: 'SA'
    15	  })
    16	
    17	  useEffect(() => {
    18	    fetchData()
    19	  }, [filters])
    20	
    21	  const fetchData = async () => {
    22	    try {
    23	      setLoading(true)
    24	      setError(null)
    25	
    26	      // Fetch categories
    27	      const categoriesData = await marketService.getCategories()
    28	      setCategories(categoriesData)
    29	
    30	      // Fetch markets with filters
    31	      const marketsData = await marketService.getMarkets({
    32	        search: filters.search,
    33	        category: filters.category,
    34	        state: filters.state,
    35	        perPage: 50
    36	      })
    37	      
    38	      setMarkets(marketsData.items || [])
    39	    } catch (error) {
    40	      console.error('Error fetching data:', error)
    41	      setError('Failed to load markets. Please try again.')
    42	    } finally {
    43	      setLoading(false)
    44	    }
    45	  }
    46	
    47	  const handleSearchChange = (e) => {
    48	    setFilters({ ...filters, search: e.target.value })
    49	  }
    50	
    51	  const handleCategoryChange = (categoryId) => {
    52	    setFilters({ ...filters, category: categoryId })
    53	  }
    54	
    55	  if (loading) {
    56	    return (
    57	      <div className="min-h-screen bg-gray-50 py-8">
    58	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    59	          <div className="text-center py-12">
    60	            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
    61	            <p className="mt-4 text-gray-600">Loading markets...</p>
    62	          </div>
    63	        </div>
    64	      </div>
    65	    )
    66	  }
    67	
    68	  if (error) {
    69	    return (
    70	      <div className="min-h-screen bg-gray-50 py-8">
    71	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    72	          <div className="text-center py-12">
    73	            <p className="text-red-600">{error}</p>
    74	            <button 
    75	              onClick={fetchData}
    76	              className="btn-primary mt-4"
    77	            >
    78	              Try Again
    79	            </button>
    80	          </div>
    81	        </div>
    82	      </div>
    83	    )
    84	  }
    85	
    86	  return (
    87	    <div className="min-h-screen bg-gray-50 py-8">
    88	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    89	        <div className="mb-8">
    90	          <h1 className="text-3xl font-bold text-gray-900 mb-4">Browse Markets</h1>
    91	          <p className="text-gray-600">
    92	            Discover {markets.length} local markets across South Australia
    93	          </p>
    94	        </div>
    95	
    96	        <div className="bg-white rounded-lg shadow p-6 mb-8">
    97	          <div className="grid grid-cols-1 md:grid-cols-12 gap-4">
    98	            <div className="md:col-span-6">
    99	              <div className="relative">
   100	                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
   101	                <input
   102	                  type="text"
   103	                  placeholder="Search markets by name or location..."
   104	                  className="input-field pl-10"
   105	                  value={filters.search}
   106	                  onChange={handleSearchChange}
   107	                />
   108	              </div>
   109	            </div>
   110	
   111	            <div className="md:col-span-4">
   112	              <select
   113	                className="input-field"
   114	                value={filters.category}
   115	                onChange={(e) => handleCategoryChange(e.target.value)}
   116	              >
   117	                <option value="">All Categories</option>
   118	                {categories.map((category) => (
   119	                  <option key={category.id} value={category.id}>
   120	                    {category.name}
   121	                  </option>
   122	                ))}
   123	              </select>
   124	            </div>
   125	
   126	            <div className="md:col-span-2">
   127	              <select
   128	                className="input-field"
   129	                value={filters.state}
   130	                onChange={(e) => setFilters({ ...filters, state: e.target.value })}
   131	              >
   132	                <option value="SA">South Australia</option>
   133	                <option value="VIC">Victoria</option>
   134	                <option value="NSW">New South Wales</option>
   135	                <option value="QLD">Queensland</option>
   136	                <option value="WA">Western Australia</option>
   137	                <option value="TAS">Tasmania</option>
   138	                <option value="NT">Northern Territory</option>
   139	                <option value="ACT">ACT</option>
   140	              </select>
   141	            </div>
   142	          </div>
   143	        </div>
   144	
   145	        {markets.length === 0 ? (
   146	          <div className="text-center py-12">
   147	            <p className="text-gray-600">No markets found matching your criteria.</p>
   148	            <button 
   149	              onClick={() => setFilters({ search: '', category: '', state: 'SA' })}
   150	              className="btn-secondary mt-4"
   151	            >
   152	              Clear Filters
   153	            </button>
   154	          </div>
   155	        ) : (
   156	          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
   157	            {markets.map((market) => (
   158	              <div key={market.id} className="card hover:shadow-lg transition-shadow">
   159	                {market.expand?.category && (
   160	                  <div className="mb-4">
   161	                    <span 
   162	                      className="inline-block text-white text-xs px-2 py-1 rounded-full"
   163	                      style={{ backgroundColor: market.expand.category.color || '#6b7280' }}
   164	                    >
   165	                      {market.expand.category.name}
   166	                    </span>
   167	                  </div>
   168	                )}
   169	
   170	                <h3 className="text-xl font-semibold text-gray-900 mb-2">{market.name}</h3>
   171	                
   172	                <div className="flex items-center text-gray-600 mb-2">
   173	                  <MapPin className="h-4 w-4 mr-1" />
   174	                  <span>{market.suburb}, {market.state}</span>
   175	                </div>
   176	
   177	                {market.frequency && (
   178	                  <div className="flex items-center text-gray-600 mb-2">
   179	                    <Calendar className="h-4 w-4 mr-1" />
   180	                    <span>{market.frequency}</span>
   181	                  </div>
   182	                )}
   183	
   184	                {market.operating_hours && (
   185	                  <div className="flex items-center text-gray-600 mb-4">
   186	                    <Clock className="h-4 w-4 mr-1" />
   187	                    <span>{market.operating_hours}</span>
   188	                  </div>
   189	                )}
   190	
   191	                {market.description && (
   192	                  <p className="text-gray-600 text-sm mb-4 line-clamp-2">
   193	                    {market.description.substring(0, 100)}...
   194	                  </p>
   195	                )}
   196	
   197	                <div className="flex gap-2">
   198	                  <Link 
   199	                    to={`/markets/${market.slug}`}
   200	                    className="btn-primary flex-1 text-center"
   201	                  >
   202	                    View Details
   203	                  </Link>
   204	                  {market.website && (
   205	                    <button className="btn-secondary px-3 py-2" title="Visit Website">
   206	                      üåê
   207	                    </button>
   208	                  )}
   209	                </div>
   210	              </div>
   211	            ))}
   212	          </div>
   213	        )}
   214	      </div>
   215	    </div>
   216	  )
   217	}

========================================

üìÅ FILE: src/pages/Register.jsx
   Size: 4.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Eye, EyeOff } from 'lucide-react'
     4	
     5	export default function Register() {
     6	  const [showPassword, setShowPassword] = useState(false)
     7	  const [formData, setFormData] = useState({
     8	    name: '',
     9	    email: '',
    10	    password: '',
    11	    role: 'customer'
    12	  })
    13	
    14	  const handleSubmit = (e) => {
    15	    e.preventDefault()
    16	    // TODO: Implement registration with PocketBase
    17	    console.log('Register:', formData)
    18	  }
    19	
    20	  return (
    21	    <div className="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    22	      <div className="max-w-md w-full space-y-8">
    23	        <div>
    24	          <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
    25	            Join SA Markets
    26	          </h2>
    27	          <p className="mt-2 text-center text-sm text-gray-600">
    28	            Create your account to get started
    29	          </p>
    30	        </div>
    31	        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
    32	          <div className="space-y-4">
    33	            <div>
    34	              <label htmlFor="name" className="block text-sm font-medium text-gray-700">
    35	                Full Name
    36	              </label>
    37	              <input
    38	                id="name"
    39	                name="name"
    40	                type="text"
    41	                required
    42	                className="input-field mt-1"
    43	                placeholder="Enter your full name"
    44	                value={formData.name}
    45	                onChange={(e) => setFormData({...formData, name: e.target.value})}
    46	              />
    47	            </div>
    48	            <div>
    49	              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
    50	                Email address
    51	              </label>
    52	              <input
    53	                id="email"
    54	                name="email"
    55	                type="email"
    56	                required
    57	                className="input-field mt-1"
    58	                placeholder="Enter your email"
    59	                value={formData.email}
    60	                onChange={(e) => setFormData({...formData, email: e.target.value})}
    61	              />
    62	            </div>
    63	            <div>
    64	              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
    65	                Password
    66	              </label>
    67	              <div className="mt-1 relative">
    68	                <input
    69	                  id="password"
    70	                  name="password"
    71	                  type={showPassword ? 'text' : 'password'}
    72	                  required
    73	                  className="input-field pr-10"
    74	                  placeholder="Create a password"
    75	                  value={formData.password}
    76	                  onChange={(e) => setFormData({...formData, password: e.target.value})}
    77	                />
    78	                <button
    79	                  type="button"
    80	                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
    81	                  onClick={() => setShowPassword(!showPassword)}
    82	                >
    83	                  {showPassword ? (
    84	                    <EyeOff className="h-5 w-5 text-gray-400" />
    85	                  ) : (
    86	                    <Eye className="h-5 w-5 text-gray-400" />
    87	                  )}
    88	                </button>
    89	              </div>
    90	            </div>
    91	            <div>
    92	              <label htmlFor="role" className="block text-sm font-medium text-gray-700">
    93	                I am a...
    94	              </label>
    95	              <select
    96	                id="role"
    97	                name="role"
    98	                className="input-field mt-1"
    99	                value={formData.role}
   100	                onChange={(e) => setFormData({...formData, role: e.target.value})}
   101	              >
   102	                <option value="customer">Market Customer</option>
   103	                <option value="stallholder">Stallholder/Vendor</option>
   104	                <option value="organizer">Market Organizer</option>
   105	              </select>
   106	            </div>
   107	          </div>
   108	
   109	          <div>
   110	            <button type="submit" className="btn-primary w-full">
   111	              Create Account
   112	            </button>
   113	          </div>
   114	
   115	          <div className="text-center">
   116	            <span className="text-sm text-gray-600">
   117	              Already have an account?{' '}
   118	              <Link to="/login" className="text-primary-600 hover:text-primary-500 font-medium">
   119	                Sign in here
   120	              </Link>
   121	            </span>
   122	          </div>
   123	        </form>
   124	      </div>
   125	    </div>
   126	  )
   127	}

========================================

üìÅ FILE: src/services/ApplicationService.js
   Size: 4.5K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/ApplicationService.js - Fix the import and missing methods
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	
     5	class ApplicationService {
     6	  // Get applications for market organizer
     7	  async getMarketApplications(marketId, filters = {}) {
     8	    try {
     9	      const filterConditions = [`market = "${marketId}"`];
    10	      
    11	      if (filters.status) {
    12	        filterConditions.push(`status = "${filters.status}"`);
    13	      }
    14	
    15	      const result = await pb.collection('applications').getList(
    16	        filters.page || 1,
    17	        filters.perPage || 20,
    18	        {
    19	          filter: filterConditions.join(' && '),
    20	          sort: '-created',
    21	          expand: 'stallholder,stallholder.user,market'
    22	        }
    23	      );
    24	
    25	      return result;
    26	    } catch (error) {
    27	      console.error('Error fetching market applications:', error);
    28	      throw error;
    29	    }
    30	  }
    31	
    32	  // Get applications for stallholder (method that was missing)
    33	  async getStallholderApplications(stallholderId, filters = {}) {
    34	    try {
    35	      const filterConditions = [`stallholder = "${stallholderId}"`];
    36	      
    37	      if (filters.status) {
    38	        filterConditions.push(`status = "${filters.status}"`);
    39	      }
    40	
    41	      const result = await pb.collection('applications').getList(
    42	        filters.page || 1,
    43	        filters.perPage || 20,
    44	        {
    45	          filter: filterConditions.join(' && '),
    46	          sort: '-created',
    47	          expand: 'market,stallholder'
    48	        }
    49	      );
    50	
    51	      return result;
    52	    } catch (error) {
    53	      console.error('Error fetching stallholder applications:', error);
    54	      throw error;
    55	    }
    56	  }
    57	
    58	  // Submit application to market
    59	  async submitApplication(applicationData) {
    60	    try {
    61	      const application = await pb.collection('applications').create({
    62	        ...applicationData,
    63	        status: 'pending',
    64	        payment_status: 'unpaid'
    65	      });
    66	      
    67	      auditLogger.log('application_submitted', pb.authStore.model?.id, {
    68	        applicationId: application.id,
    69	        marketId: applicationData.market,
    70	        stallholderId: applicationData.stallholder
    71	      });
    72	
    73	      return application;
    74	    } catch (error) {
    75	      console.error('Error submitting application:', error);
    76	      throw error;
    77	    }
    78	  }
    79	
    80	  // Update application status
    81	  async updateApplicationStatus(applicationId, status, organizerNotes = '') {
    82	    try {
    83	      const application = await pb.collection('applications').update(applicationId, {
    84	        status,
    85	        organizer_notes: organizerNotes
    86	      });
    87	      
    88	      auditLogger.log('application_status_updated', pb.authStore.model?.id, {
    89	        applicationId,
    90	        newStatus: status
    91	      });
    92	
    93	      return application;
    94	    } catch (error) {
    95	      console.error('Error updating application status:', error);
    96	      throw error;
    97	    }
    98	  }
    99	
   100	  // Get application statistics for market
   101	  async getApplicationStats(marketId) {
   102	    try {
   103	      const applications = await pb.collection('applications').getFullList({
   104	        filter: `market = "${marketId}"`
   105	      });
   106	
   107	      const stats = {
   108	        total: applications.length,
   109	        pending: applications.filter(app => app.status === 'pending').length,
   110	        approved: applications.filter(app => app.status === 'approved').length,
   111	        rejected: applications.filter(app => app.status === 'rejected').length,
   112	        cancelled: applications.filter(app => app.status === 'cancelled').length
   113	      };
   114	
   115	      return stats;
   116	    } catch (error) {
   117	      console.error('Error fetching application stats:', error);
   118	      throw error;
   119	    }
   120	  }
   121	
   122	  // Check if stallholder has existing application for market
   123	  async checkExistingApplication(stallholderId, marketId) {
   124	    try {
   125	      const existing = await pb.collection('applications').getFirstListItem(
   126	        `stallholder = "${stallholderId}" && market = "${marketId}" && status != "cancelled" && status != "rejected"`
   127	      );
   128	      return existing;
   129	    } catch (error) {
   130	      if (error.status === 404) {
   131	        return null; // No existing application
   132	      }
   133	      throw error;
   134	    }
   135	  }
   136	
   137	  // Cancel application
   138	  async cancelApplication(applicationId) {
   139	    try {
   140	      const application = await pb.collection('applications').update(applicationId, {
   141	        status: 'cancelled'
   142	      });
   143	      
   144	      auditLogger.log('application_cancelled', pb.authStore.model?.id, {
   145	        applicationId
   146	      });
   147	
   148	      return application;
   149	    } catch (error) {
   150	      console.error('Error cancelling application:', error);
   151	      throw error;
   152	    }
   153	  }
   154	}
   155	
   156	export default new ApplicationService();

========================================

üìÅ FILE: src/services/StallholderService.js
   Size: 5.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/StallholderService.js - Updated to fix import issues
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	import ApplicationService from './ApplicationService.js';
     5	
     6	class StallholderService {
     7	  // Get all stallholders with filtering
     8	  async getStallholders(filters = {}) {
     9	    try {
    10	      const filterConditions = ['user != ""']; // Changed from 'active = true' since we don't have that field
    11	      
    12	      if (filters.category) {
    13	        filterConditions.push(`product_categories ~ "${filters.category}"`);
    14	      }
    15	      
    16	      if (filters.state) {
    17	        filterConditions.push(`state = "${filters.state}"`);
    18	      }
    19	      
    20	      if (filters.search) {
    21	        filterConditions.push(`(business_name ~ "${filters.search}" || description ~ "${filters.search}")`);
    22	      }
    23	
    24	      if (filters.rating) {
    25	        filterConditions.push(`rating >= ${filters.rating}`);
    26	      }
    27	
    28	      if (filters.user) {
    29	        filterConditions.push(`user = "${filters.user}"`);
    30	      }
    31	
    32	      const result = await pb.collection('stallholders').getList(
    33	        filters.page || 1,
    34	        filters.perPage || 20,
    35	        {
    36	          filter: filterConditions.join(' && '),
    37	          sort: filters.sort || '-created',
    38	          expand: 'user'
    39	        }
    40	      );
    41	
    42	      return result;
    43	    } catch (error) {
    44	      console.error('Error fetching stallholders:', error);
    45	      throw error;
    46	    }
    47	  }
    48	
    49	  // Get single stallholder
    50	  async getStallholder(id) {
    51	    try {
    52	      const stallholder = await pb.collection('stallholders').getOne(id, {
    53	        expand: 'user'
    54	      });
    55	      return stallholder;
    56	    } catch (error) {
    57	      console.error('Error fetching stallholder:', error);
    58	      throw error;
    59	    }
    60	  }
    61	
    62	  // Create stallholder profile
    63	  async createStallholder(stallholderData) {
    64	    try {
    65	      const stallholder = await pb.collection('stallholders').create(stallholderData);
    66	      
    67	      auditLogger.log('stallholder_created', pb.authStore.model?.id, {
    68	        stallholderId: stallholder.id,
    69	        businessName: stallholder.business_name
    70	      });
    71	
    72	      return stallholder;
    73	    } catch (error) {
    74	      console.error('Error creating stallholder:', error);
    75	      throw error;
    76	    }
    77	  }
    78	
    79	  // Update stallholder profile
    80	  async updateStallholder(id, stallholderData) {
    81	    try {
    82	      const stallholder = await pb.collection('stallholders').update(id, stallholderData);
    83	      
    84	      auditLogger.log('stallholder_updated', pb.authStore.model?.id, {
    85	        stallholderId: id,
    86	        changes: Object.keys(stallholderData)
    87	      });
    88	
    89	      return stallholder;
    90	    } catch (error) {
    91	      console.error('Error updating stallholder:', error);
    92	      throw error;
    93	    }
    94	  }
    95	
    96	  // Get stallholder's applications - now properly delegated
    97	  async getApplications(stallholderId, filters = {}) {
    98	    return ApplicationService.getStallholderApplications(stallholderId, filters);
    99	  }
   100	
   101	  // Submit application to market - now properly delegated
   102	  async submitApplication(applicationData) {
   103	    return ApplicationService.submitApplication(applicationData);
   104	  }
   105	
   106	  // Get reviews for stallholder
   107	  async getReviews(stallholderId) {
   108	    try {
   109	      const reviews = await pb.collection('reviews').getList(1, 50, {
   110	        filter: `target_id = "${stallholderId}" && target_type = "stallholder"`,
   111	        sort: '-created',
   112	        expand: 'reviewer'
   113	      });
   114	      return reviews;
   115	    } catch (error) {
   116	      console.error('Error fetching reviews:', error);
   117	      throw error;
   118	    }
   119	  }
   120	
   121	  // Add review for stallholder
   122	  async addReview(reviewData) {
   123	    try {
   124	      const review = await pb.collection('reviews').create({
   125	        ...reviewData,
   126	        target_type: 'stallholder'
   127	      });
   128	
   129	      // Update stallholder rating
   130	      await this.updateStallholderRating(reviewData.target_id);
   131	      
   132	      auditLogger.log('review_added', pb.authStore.model?.id, {
   133	        reviewId: review.id,
   134	        targetId: reviewData.target_id,
   135	        rating: reviewData.rating
   136	      });
   137	
   138	      return review;
   139	    } catch (error) {
   140	      console.error('Error adding review:', error);
   141	      throw error;
   142	    }
   143	  }
   144	
   145	  // Update stallholder's average rating
   146	  async updateStallholderRating(stallholderId) {
   147	    try {
   148	      const reviews = await pb.collection('reviews').getFullList({
   149	        filter: `target_id = "${stallholderId}" && target_type = "stallholder"`
   150	      });
   151	
   152	      if (reviews.length === 0) return;
   153	
   154	      const totalRating = reviews.reduce((sum, review) => sum + review.rating, 0);
   155	      const averageRating = totalRating / reviews.length;
   156	
   157	      await pb.collection('stallholders').update(stallholderId, {
   158	        rating: Math.round(averageRating * 10) / 10, // Round to 1 decimal
   159	        reviews_count: reviews.length
   160	      });
   161	    } catch (error) {
   162	      console.error('Error updating stallholder rating:', error);
   163	    }
   164	  }
   165	
   166	  // Get product categories
   167	  async getProductCategories() {
   168	    return [
   169	      'Fresh Produce',
   170	      'Baked Goods',
   171	      'Arts & Crafts',
   172	      'Clothing & Accessories',
   173	      'Food & Beverages',
   174	      'Home & Garden',
   175	      'Beauty & Wellness',
   176	      'Books & Media',
   177	      'Vintage & Antiques',
   178	      'Handmade Jewelry',
   179	      'Plants & Flowers',
   180	      'Other'
   181	    ];
   182	  }
   183	}
   184	
   185	export default new StallholderService();

========================================

üìÅ FILE: src/services/marketService.js
   Size: 5.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/marketService.js - Updated with better error handling
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	
     5	class MarketService {
     6	  // Get all active markets
     7	  async getMarkets(filters = {}) {
     8	    try {
     9	      const filterConditions = []; // Removed 'active = true' since the field might not exist yet
    10	      
    11	      if (filters.state) {
    12	        filterConditions.push(`state = "${filters.state}"`);
    13	      }
    14	      
    15	      if (filters.category) {
    16	        filterConditions.push(`category = "${filters.category}"`);
    17	      }
    18	      
    19	      if (filters.search) {
    20	        filterConditions.push(`(name ~ "${filters.search}" || suburb ~ "${filters.search}" || description ~ "${filters.search}")`);
    21	      }
    22	
    23	      const filterString = filterConditions.length > 0 ? filterConditions.join(' && ') : '';
    24	
    25	      const result = await pb.collection('markets').getList(
    26	        filters.page || 1,
    27	        filters.perPage || 20,
    28	        {
    29	          filter: filterString,
    30	          sort: filters.sort || '-created',
    31	          expand: 'category,organizer'
    32	        }
    33	      );
    34	
    35	      return result;
    36	    } catch (error) {
    37	      console.error('Error fetching markets:', error);
    38	      throw error;
    39	    }
    40	  }
    41	
    42	  // Get single market by ID or slug
    43	  async getMarket(idOrSlug) {
    44	    try {
    45	      const market = await pb.collection('markets').getFirstListItem(
    46	        `id = "${idOrSlug}" || slug = "${idOrSlug}"`,
    47	        {
    48	          expand: 'category,organizer'
    49	        }
    50	      );
    51	
    52	      return market;
    53	    } catch (error) {
    54	      console.error('Error fetching market:', error);
    55	      throw error;
    56	    }
    57	  }
    58	
    59	  // Create new market
    60	  async createMarket(marketData) {
    61	    try {
    62	      const market = await pb.collection('markets').create(marketData);
    63	      
    64	      auditLogger.log('market_created', pb.authStore.model?.id, {
    65	        marketId: market.id,
    66	        marketName: market.name
    67	      });
    68	
    69	      return market;
    70	    } catch (error) {
    71	      console.error('Error creating market:', error);
    72	      throw error;
    73	    }
    74	  }
    75	
    76	  // Update market
    77	  async updateMarket(id, marketData) {
    78	    try {
    79	      const market = await pb.collection('markets').update(id, marketData);
    80	      
    81	      auditLogger.log('market_updated', pb.authStore.model?.id, {
    82	        marketId: id,
    83	        changes: Object.keys(marketData)
    84	      });
    85	
    86	      return market;
    87	    } catch (error) {
    88	      console.error('Error updating market:', error);
    89	      throw error;
    90	    }
    91	  }
    92	
    93	  // Delete market
    94	  async deleteMarket(id) {
    95	    try {
    96	      await pb.collection('markets').delete(id);
    97	      
    98	      auditLogger.log('market_deleted', pb.authStore.model?.id, {
    99	        marketId: id
   100	      });
   101	
   102	      return true;
   103	    } catch (error) {
   104	      console.error('Error deleting market:', error);
   105	      throw error;
   106	    }
   107	  }
   108	
   109	  // Search markets by location (geolocation)
   110	  async searchNearby(latitude, longitude, radiusKm = 25) {
   111	    try {
   112	      // This is a simplified version - in production you'd use proper geospatial queries
   113	      const markets = await pb.collection('markets').getList(1, 50, {
   114	        filter: 'latitude != null && longitude != null',
   115	        expand: 'category'
   116	      });
   117	
   118	      // Calculate distances client-side (in production, do this server-side)
   119	      const marketsWithDistance = markets.items.map(market => {
   120	        const distance = this.calculateDistance(
   121	          latitude, longitude,
   122	          market.latitude, market.longitude
   123	        );
   124	        return { ...market, distance };
   125	      });
   126	
   127	      // Filter by radius and sort by distance
   128	      return marketsWithDistance
   129	        .filter(market => market.distance <= radiusKm)
   130	        .sort((a, b) => a.distance - b.distance);
   131	    } catch (error) {
   132	      console.error('Error searching nearby markets:', error);
   133	      throw error;
   134	    }
   135	  }
   136	
   137	  // Calculate distance between two points (Haversine formula)
   138	  calculateDistance(lat1, lon1, lat2, lon2) {
   139	    const R = 6371; // Earth's radius in kilometers
   140	    const dLat = this.deg2rad(lat2 - lat1);
   141	    const dLon = this.deg2rad(lon2 - lon1);
   142	    const a = 
   143	      Math.sin(dLat/2) * Math.sin(dLat/2) +
   144	      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * 
   145	      Math.sin(dLon/2) * Math.sin(dLon/2);
   146	    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
   147	    return R * c;
   148	  }
   149	
   150	  deg2rad(deg) {
   151	    return deg * (Math.PI/180);
   152	  }
   153	
   154	  // Get market categories - handle case where collection might not exist yet
   155	  async getCategories() {
   156	    try {
   157	      const categories = await pb.collection('market_categories').getFullList({
   158	        sort: 'name'
   159	      });
   160	      return categories;
   161	    } catch (error) {
   162	      console.error('Error fetching categories:', error);
   163	      // Return default categories if collection doesn't exist yet
   164	      return [
   165	        { id: 'farmers', name: 'Farmers Market', color: '#22c55e' },
   166	        { id: 'craft', name: 'Craft & Artisan', color: '#8b5cf6' },
   167	        { id: 'community', name: 'Community Market', color: '#3b82f6' },
   168	        { id: 'specialty', name: 'Specialty Market', color: '#f59e0b' },
   169	        { id: 'food', name: 'Food Market', color: '#ef4444' },
   170	        { id: 'vintage', name: 'Vintage & Antiques', color: '#6b7280' }
   171	      ];
   172	    }
   173	  }
   174	}
   175	
   176	export default new MarketService();

========================================

üìÅ FILE: src/utils/security.js
   Size: 4.3K | Modified: 2025-06-02
----------------------------------------
     1	// Input validation and sanitization
     2	export const validation = {
     3	  // Australian-specific validation
     4	  validateABN(abn) {
     5	    const cleanABN = abn.replace(/\s/g, '');
     6	    if (!/^\d{11}$/.test(cleanABN)) return false;
     7	    
     8	    // ABN checksum validation
     9	    const weights = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];
    10	    let sum = 0;
    11	    
    12	    for (let i = 0; i < 11; i++) {
    13	      sum += (parseInt(cleanABN[i]) - (i === 0 ? 1 : 0)) * weights[i];
    14	    }
    15	    
    16	    return sum % 89 === 0;
    17	  },
    18	
    19	  validateAustralianPhone(phone) {
    20	    const cleanPhone = phone.replace(/[\s\-\(\)]/g, '');
    21	    const australianPhoneRegex = /^(\+61|0)[2-478](?:[0-9]){8}$/;
    22	    return australianPhoneRegex.test(cleanPhone);
    23	  },
    24	
    25	  validatePostcode(postcode) {
    26	    return /^\d{4}$/.test(postcode);
    27	  },
    28	
    29	  validateEmail(email) {
    30	    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    31	    return emailRegex.test(email) && email.length <= 254;
    32	  },
    33	
    34	  // Password strength validation
    35	  validatePassword(password) {
    36	    const minLength = 12;
    37	    const hasUpperCase = /[A-Z]/.test(password);
    38	    const hasLowerCase = /[a-z]/.test(password);
    39	    const hasNumbers = /\d/.test(password);
    40	    const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
    41	    
    42	    return {
    43	      isValid: password.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar,
    44	      length: password.length >= minLength,
    45	      uppercase: hasUpperCase,
    46	      lowercase: hasLowerCase,
    47	      numbers: hasNumbers,
    48	      special: hasSpecialChar,
    49	      score: [hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChar, password.length >= minLength]
    50	        .filter(Boolean).length
    51	    };
    52	  }
    53	};
    54	
    55	// Data sanitization
    56	export const sanitizer = {
    57	  // Remove potentially dangerous characters
    58	  sanitizeInput(input) {
    59	    if (typeof input !== 'string') return input;
    60	    
    61	    return input
    62	      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '') // Remove script tags
    63	      .replace(/javascript:/gi, '') // Remove javascript: URLs
    64	      .replace(/on\w+=/gi, '') // Remove event handlers
    65	      .replace(/[<>]/g, '') // Remove angle brackets
    66	      .trim();
    67	  },
    68	
    69	  // Sanitize HTML content (for descriptions, etc.)
    70	  sanitizeHTML(html) {
    71	    // In production, use a proper HTML sanitizer like DOMPurify
    72	    const allowedTags = ['p', 'br', 'strong', 'em', 'ul', 'ol', 'li', 'h1', 'h2', 'h3'];
    73	    // For now, just remove script tags and dangerous attributes
    74	    return html
    75	      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
    76	      .replace(/on\w+="[^"]*"/gi, '')
    77	      .replace(/javascript:/gi, '');
    78	  },
    79	
    80	  // Sanitize file names
    81	  sanitizeFileName(fileName) {
    82	    return fileName
    83	      .replace(/[^a-zA-Z0-9.\-_]/g, '_')
    84	      .replace(/_{2,}/g, '_')
    85	      .substr(0, 255);
    86	  }
    87	};
    88	
    89	// Rate limiting helper
    90	export const rateLimiter = {
    91	  attempts: new Map(),
    92	
    93	  isAllowed(key, limit = 5, windowMs = 15 * 60 * 1000) { // 5 attempts per 15 minutes
    94	    const now = Date.now();
    95	    const userAttempts = this.attempts.get(key) || [];
    96	    
    97	    // Remove old attempts outside the window
    98	    const validAttempts = userAttempts.filter(time => now - time < windowMs);
    99	    
   100	    if (validAttempts.length >= limit) {
   101	      return false;
   102	    }
   103	    
   104	    // Add current attempt
   105	    validAttempts.push(now);
   106	    this.attempts.set(key, validAttempts);
   107	    
   108	    return true;
   109	  },
   110	
   111	  getRemainingAttempts(key, limit = 5, windowMs = 15 * 60 * 1000) {
   112	    const now = Date.now();
   113	    const userAttempts = this.attempts.get(key) || [];
   114	    const validAttempts = userAttempts.filter(time => now - time < windowMs);
   115	    
   116	    return Math.max(0, limit - validAttempts.length);
   117	  }
   118	};
   119	
   120	// Audit logging
   121	export const auditLogger = {
   122	  log(event, userId, details = {}) {
   123	    const auditEntry = {
   124	      event,
   125	      userId,
   126	      details,
   127	      timestamp: new Date().toISOString(),
   128	      userAgent: navigator.userAgent,
   129	      sessionId: sessionStorage.getItem('session_id') || 'no_session'
   130	    };
   131	
   132	    // In development, log to console
   133	    if (import.meta.env.VITE_ENVIRONMENT === 'development') {
   134	      console.log('AUDIT LOG:', auditEntry);
   135	    }
   136	
   137	    // Store in local storage for debugging (remove in production)
   138	    const logs = JSON.parse(localStorage.getItem('audit_logs') || '[]');
   139	    logs.push(auditEntry);
   140	    localStorage.setItem('audit_logs', JSON.stringify(logs.slice(-100))); // Keep last 100
   141	  }
   142	};

========================================

üìÅ FILE: src/App.css
   Size: 606 | Modified: 2025-06-02
----------------------------------------
     1	#root {
     2	  max-width: 1280px;
     3	  margin: 0 auto;
     4	  padding: 2rem;
     5	  text-align: center;
     6	}
     7	
     8	.logo {
     9	  height: 6em;
    10	  padding: 1.5em;
    11	  will-change: filter;
    12	  transition: filter 300ms;
    13	}
    14	.logo:hover {
    15	  filter: drop-shadow(0 0 2em #646cffaa);
    16	}
    17	.logo.react:hover {
    18	  filter: drop-shadow(0 0 2em #61dafbaa);
    19	}
    20	
    21	@keyframes logo-spin {
    22	  from {
    23	    transform: rotate(0deg);
    24	  }
    25	  to {
    26	    transform: rotate(360deg);
    27	  }
    28	}
    29	
    30	@media (prefers-reduced-motion: no-preference) {
    31	  a:nth-of-type(2) .logo {
    32	    animation: logo-spin infinite 20s linear;
    33	  }
    34	}
    35	
    36	.card {
    37	  padding: 2em;
    38	}
    39	
    40	.read-the-docs {
    41	  color: #888;
    42	}

========================================

üìÅ FILE: src/App.jsx
   Size: 3.3K | Modified: 2025-06-02
----------------------------------------
     1	// src/App.jsx - ONLY this content (clean version)
     2	import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'
     3	import { AuthProvider } from './contexts/AuthContext'
     4	import Layout from './components/layout/Layout'
     5	import Home from './pages/Home'
     6	import MarketList from './pages/MarketList'
     7	import MarketDetail from './pages/MarketDetail'
     8	import Login from './pages/Login'
     9	import Register from './pages/Register'
    10	import Dashboard from './pages/Dashboard'
    11	import ProtectedRoute from './components/auth/ProtectedRoute'
    12	import './App.css'
    13	
    14	function App() {
    15	  return (
    16	    <AuthProvider>
    17	      <Router>
    18	        <Layout>
    19	          <Routes>
    20	            <Route path="/" element={<Home />} />
    21	            <Route path="/markets" element={<MarketList />} />
    22	            <Route path="/markets/:slug" element={<MarketDetail />} />
    23	            <Route path="/login" element={<Login />} />
    24	            <Route path="/register" element={<Register />} />
    25	            <Route 
    26	              path="/dashboard" 
    27	              element={
    28	                <ProtectedRoute>
    29	                  <Dashboard />
    30	                </ProtectedRoute>
    31	              } 
    32	            />
    33	            {/* Placeholder routes for future features */}
    34	            <Route 
    35	              path="/profile" 
    36	              element={
    37	                <ProtectedRoute>
    38	                  <div className="min-h-screen bg-gray-50 py-8">
    39	                    <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    40	                      <h1 className="text-3xl font-bold text-gray-900 mb-4">Profile</h1>
    41	                      <p className="text-gray-600">Profile management coming soon...</p>
    42	                    </div>
    43	                  </div>
    44	                </ProtectedRoute>
    45	              } 
    46	            />
    47	            <Route 
    48	              path="/stallholders" 
    49	              element={
    50	                <div className="min-h-screen bg-gray-50 py-8">
    51	                  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    52	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">For Stallholders</h1>
    53	                    <p className="text-gray-600">Stallholder directory coming soon...</p>
    54	                  </div>
    55	                </div>
    56	              } 
    57	            />
    58	            <Route 
    59	              path="/organizers" 
    60	              element={
    61	                <div className="min-h-screen bg-gray-50 py-8">
    62	                  <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    63	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">For Market Organizers</h1>
    64	                    <p className="text-gray-600">Market organizer tools coming soon...</p>
    65	                  </div>
    66	                </div>
    67	              } 
    68	            />
    69	            <Route 
    70	              path="/about" 
    71	              element={
    72	                <div className="min-h-screen bg-gray-50 py-8">
    73	                  <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    74	                    <h1 className="text-3xl font-bold text-gray-900 mb-4">About SA Markets</h1>
    75	                    <p className="text-gray-600">About page coming soon...</p>
    76	                  </div>
    77	                </div>
    78	              } 
    79	            />
    80	          </Routes>
    81	        </Layout>
    82	      </Router>
    83	    </AuthProvider>
    84	  )
    85	}
    86	
    87	export default App

========================================

üìÅ FILE: src/components/auth/ProtectedRoute.jsx
   Size: 749 | Modified: 2025-06-02
----------------------------------------
     1	// src/components/auth/ProtectedRoute.jsx
     2	import { Navigate, useLocation } from 'react-router-dom'
     3	import { useAuth } from '../../contexts/AuthContext'
     4	
     5	export default function ProtectedRoute({ children, requiredRole = null }) {
     6	  const { user, loading } = useAuth()
     7	  const location = useLocation()
     8	
     9	  if (loading) {
    10	    return (
    11	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    12	        <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600"></div>
    13	      </div>
    14	    )
    15	  }
    16	
    17	  if (!user) {
    18	    return <Navigate to="/login" state={{ from: location }} replace />
    19	  }
    20	
    21	  if (requiredRole && user.role !== requiredRole) {
    22	    return <Navigate to="/dashboard" replace />
    23	  }
    24	
    25	  return children
    26	}

========================================

üìÅ FILE: src/components/layout/Footer.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { MapPin, Mail, Phone, Facebook, Instagram, Twitter } from 'lucide-react'
     3	
     4	export default function Footer() {
     5	  return (
     6	    <footer className="bg-gray-900 text-white">
     7	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
     8	        <div className="grid grid-cols-1 md:grid-cols-4 gap-8">
     9	          {/* Brand */}
    10	          <div className="col-span-1 md:col-span-2">
    11	            <div className="flex items-center space-x-2 mb-4">
    12	              <MapPin className="h-8 w-8 text-primary-400" />
    13	              <span className="text-xl font-bold">SA Markets Directory</span>
    14	            </div>
    15	            <p className="text-gray-300 mb-4 max-w-md">
    16	              Connecting communities through vibrant local markets across South Australia. 
    17	              Discover fresh produce, unique crafts, and local businesses in your area.
    18	            </p>
    19	            <div className="flex space-x-4">
    20	              <Facebook className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    21	              <Instagram className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    22	              <Twitter className="h-5 w-5 text-gray-400 hover:text-primary-400 cursor-pointer transition-colors" />
    23	            </div>
    24	          </div>
    25	
    26	          {/* Quick Links */}
    27	          <div>
    28	            <h3 className="text-lg font-semibold mb-4">Quick Links</h3>
    29	            <ul className="space-y-2">
    30	              <li><Link to="/markets" className="text-gray-300 hover:text-primary-400 transition-colors">Browse Markets</Link></li>
    31	              <li><Link to="/stallholders" className="text-gray-300 hover:text-primary-400 transition-colors">For Stallholders</Link></li>
    32	              <li><Link to="/organizers" className="text-gray-300 hover:text-primary-400 transition-colors">For Organizers</Link></li>
    33	              <li><Link to="/about" className="text-gray-300 hover:text-primary-400 transition-colors">About Us</Link></li>
    34	              <li><Link to="/contact" className="text-gray-300 hover:text-primary-400 transition-colors">Contact</Link></li>
    35	            </ul>
    36	          </div>
    37	
    38	          {/* Support */}
    39	          <div>
    40	            <h3 className="text-lg font-semibold mb-4">Support</h3>
    41	            <ul className="space-y-2">
    42	              <li><Link to="/help" className="text-gray-300 hover:text-primary-400 transition-colors">Help Center</Link></li>
    43	              <li><Link to="/privacy" className="text-gray-300 hover:text-primary-400 transition-colors">Privacy Policy</Link></li>
    44	              <li><Link to="/terms" className="text-gray-300 hover:text-primary-400 transition-colors">Terms of Service</Link></li>
    45	              <li>
    46	                <div className="flex items-center space-x-2 text-gray-300">
    47	                  <Mail className="h-4 w-4" />
    48	                  <span>hello@samarkets.com.au</span>
    49	                </div>
    50	              </li>
    51	            </ul>
    52	          </div>
    53	        </div>
    54	
    55	        <hr className="border-gray-800 my-8" />
    56	
    57	        <div className="flex flex-col md:flex-row justify-between items-center">
    58	          <p className="text-gray-400 text-sm">
    59	            ¬© 2025 SA Markets Directory. All rights reserved.
    60	          </p>
    61	          <p className="text-gray-400 text-sm mt-2 md:mt-0">
    62	            Built with ‚ù§Ô∏è for Australian communities
    63	          </p>
    64	        </div>
    65	      </div>
    66	    </footer>
    67	  )
    68	}

========================================

üìÅ FILE: src/components/layout/Header.jsx
   Size: 3.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Menu, X, MapPin, User } from 'lucide-react'
     4	
     5	export default function Header() {
     6	  const [isMenuOpen, setIsMenuOpen] = useState(false)
     7	
     8	  return (
     9	    <header className="bg-white shadow-sm border-b">
    10	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    11	        <div className="flex justify-between items-center h-16">
    12	          {/* Logo */}
    13	          <Link to="/" className="flex items-center space-x-2">
    14	            <MapPin className="h-8 w-8 text-primary-600" />
    15	            <span className="text-xl font-bold text-gray-900">SA Markets</span>
    16	          </Link>
    17	
    18	          {/* Desktop Navigation */}
    19	          <nav className="hidden md:flex space-x-8">
    20	            <Link to="/markets" className="text-gray-700 hover:text-primary-600 transition-colors">
    21	              Browse Markets
    22	            </Link>
    23	            <Link to="/stallholders" className="text-gray-700 hover:text-primary-600 transition-colors">
    24	              For Stallholders
    25	            </Link>
    26	            <Link to="/organizers" className="text-gray-700 hover:text-primary-600 transition-colors">
    27	              For Organizers
    28	            </Link>
    29	            <Link to="/about" className="text-gray-700 hover:text-primary-600 transition-colors">
    30	              About
    31	            </Link>
    32	          </nav>
    33	
    34	          {/* Desktop Auth Buttons */}
    35	          <div className="hidden md:flex items-center space-x-4">
    36	            <Link to="/login" className="text-gray-700 hover:text-primary-600 transition-colors">
    37	              Log In
    38	            </Link>
    39	            <Link to="/register" className="btn-primary">
    40	              Sign Up
    41	            </Link>
    42	            <Link to="/dashboard" className="text-gray-700 hover:text-primary-600 transition-colors">
    43	              <User className="h-5 w-5" />
    44	            </Link>
    45	          </div>
    46	
    47	          {/* Mobile menu button */}
    48	          <button
    49	            onClick={() => setIsMenuOpen(!isMenuOpen)}
    50	            className="md:hidden p-2 rounded-md text-gray-700 hover:text-primary-600 hover:bg-gray-100"
    51	          >
    52	            {isMenuOpen ? <X className="h-6 w-6" /> : <Menu className="h-6 w-6" />}
    53	          </button>
    54	        </div>
    55	
    56	        {/* Mobile Navigation */}
    57	        {isMenuOpen && (
    58	          <div className="md:hidden py-4 border-t">
    59	            <nav className="flex flex-col space-y-2">
    60	              <Link to="/markets" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    61	                Browse Markets
    62	              </Link>
    63	              <Link to="/stallholders" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    64	                For Stallholders
    65	              </Link>
    66	              <Link to="/organizers" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    67	                For Organizers
    68	              </Link>
    69	              <Link to="/about" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    70	                About
    71	              </Link>
    72	              <hr className="my-2" />
    73	              <Link to="/login" className="px-3 py-2 text-gray-700 hover:text-primary-600 transition-colors">
    74	                Log In
    75	              </Link>
    76	              <Link to="/register" className="px-3 py-2 btn-primary text-center">
    77	                Sign Up
    78	              </Link>
    79	            </nav>
    80	          </div>
    81	        )}
    82	      </div>
    83	    </header>
    84	  )
    85	}

========================================

üìÅ FILE: src/components/layout/Layout.jsx
   Size: 287 | Modified: 2025-06-02
----------------------------------------
     1	import Header from './Header'
     2	import Footer from './Footer'
     3	
     4	export default function Layout({ children }) {
     5	  return (
     6	    <div className="min-h-screen flex flex-col">
     7	      <Header />
     8	      <main className="flex-grow">
     9	        {children}
    10	      </main>
    11	      <Footer />
    12	    </div>
    13	  )
    14	}

========================================

üìÅ FILE: src/contexts/AuthContext.jsx
   Size: 2.5K | Modified: 2025-06-02
----------------------------------------
     1	import React, { createContext, useContext, useState, useEffect } from 'react';
     2	import pb, { auth, handlePocketBaseError } from '../lib/pocketbase';
     3	
     4	const AuthContext = createContext({});
     5	
     6	export const useAuth = () => {
     7	  const context = useContext(AuthContext);
     8	  if (!context) {
     9	    throw new Error('useAuth must be used within an AuthProvider');
    10	  }
    11	  return context;
    12	};
    13	
    14	export const AuthProvider = ({ children }) => {
    15	  const [user, setUser] = useState(null);
    16	  const [loading, setLoading] = useState(true);
    17	  const [error, setError] = useState(null);
    18	
    19	  useEffect(() => {
    20	    if (pb.authStore.isValid) {
    21	      setUser(pb.authStore.model);
    22	    }
    23	    setLoading(false);
    24	
    25	    const unsubscribe = pb.authStore.onChange((token, model) => {
    26	      setUser(model);
    27	    });
    28	
    29	    return unsubscribe;
    30	  }, []);
    31	
    32	  const login = async (email, password) => {
    33	    try {
    34	      setLoading(true);
    35	      setError(null);
    36	      
    37	      const authData = await auth.login(email, password);
    38	      setUser(authData.record);
    39	      
    40	      return authData;
    41	    } catch (err) {
    42	      const errorData = handlePocketBaseError(err);
    43	      setError(errorData);
    44	      throw errorData;
    45	    } finally {
    46	      setLoading(false);
    47	    }
    48	  };
    49	
    50	  const register = async (userData) => {
    51	    try {
    52	      setLoading(true);
    53	      setError(null);
    54	      
    55	      const user = await auth.register({
    56	        ...userData,
    57	        emailVisibility: true,
    58	        passwordConfirm: userData.password
    59	      });
    60	
    61	      const authData = await auth.login(userData.email, userData.password);
    62	      setUser(authData.record);
    63	      
    64	      return authData;
    65	    } catch (err) {
    66	      const errorData = handlePocketBaseError(err);
    67	      setError(errorData);
    68	      throw errorData;
    69	    } finally {
    70	      setLoading(false);
    71	    }
    72	  };
    73	
    74	  const logout = () => {
    75	    auth.logout();
    76	    setUser(null);
    77	    setError(null);
    78	  };
    79	
    80	  const updateProfile = async (userData) => {
    81	    try {
    82	      setLoading(true);
    83	      setError(null);
    84	      
    85	      const updatedUser = await pb.collection('users').update(user.id, userData);
    86	      setUser(updatedUser);
    87	      
    88	      return updatedUser;
    89	    } catch (err) {
    90	      const errorData = handlePocketBaseError(err);
    91	      setError(errorData);
    92	      throw errorData;
    93	    } finally {
    94	      setLoading(false);
    95	    }
    96	  };
    97	
    98	  const value = {
    99	    user,
   100	    loading,
   101	    error,
   102	    login,
   103	    register,
   104	    logout,
   105	    updateProfile,
   106	    isAuthenticated: !!user
   107	  };
   108	
   109	  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;
   110	};

========================================

üìÅ FILE: src/hooks/useApplications.js
   Size: 1.9K | Modified: 2025-06-02
----------------------------------------
     1	// src/hooks/useApplications.js - Fixed import
     2	import { useState, useEffect } from 'react';
     3	import ApplicationService from '../services/ApplicationService.js';
     4	
     5	export const useApplications = (stallholderId, filters = {}) => {
     6	  const [applications, setApplications] = useState([]);
     7	  const [loading, setLoading] = useState(true);
     8	  const [error, setError] = useState(null);
     9	  const [pagination, setPagination] = useState(null);
    10	
    11	  useEffect(() => {
    12	    if (stallholderId) {
    13	      fetchApplications();
    14	    }
    15	  }, [stallholderId, filters]);
    16	
    17	  const fetchApplications = async () => {
    18	    try {
    19	      setLoading(true);
    20	      const result = await ApplicationService.getStallholderApplications(stallholderId, filters);
    21	      setApplications(result.items);
    22	      setPagination({
    23	        page: result.page,
    24	        perPage: result.perPage,
    25	        totalItems: result.totalItems,
    26	        totalPages: result.totalPages
    27	      });
    28	    } catch (err) {
    29	      setError(err.message);
    30	    } finally {
    31	      setLoading(false);
    32	    }
    33	  };
    34	
    35	  const submitApplication = async (applicationData) => {
    36	    try {
    37	      const newApplication = await ApplicationService.submitApplication(applicationData);
    38	      setApplications(prev => [newApplication, ...prev]);
    39	      return newApplication;
    40	    } catch (err) {
    41	      setError(err.message);
    42	      throw err;
    43	    }
    44	  };
    45	
    46	  const cancelApplication = async (applicationId) => {
    47	    try {
    48	      await ApplicationService.cancelApplication(applicationId);
    49	      setApplications(prev => 
    50	        prev.map(app => 
    51	          app.id === applicationId 
    52	            ? { ...app, status: 'cancelled' }
    53	            : app
    54	        )
    55	      );
    56	    } catch (err) {
    57	      setError(err.message);
    58	      throw err;
    59	    }
    60	  };
    61	
    62	  return {
    63	    applications,
    64	    loading,
    65	    error,
    66	    pagination,
    67	    submitApplication,
    68	    cancelApplication,
    69	    refetch: fetchApplications
    70	  };
    71	};

========================================

üìÅ FILE: src/hooks/useStallholder.js
   Size: 1.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/hooks/useStallholder.js - Fixed import path
     2	import { useState, useEffect } from 'react';
     3	import StallholderService from '../services/StallholderService.js';
     4	import { useAuth } from '../contexts/AuthContext';
     5	
     6	export const useStallholder = () => {
     7	  const [stallholder, setStallholder] = useState(null);
     8	  const [loading, setLoading] = useState(true);
     9	  const [error, setError] = useState(null);
    10	  const { user } = useAuth();
    11	
    12	  useEffect(() => {
    13	    if (user && user.role === 'stallholder') {
    14	      fetchStallholder();
    15	    } else {
    16	      setLoading(false);
    17	    }
    18	  }, [user]);
    19	
    20	  const fetchStallholder = async () => {
    21	    try {
    22	      setLoading(true);
    23	      // Get stallholder profile for current user
    24	      const result = await StallholderService.getStallholders({
    25	        user: user.id
    26	      });
    27	      
    28	      if (result.items.length > 0) {
    29	        setStallholder(result.items[0]);
    30	      }
    31	    } catch (err) {
    32	      setError(err.message);
    33	    } finally {
    34	      setLoading(false);
    35	    }
    36	  };
    37	
    38	  return {
    39	    stallholder,
    40	    loading,
    41	    error,
    42	    updateStallholder,
    43	    createStallholder,
    44	    refetch: fetchStallholder
    45	  };
    46	};

========================================

üìÅ FILE: src/index.css
   Size: 813 | Modified: 2025-06-02
----------------------------------------
     1	@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
     2	
     3	@tailwind base;
     4	@tailwind components;
     5	@tailwind utilities;
     6	
     7	@layer base {
     8	  html {
     9	    font-family: 'Inter', system-ui, sans-serif;
    10	  }
    11	}
    12	
    13	@layer components {
    14	  .btn-primary {
    15	    @apply bg-primary-600 hover:bg-primary-700 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
    16	  }
    17	  
    18	  .btn-secondary {
    19	    @apply bg-secondary-500 hover:bg-secondary-600 text-white font-medium py-2 px-4 rounded-lg transition-colors duration-200;
    20	  }
    21	  
    22	  .card {
    23	    @apply bg-white rounded-lg shadow-md border border-gray-200 p-6;
    24	  }
    25	  
    26	  .input-field {
    27	    @apply w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-transparent;
    28	  }
    29	}

========================================

üìÅ FILE: src/lib/constants.js
   Size: 1.5K | Modified: 2025-06-02
----------------------------------------
     1	export const USER_ROLES = {
     2	  CUSTOMER: 'customer',
     3	  ORGANIZER: 'organizer', 
     4	  STALLHOLDER: 'stallholder'
     5	};
     6	
     7	export const MARKET_FREQUENCIES = {
     8	  DAILY: 'Daily',
     9	  WEEKLY: 'Weekly',
    10	  FIRST_SATURDAY: '1st Saturday',
    11	  FIRST_SUNDAY: '1st Sunday',
    12	  SECOND_SATURDAY: '2nd Saturday',
    13	  SECOND_SUNDAY: '2nd Sunday',
    14	  THIRD_SATURDAY: '3rd Saturday',
    15	  THIRD_SUNDAY: '3rd Sunday',
    16	  FOURTH_SATURDAY: '4th Saturday',
    17	  FOURTH_SUNDAY: '4th Sunday',
    18	  SPECIFIC_DATES: 'Specific Dates',
    19	  SEASONAL: 'Seasonal',
    20	  MONTHLY: 'Monthly'
    21	};
    22	
    23	export const MARKET_CATEGORIES = {
    24	  FARMERS: 'Farmers Market',
    25	  CRAFT: 'Craft & Artisan',
    26	  COMMUNITY: 'Community Market',
    27	  SPECIALTY: 'Specialty Market',
    28	  FOOD: 'Food Market',
    29	  VINTAGE: 'Vintage & Antiques',
    30	  GENERAL: 'General Market'
    31	};
    32	
    33	export const AUSTRALIAN_STATES = {
    34	  SA: 'South Australia',
    35	  VIC: 'Victoria',
    36	  NSW: 'New South Wales',
    37	  QLD: 'Queensland',
    38	  WA: 'Western Australia',
    39	  TAS: 'Tasmania',
    40	  NT: 'Northern Territory',
    41	  ACT: 'Australian Capital Territory'
    42	};
    43	
    44	export const SUBSCRIPTION_TIERS = {
    45	  FREE: 'free',
    46	  BASIC: 'basic',
    47	  PREMIUM: 'premium',
    48	  ENTERPRISE: 'enterprise'
    49	};
    50	
    51	export const APPLICATION_STATUS = {
    52	  PENDING: 'pending',
    53	  APPROVED: 'approved',
    54	  REJECTED: 'rejected',
    55	  WAITLISTED: 'waitlisted'
    56	};
    57	
    58	export const SEARCH_RADIUS_OPTIONS = [
    59	  { value: 5, label: '5 km' },
    60	  { value: 10, label: '10 km' },
    61	  { value: 25, label: '25 km' },
    62	  { value: 50, label: '50 km' },
    63	  { value: 100, label: '100 km' }
    64	];

========================================

üìÅ FILE: src/lib/pocketbase.js
   Size: 1.4K | Modified: 2025-06-02
----------------------------------------
     1	import PocketBase from 'pocketbase';
     2	
     3	const pb = new PocketBase(import.meta.env.VITE_POCKETBASE_URL || 'http://localhost:8090');
     4	
     5	// Configure authentication
     6	pb.autoCancellation(false);
     7	
     8	// Export the instance
     9	export default pb;
    10	
    11	// Helper functions for common operations
    12	export const auth = {
    13	  // Login user
    14	  async login(email, password) {
    15	    return await pb.collection('users').authWithPassword(email, password);
    16	  },
    17	
    18	  // Register user
    19	  async register(data) {
    20	    return await pb.collection('users').create(data);
    21	  },
    22	
    23	  // Logout
    24	  logout() {
    25	    pb.authStore.clear();
    26	  },
    27	
    28	  // Get current user
    29	  getCurrentUser() {
    30	    return pb.authStore.model;
    31	  },
    32	
    33	  // Check if user is authenticated
    34	  isAuthenticated() {
    35	    return pb.authStore.isValid;
    36	  },
    37	
    38	  // Subscribe to auth changes
    39	  onChange(callback) {
    40	    return pb.authStore.onChange(callback);
    41	  }
    42	};
    43	
    44	// Helper for handling API errors
    45	export const handlePocketBaseError = (error) => {
    46	  console.error('PocketBase Error:', error);
    47	  
    48	  if (error?.response?.data) {
    49	    // Extract field-specific errors
    50	    const fieldErrors = {};
    51	    Object.entries(error.response.data).forEach(([field, fieldError]) => {
    52	      fieldErrors[field] = fieldError.message || fieldError;
    53	    });
    54	    return fieldErrors;
    55	  }
    56	  
    57	  return { general: error.message || 'An unexpected error occurred' };
    58	};

========================================

üìÅ FILE: src/main.jsx
   Size: 229 | Modified: 2025-06-02
----------------------------------------
     1	import { StrictMode } from 'react'
     2	import { createRoot } from 'react-dom/client'
     3	import './index.css'
     4	import App from './App.jsx'
     5	
     6	createRoot(document.getElementById('root')).render(
     7	  <StrictMode>
     8	    <App />
     9	  </StrictMode>,
    10	)

========================================

üìÅ FILE: src/pages/Dashboard.jsx
   Size: 16K | Modified: 2025-06-02
----------------------------------------
     1	// src/pages/Dashboard.jsx - Enhanced with role-based content
     2	import { useState, useEffect } from 'react'
     3	import { Link } from 'react-router-dom'
     4	import { User, MapPin, ShoppingBag, BarChart3, Plus, Calendar, Users } from 'lucide-react'
     5	import { useAuth } from '../contexts/AuthContext'
     6	
     7	export default function Dashboard() {
     8	  const [activeTab, setActiveTab] = useState('overview')
     9	  const { user } = useAuth()
    10	
    11	  if (!user) {
    12	    return (
    13	      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
    14	        <div className="text-center">
    15	          <p className="text-gray-600">Please log in to access your dashboard.</p>
    16	          <Link to="/login" className="btn-primary mt-4">
    17	            Log In
    18	          </Link>
    19	        </div>
    20	      </div>
    21	    )
    22	  }
    23	
    24	  const renderRoleSpecificContent = () => {
    25	    switch (user.role) {
    26	      case 'stallholder':
    27	        return <StallholderDashboard />
    28	      case 'organizer':
    29	        return <OrganizerDashboard />
    30	      default:
    31	        return <CustomerDashboard />
    32	    }
    33	  }
    34	
    35	  return (
    36	    <div className="min-h-screen bg-gray-50 py-8">
    37	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    38	        {/* Header */}
    39	        <div className="mb-8">
    40	          <h1 className="text-3xl font-bold text-gray-900 mb-2">
    41	            Welcome back, {user.name}!
    42	          </h1>
    43	          <p className="text-gray-600">
    44	            {user.role === 'stallholder' && 'Manage your stallholder profile and applications'}
    45	            {user.role === 'organizer' && 'Manage your markets and stallholder applications'}
    46	            {user.role === 'customer' && 'Discover and save your favorite markets'}
    47	          </p>
    48	        </div>
    49	
    50	        {renderRoleSpecificContent()}
    51	      </div>
    52	    </div>
    53	  )
    54	}
    55	
    56	// Customer Dashboard Component
    57	const CustomerDashboard = () => {
    58	  return (
    59	    <div>
    60	      {/* Quick Stats */}
    61	      <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    62	        <div className="card">
    63	          <div className="flex items-center">
    64	            <div className="bg-primary-100 rounded-lg p-3">
    65	              <MapPin className="h-6 w-6 text-primary-600" />
    66	            </div>
    67	            <div className="ml-4">
    68	              <p className="text-2xl font-bold text-gray-900">12</p>
    69	              <p className="text-gray-600">Favorite Markets</p>
    70	            </div>
    71	          </div>
    72	        </div>
    73	        <div className="card">
    74	          <div className="flex items-center">
    75	            <div className="bg-secondary-100 rounded-lg p-3">
    76	              <Calendar className="h-6 w-6 text-secondary-600" />
    77	            </div>
    78	            <div className="ml-4">
    79	              <p className="text-2xl font-bold text-gray-900">3</p>
    80	              <p className="text-gray-600">This Weekend</p>
    81	            </div>
    82	          </div>
    83	        </div>
    84	        <div className="card">
    85	          <div className="flex items-center">
    86	            <div className="bg-green-100 rounded-lg p-3">
    87	              <User className="h-6 w-6 text-green-600" />
    88	            </div>
    89	            <div className="ml-4">
    90	              <p className="text-2xl font-bold text-gray-900">Free</p>
    91	              <p className="text-gray-600">Current Plan</p>
    92	            </div>
    93	          </div>
    94	        </div>
    95	      </div>
    96	
    97	      {/* Recent Activity */}
    98	      <div className="bg-white rounded-lg shadow p-6 mb-8">
    99	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Upcoming Markets</h2>
   100	        <div className="space-y-4">
   101	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   102	            <div>
   103	              <h3 className="font-medium text-gray-900">Adelaide Central Market</h3>
   104	              <p className="text-sm text-gray-600">Saturday, June 7 ‚Ä¢ 7:00 AM - 2:00 PM</p>
   105	            </div>
   106	            <Link to="/markets/adelaide-central" className="btn-primary">
   107	              View Details
   108	            </Link>
   109	          </div>
   110	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   111	            <div>
   112	              <h3 className="font-medium text-gray-900">Barossa Farmers Market</h3>
   113	              <p className="text-sm text-gray-600">Saturday, June 7 ‚Ä¢ 7:30 AM - 11:30 AM</p>
   114	            </div>
   115	            <Link to="/markets/barossa-farmers" className="btn-primary">
   116	              View Details
   117	            </Link>
   118	          </div>
   119	        </div>
   120	      </div>
   121	
   122	      {/* Quick Actions */}
   123	      <div className="bg-white rounded-lg shadow p-6">
   124	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   125	        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
   126	          <Link to="/markets" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   127	            <MapPin className="h-8 w-8 text-primary-600 mr-4" />
   128	            <div>
   129	              <h3 className="font-medium text-gray-900">Browse Markets</h3>
   130	              <p className="text-sm text-gray-600">Find new markets in your area</p>
   131	            </div>
   132	          </Link>
   133	          <Link to="/register?role=stallholder" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   134	            <ShoppingBag className="h-8 w-8 text-secondary-600 mr-4" />
   135	            <div>
   136	              <h3 className="font-medium text-gray-900">Become a Stallholder</h3>
   137	              <p className="text-sm text-gray-600">Start selling at local markets</p>
   138	            </div>
   139	          </Link>
   140	        </div>
   141	      </div>
   142	    </div>
   143	  )
   144	}
   145	
   146	// Stallholder Dashboard Component
   147	const StallholderDashboard = () => {
   148	  return (
   149	    <div>
   150	      {/* Quick Stats */}
   151	      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
   152	        <div className="card">
   153	          <div className="flex items-center">
   154	            <div className="bg-primary-100 rounded-lg p-3">
   155	              <ShoppingBag className="h-6 w-6 text-primary-600" />
   156	            </div>
   157	            <div className="ml-4">
   158	              <p className="text-2xl font-bold text-gray-900">5</p>
   159	              <p className="text-gray-600">Active Applications</p>
   160	            </div>
   161	          </div>
   162	        </div>
   163	        <div className="card">
   164	          <div className="flex items-center">
   165	            <div className="bg-green-100 rounded-lg p-3">
   166	              <BarChart3 className="h-6 w-6 text-green-600" />
   167	            </div>
   168	            <div className="ml-4">
   169	              <p className="text-2xl font-bold text-gray-900">3</p>
   170	              <p className="text-gray-600">Approved</p>
   171	            </div>
   172	          </div>
   173	        </div>
   174	        <div className="card">
   175	          <div className="flex items-center">
   176	            <div className="bg-yellow-100 rounded-lg p-3">
   177	              <Calendar className="h-6 w-6 text-yellow-600" />
   178	            </div>
   179	            <div className="ml-4">
   180	              <p className="text-2xl font-bold text-gray-900">2</p>
   181	              <p className="text-gray-600">This Weekend</p>
   182	            </div>
   183	          </div>
   184	        </div>
   185	        <div className="card">
   186	          <div className="flex items-center">
   187	            <div className="bg-purple-100 rounded-lg p-3">
   188	              <User className="h-6 w-6 text-purple-600" />
   189	            </div>
   190	            <div className="ml-4">
   191	              <p className="text-2xl font-bold text-gray-900">4.8</p>
   192	              <p className="text-gray-600">Rating</p>
   193	            </div>
   194	          </div>
   195	        </div>
   196	      </div>
   197	
   198	      {/* Recent Applications */}
   199	      <div className="bg-white rounded-lg shadow p-6 mb-8">
   200	        <div className="flex items-center justify-between mb-4">
   201	          <h2 className="text-xl font-semibold text-gray-900">Recent Applications</h2>
   202	          <Link to="/apply" className="btn-primary">
   203	            <Plus className="h-4 w-4 mr-2" />
   204	            New Application
   205	          </Link>
   206	        </div>
   207	        <div className="space-y-4">
   208	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   209	            <div>
   210	              <h3 className="font-medium text-gray-900">Adelaide Central Market</h3>
   211	              <p className="text-sm text-gray-600">Applied 2 days ago</p>
   212	            </div>
   213	            <span className="px-3 py-1 text-sm bg-yellow-100 text-yellow-800 rounded-full">
   214	              Pending
   215	            </span>
   216	          </div>
   217	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   218	            <div>
   219	              <h3 className="font-medium text-gray-900">Barossa Farmers Market</h3>
   220	              <p className="text-sm text-gray-600">Applied 1 week ago</p>
   221	            </div>
   222	            <span className="px-3 py-1 text-sm bg-green-100 text-green-800 rounded-full">
   223	              Approved
   224	            </span>
   225	          </div>
   226	        </div>
   227	      </div>
   228	
   229	      {/* Quick Actions */}
   230	      <div className="bg-white rounded-lg shadow p-6">
   231	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   232	        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
   233	          <Link to="/profile" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   234	            <User className="h-8 w-8 text-primary-600 mr-4" />
   235	            <div>
   236	              <h3 className="font-medium text-gray-900">Update Profile</h3>
   237	              <p className="text-sm text-gray-600">Edit your business details</p>
   238	            </div>
   239	          </Link>
   240	          <Link to="/markets" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   241	            <MapPin className="h-8 w-8 text-secondary-600 mr-4" />
   242	            <div>
   243	              <h3 className="font-medium text-gray-900">Find Markets</h3>
   244	              <p className="text-sm text-gray-600">Discover new opportunities</p>
   245	            </div>
   246	          </Link>
   247	          <Link to="/analytics" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   248	            <BarChart3 className="h-8 w-8 text-green-600 mr-4" />
   249	            <div>
   250	              <h3 className="font-medium text-gray-900">View Analytics</h3>
   251	              <p className="text-sm text-gray-600">Track your performance</p>
   252	            </div>
   253	          </Link>
   254	        </div>
   255	      </div>
   256	    </div>
   257	  )
   258	}
   259	
   260	// Organizer Dashboard Component
   261	const OrganizerDashboard = () => {
   262	  return (
   263	    <div>
   264	      {/* Quick Stats */}
   265	      <div className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
   266	        <div className="card">
   267	          <div className="flex items-center">
   268	            <div className="bg-primary-100 rounded-lg p-3">
   269	              <MapPin className="h-6 w-6 text-primary-600" />
   270	            </div>
   271	            <div className="ml-4">
   272	              <p className="text-2xl font-bold text-gray-900">3</p>
   273	              <p className="text-gray-600">Active Markets</p>
   274	            </div>
   275	          </div>
   276	        </div>
   277	        <div className="card">
   278	          <div className="flex items-center">
   279	            <div className="bg-secondary-100 rounded-lg p-3">
   280	              <Users className="h-6 w-6 text-secondary-600" />
   281	            </div>
   282	            <div className="ml-4">
   283	              <p className="text-2xl font-bold text-gray-900">47</p>
   284	              <p className="text-gray-600">Total Stallholders</p>
   285	            </div>
   286	          </div>
   287	        </div>
   288	        <div className="card">
   289	          <div className="flex items-center">
   290	            <div className="bg-yellow-100 rounded-lg p-3">
   291	              <ShoppingBag className="h-6 w-6 text-yellow-600" />
   292	            </div>
   293	            <div className="ml-4">
   294	              <p className="text-2xl font-bold text-gray-900">12</p>
   295	              <p className="text-gray-600">Pending Applications</p>
   296	            </div>
   297	          </div>
   298	        </div>
   299	        <div className="card">
   300	          <div className="flex items-center">
   301	            <div className="bg-green-100 rounded-lg p-3">
   302	              <BarChart3 className="h-6 w-6 text-green-600" />
   303	            </div>
   304	            <div className="ml-4">
   305	              <p className="text-2xl font-bold text-gray-900">$2,450</p>
   306	              <p className="text-gray-600">Monthly Revenue</p>
   307	            </div>
   308	          </div>
   309	        </div>
   310	      </div>
   311	
   312	      {/* Pending Applications */}
   313	      <div className="bg-white rounded-lg shadow p-6 mb-8">
   314	        <div className="flex items-center justify-between mb-4">
   315	          <h2 className="text-xl font-semibold text-gray-900">Pending Applications</h2>
   316	          <Link to="/applications" className="text-primary-600 hover:text-primary-500">
   317	            View all
   318	          </Link>
   319	        </div>
   320	        <div className="space-y-4">
   321	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   322	            <div className="flex items-center">
   323	              <div className="w-10 h-10 bg-gray-200 rounded-full mr-4"></div>
   324	              <div>
   325	                <h3 className="font-medium text-gray-900">Sarah's Organic Produce</h3>
   326	                <p className="text-sm text-gray-600">Applied for Adelaide Central Market</p>
   327	              </div>
   328	            </div>
   329	            <div className="flex space-x-2">
   330	              <button className="px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700">
   331	                Approve
   332	              </button>
   333	              <button className="px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700">
   334	                Reject
   335	              </button>
   336	            </div>
   337	          </div>
   338	          <div className="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
   339	            <div className="flex items-center">
   340	              <div className="w-10 h-10 bg-gray-200 rounded-full mr-4"></div>
   341	              <div>
   342	                <h3 className="font-medium text-gray-900">Handmade Crafts Co</h3>
   343	                <p className="text-sm text-gray-600">Applied for Barossa Farmers Market</p>
   344	              </div>
   345	            </div>
   346	            <div className="flex space-x-2">
   347	              <button className="px-3 py-1 text-sm bg-green-600 text-white rounded hover:bg-green-700">
   348	                Approve
   349	              </button>
   350	              <button className="px-3 py-1 text-sm bg-red-600 text-white rounded hover:bg-red-700">
   351	                Reject
   352	              </button>
   353	            </div>
   354	          </div>
   355	        </div>
   356	      </div>
   357	
   358	      {/* Quick Actions */}
   359	      <div className="bg-white rounded-lg shadow p-6">
   360	        <h2 className="text-xl font-semibold text-gray-900 mb-4">Quick Actions</h2>
   361	        <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
   362	          <Link to="/markets/create" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   363	            <Plus className="h-8 w-8 text-primary-600 mr-4" />
   364	            <div>
   365	              <h3 className="font-medium text-gray-900">Create Market</h3>
   366	              <p className="text-sm text-gray-600">Add a new market listing</p>
   367	            </div>
   368	          </Link>
   369	          <Link to="/applications" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   370	            <Users className="h-8 w-8 text-secondary-600 mr-4" />
   371	            <div>
   372	              <h3 className="font-medium text-gray-900">Manage Applications</h3>
   373	              <p className="text-sm text-gray-600">Review stallholder requests</p>
   374	            </div>
   375	          </Link>
   376	          <Link to="/analytics" className="flex items-center p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
   377	            <BarChart3 className="h-8 w-8 text-green-600 mr-4" />
   378	            <div>
   379	              <h3 className="font-medium text-gray-900">View Analytics</h3>
   380	              <p className="text-sm text-gray-600">Market performance data</p>
   381	            </div>
   382	          </Link>
   383	        </div>
   384	      </div>
   385	    </div>
   386	  )
   387	}

========================================

üìÅ FILE: src/pages/Home.jsx
   Size: 4.4K | Modified: 2025-06-02
----------------------------------------
     1	import { Link } from 'react-router-dom'
     2	import { Search, MapPin, Users, ShoppingBag, ArrowRight } from 'lucide-react'
     3	
     4	export default function Home() {
     5	  return (
     6	    <div>
     7	      {/* Hero Section */}
     8	      <section className="bg-gradient-to-br from-primary-600 to-primary-800 text-white">
     9	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
    10	          <div className="text-center">
    11	            <h1 className="text-4xl md:text-6xl font-bold mb-6">
    12	              Discover Local Markets
    13	              <span className="block text-secondary-400">Across South Australia</span>
    14	            </h1>
    15	            <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto text-primary-100">
    16	              Connect with vibrant local markets, fresh produce, unique crafts, and community experiences right in your neighborhood.
    17	            </p>
    18	            <div className="flex flex-col sm:flex-row gap-4 justify-center">
    19	              <Link to="/markets" className="btn-secondary text-lg px-8 py-3">
    20	                <Search className="h-5 w-5 mr-2" />
    21	                Browse Markets
    22	              </Link>
    23	              <Link to="/register" className="bg-white text-primary-600 hover:bg-gray-100 font-medium py-3 px-8 rounded-lg transition-colors text-lg">
    24	                Join as Stallholder
    25	              </Link>
    26	            </div>
    27	          </div>
    28	        </div>
    29	      </section>
    30	
    31	      {/* Features Section */}
    32	      <section className="py-20 bg-white">
    33	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    34	          <div className="text-center mb-16">
    35	            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
    36	              Why Choose SA Markets?
    37	            </h2>
    38	            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
    39	              We're building stronger communities by connecting local markets, stallholders, and customers across South Australia.
    40	            </p>
    41	          </div>
    42	
    43	          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
    44	            <div className="text-center">
    45	              <div className="bg-primary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    46	                <MapPin className="h-8 w-8 text-primary-600" />
    47	              </div>
    48	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Find Markets Nearby</h3>
    49	              <p className="text-gray-600">
    50	                Discover farmers markets, craft fairs, and community markets in your local area with our interactive map and search tools.
    51	              </p>
    52	            </div>
    53	
    54	            <div className="text-center">
    55	              <div className="bg-secondary-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    56	                <Users className="h-8 w-8 text-secondary-600" />
    57	              </div>
    58	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Connect Communities</h3>
    59	              <p className="text-gray-600">
    60	                Join a vibrant network of local producers, artisans, and market-goers who share a passion for community and quality.
    61	              </p>
    62	            </div>
    63	
    64	            <div className="text-center">
    65	              <div className="bg-green-100 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4">
    66	                <ShoppingBag className="h-8 w-8 text-green-600" />
    67	              </div>
    68	              <h3 className="text-xl font-semibold text-gray-900 mb-2">Support Local Business</h3>
    69	              <p className="text-gray-600">
    70	                Shop directly from local farmers, makers, and small businesses while supporting your community's economic growth.
    71	              </p>
    72	            </div>
    73	          </div>
    74	        </div>
    75	      </section>
    76	
    77	      {/* CTA Section */}
    78	      <section className="py-16 bg-gray-50">
    79	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
    80	          <h2 className="text-3xl font-bold text-gray-900 mb-4">
    81	            Ready to explore local markets?
    82	          </h2>
    83	          <p className="text-xl text-gray-600 mb-8">
    84	            Join thousands of South Australians discovering amazing local products and experiences.
    85	          </p>
    86	          <Link to="/markets" className="btn-primary text-lg px-8 py-3 inline-flex items-center">
    87	            Start Exploring
    88	            <ArrowRight className="h-5 w-5 ml-2" />
    89	          </Link>
    90	        </div>
    91	      </section>
    92	    </div>
    93	  )
    94	}

========================================

üìÅ FILE: src/pages/Login.jsx
   Size: 3.9K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Eye, EyeOff } from 'lucide-react'
     4	
     5	export default function Login() {
     6	  const [showPassword, setShowPassword] = useState(false)
     7	  const [formData, setFormData] = useState({
     8	    email: '',
     9	    password: ''
    10	  })
    11	
    12	  const handleSubmit = (e) => {
    13	    e.preventDefault()
    14	    // TODO: Implement login with PocketBase
    15	    console.log('Login:', formData)
    16	  }
    17	
    18	  return (
    19	    <div className="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    20	      <div className="max-w-md w-full space-y-8">
    21	        <div>
    22	          <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
    23	            Welcome back
    24	          </h2>
    25	          <p className="mt-2 text-center text-sm text-gray-600">
    26	            Sign in to your account
    27	          </p>
    28	        </div>
    29	        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
    30	          <div className="space-y-4">
    31	            <div>
    32	              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
    33	                Email address
    34	              </label>
    35	              <input
    36	                id="email"
    37	                name="email"
    38	                type="email"
    39	                required
    40	                className="input-field mt-1"
    41	                placeholder="Enter your email"
    42	                value={formData.email}
    43	                onChange={(e) => setFormData({...formData, email: e.target.value})}
    44	              />
    45	            </div>
    46	            <div>
    47	              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
    48	                Password
    49	              </label>
    50	              <div className="mt-1 relative">
    51	                <input
    52	                  id="password"
    53	                  name="password"
    54	                  type={showPassword ? 'text' : 'password'}
    55	                  required
    56	                  className="input-field pr-10"
    57	                  placeholder="Enter your password"
    58	                  value={formData.password}
    59	                  onChange={(e) => setFormData({...formData, password: e.target.value})}
    60	                />
    61	                <button
    62	                  type="button"
    63	                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
    64	                  onClick={() => setShowPassword(!showPassword)}
    65	                >
    66	                  {showPassword ? (
    67	                    <EyeOff className="h-5 w-5 text-gray-400" />
    68	                  ) : (
    69	                    <Eye className="h-5 w-5 text-gray-400" />
    70	                  )}
    71	                </button>
    72	              </div>
    73	            </div>
    74	          </div>
    75	
    76	          <div className="flex items-center justify-between">
    77	            <div className="flex items-center">
    78	              <input
    79	                id="remember-me"
    80	                name="remember-me"
    81	                type="checkbox"
    82	                className="h-4 w-4 text-primary-600 focus:ring-primary-500 border-gray-300 rounded"
    83	              />
    84	              <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-900">
    85	                Remember me
    86	              </label>
    87	            </div>
    88	
    89	            <div className="text-sm">
    90	              <Link to="/forgot-password" className="text-primary-600 hover:text-primary-500">
    91	                Forgot your password?
    92	              </Link>
    93	            </div>
    94	          </div>
    95	
    96	          <div>
    97	            <button type="submit" className="btn-primary w-full">
    98	              Sign in
    99	            </button>
   100	          </div>
   101	
   102	          <div className="text-center">
   103	            <span className="text-sm text-gray-600">
   104	              Don't have an account?{' '}
   105	              <Link to="/register" className="text-primary-600 hover:text-primary-500 font-medium">
   106	                Sign up here
   107	              </Link>
   108	            </span>
   109	          </div>
   110	        </form>
   111	      </div>
   112	    </div>
   113	  )
   114	}

========================================

üìÅ FILE: src/pages/MarketDetail.jsx
   Size: 5.1K | Modified: 2025-06-02
----------------------------------------
     1	import { useState, useEffect } from 'react'
     2	import { useParams, Link } from 'react-router-dom'
     3	import { MapPin, Clock, Calendar, ArrowLeft } from 'lucide-react'
     4	import marketService from '../services/marketService'
     5	
     6	export default function MarketDetail() {
     7	  const { slug } = useParams()
     8	  const [market, setMarket] = useState(null)
     9	  const [loading, setLoading] = useState(true)
    10	  const [error, setError] = useState(null)
    11	
    12	  useEffect(() => {
    13	    fetchMarket()
    14	  }, [slug])
    15	
    16	  const fetchMarket = async () => {
    17	    try {
    18	      setLoading(true)
    19	      setError(null)
    20	      const marketData = await marketService.getMarket(slug)
    21	      setMarket(marketData)
    22	    } catch (error) {
    23	      console.error('Error fetching market:', error)
    24	      setError('Market not found or failed to load.')
    25	    } finally {
    26	      setLoading(false)
    27	    }
    28	  }
    29	
    30	  if (loading) {
    31	    return (
    32	      <div className="min-h-screen bg-gray-50 py-8">
    33	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    34	          <div className="text-center py-12">
    35	            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
    36	            <p className="mt-4 text-gray-600">Loading market details...</p>
    37	          </div>
    38	        </div>
    39	      </div>
    40	    )
    41	  }
    42	
    43	  if (error || !market) {
    44	    return (
    45	      <div className="min-h-screen bg-gray-50 py-8">
    46	        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    47	          <div className="text-center py-12">
    48	            <p className="text-red-600 mb-4">{error}</p>
    49	            <Link to="/markets" className="btn-primary">
    50	              Back to Markets
    51	            </Link>
    52	          </div>
    53	        </div>
    54	      </div>
    55	    )
    56	  }
    57	
    58	  return (
    59	    <div className="min-h-screen bg-gray-50 py-8">
    60	      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
    61	        <Link to="/markets" className="inline-flex items-center text-primary-600 hover:text-primary-500 mb-6">
    62	          <ArrowLeft className="h-5 w-5 mr-2" />
    63	          Back to Markets
    64	        </Link>
    65	
    66	        <div className="bg-white rounded-lg shadow p-8 mb-8">
    67	          {market.expand?.category && (
    68	            <div className="mb-4">
    69	              <span 
    70	                className="inline-block text-white text-sm px-3 py-1 rounded-full"
    71	                style={{ backgroundColor: market.expand.category.color || '#6b7280' }}
    72	              >
    73	                {market.expand.category.name}
    74	              </span>
    75	            </div>
    76	          )}
    77	
    78	          <h1 className="text-4xl font-bold text-gray-900 mb-4">{market.name}</h1>
    79	          
    80	          <div className="flex items-center text-gray-600 mb-6">
    81	            <MapPin className="h-5 w-5 mr-2" />
    82	            <span>{market.address || `${market.suburb}, ${market.state}`}</span>
    83	          </div>
    84	          
    85	          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
    86	            {market.frequency && (
    87	              <div className="flex items-center">
    88	                <Calendar className="h-5 w-5 text-primary-600 mr-3" />
    89	                <div>
    90	                  <p className="font-medium text-gray-900">Schedule</p>
    91	                  <p className="text-gray-600">{market.frequency}</p>
    92	                </div>
    93	              </div>
    94	            )}
    95	
    96	            {market.operating_hours && (
    97	              <div className="flex items-center">
    98	                <Clock className="h-5 w-5 text-primary-600 mr-3" />
    99	                <div>
   100	                  <p className="font-medium text-gray-900">Hours</p>
   101	                  <p className="text-gray-600">{market.operating_hours}</p>
   102	                </div>
   103	              </div>
   104	            )}
   105	
   106	            {market.website && (
   107	              <div className="flex items-center">
   108	                <div>
   109	                  <p className="font-medium text-gray-900">Website</p>
   110	                  <a 
   111	                    href={market.website} 
   112	                    target="_blank" 
   113	                    rel="noopener noreferrer"
   114	                    className="text-primary-600 hover:underline"
   115	                  >
   116	                    Visit Site
   117	                  </a>
   118	                </div>
   119	              </div>
   120	            )}
   121	          </div>
   122	        </div>
   123	
   124	        {market.description && (
   125	          <div className="bg-white rounded-lg shadow p-8 mb-8">
   126	            <h2 className="text-2xl font-bold text-gray-900 mb-4">About This Market</h2>
   127	            <div className="text-gray-600 leading-relaxed">
   128	              {market.description}
   129	            </div>
   130	          </div>
   131	        )}
   132	
   133	        <div className="bg-white rounded-lg shadow p-8">
   134	          <h2 className="text-2xl font-bold text-gray-900 mb-4">Interested in Selling Here?</h2>
   135	          <p className="text-gray-600 mb-6">
   136	            Connect with the market organizers to learn about stallholder opportunities, 
   137	            application requirements, and available spaces.
   138	          </p>
   139	          <div className="flex flex-col sm:flex-row gap-4">
   140	            <Link to="/register" className="btn-primary">
   141	              Apply as Stallholder
   142	            </Link>
   143	            <button className="btn-secondary">
   144	              Contact Organizer
   145	            </button>
   146	          </div>
   147	        </div>
   148	      </div>
   149	    </div>
   150	  )
   151	}

========================================

üìÅ FILE: src/pages/MarketList.jsx
   Size: 7.3K | Modified: 2025-06-02
----------------------------------------
     1	import { useState, useEffect } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Search, Filter, MapPin, Clock, Calendar } from 'lucide-react'
     4	import marketService from '../services/marketService'
     5	
     6	export default function MarketList() {
     7	  const [markets, setMarkets] = useState([])
     8	  const [categories, setCategories] = useState([])
     9	  const [loading, setLoading] = useState(true)
    10	  const [error, setError] = useState(null)
    11	  const [filters, setFilters] = useState({
    12	    search: '',
    13	    category: '',
    14	    state: 'SA'
    15	  })
    16	
    17	  useEffect(() => {
    18	    fetchData()
    19	  }, [filters])
    20	
    21	  const fetchData = async () => {
    22	    try {
    23	      setLoading(true)
    24	      setError(null)
    25	
    26	      // Fetch categories
    27	      const categoriesData = await marketService.getCategories()
    28	      setCategories(categoriesData)
    29	
    30	      // Fetch markets with filters
    31	      const marketsData = await marketService.getMarkets({
    32	        search: filters.search,
    33	        category: filters.category,
    34	        state: filters.state,
    35	        perPage: 50
    36	      })
    37	      
    38	      setMarkets(marketsData.items || [])
    39	    } catch (error) {
    40	      console.error('Error fetching data:', error)
    41	      setError('Failed to load markets. Please try again.')
    42	    } finally {
    43	      setLoading(false)
    44	    }
    45	  }
    46	
    47	  const handleSearchChange = (e) => {
    48	    setFilters({ ...filters, search: e.target.value })
    49	  }
    50	
    51	  const handleCategoryChange = (categoryId) => {
    52	    setFilters({ ...filters, category: categoryId })
    53	  }
    54	
    55	  if (loading) {
    56	    return (
    57	      <div className="min-h-screen bg-gray-50 py-8">
    58	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    59	          <div className="text-center py-12">
    60	            <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-primary-600 mx-auto"></div>
    61	            <p className="mt-4 text-gray-600">Loading markets...</p>
    62	          </div>
    63	        </div>
    64	      </div>
    65	    )
    66	  }
    67	
    68	  if (error) {
    69	    return (
    70	      <div className="min-h-screen bg-gray-50 py-8">
    71	        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    72	          <div className="text-center py-12">
    73	            <p className="text-red-600">{error}</p>
    74	            <button 
    75	              onClick={fetchData}
    76	              className="btn-primary mt-4"
    77	            >
    78	              Try Again
    79	            </button>
    80	          </div>
    81	        </div>
    82	      </div>
    83	    )
    84	  }
    85	
    86	  return (
    87	    <div className="min-h-screen bg-gray-50 py-8">
    88	      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    89	        <div className="mb-8">
    90	          <h1 className="text-3xl font-bold text-gray-900 mb-4">Browse Markets</h1>
    91	          <p className="text-gray-600">
    92	            Discover {markets.length} local markets across South Australia
    93	          </p>
    94	        </div>
    95	
    96	        <div className="bg-white rounded-lg shadow p-6 mb-8">
    97	          <div className="grid grid-cols-1 md:grid-cols-12 gap-4">
    98	            <div className="md:col-span-6">
    99	              <div className="relative">
   100	                <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
   101	                <input
   102	                  type="text"
   103	                  placeholder="Search markets by name or location..."
   104	                  className="input-field pl-10"
   105	                  value={filters.search}
   106	                  onChange={handleSearchChange}
   107	                />
   108	              </div>
   109	            </div>
   110	
   111	            <div className="md:col-span-4">
   112	              <select
   113	                className="input-field"
   114	                value={filters.category}
   115	                onChange={(e) => handleCategoryChange(e.target.value)}
   116	              >
   117	                <option value="">All Categories</option>
   118	                {categories.map((category) => (
   119	                  <option key={category.id} value={category.id}>
   120	                    {category.name}
   121	                  </option>
   122	                ))}
   123	              </select>
   124	            </div>
   125	
   126	            <div className="md:col-span-2">
   127	              <select
   128	                className="input-field"
   129	                value={filters.state}
   130	                onChange={(e) => setFilters({ ...filters, state: e.target.value })}
   131	              >
   132	                <option value="SA">South Australia</option>
   133	                <option value="VIC">Victoria</option>
   134	                <option value="NSW">New South Wales</option>
   135	                <option value="QLD">Queensland</option>
   136	                <option value="WA">Western Australia</option>
   137	                <option value="TAS">Tasmania</option>
   138	                <option value="NT">Northern Territory</option>
   139	                <option value="ACT">ACT</option>
   140	              </select>
   141	            </div>
   142	          </div>
   143	        </div>
   144	
   145	        {markets.length === 0 ? (
   146	          <div className="text-center py-12">
   147	            <p className="text-gray-600">No markets found matching your criteria.</p>
   148	            <button 
   149	              onClick={() => setFilters({ search: '', category: '', state: 'SA' })}
   150	              className="btn-secondary mt-4"
   151	            >
   152	              Clear Filters
   153	            </button>
   154	          </div>
   155	        ) : (
   156	          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
   157	            {markets.map((market) => (
   158	              <div key={market.id} className="card hover:shadow-lg transition-shadow">
   159	                {market.expand?.category && (
   160	                  <div className="mb-4">
   161	                    <span 
   162	                      className="inline-block text-white text-xs px-2 py-1 rounded-full"
   163	                      style={{ backgroundColor: market.expand.category.color || '#6b7280' }}
   164	                    >
   165	                      {market.expand.category.name}
   166	                    </span>
   167	                  </div>
   168	                )}
   169	
   170	                <h3 className="text-xl font-semibold text-gray-900 mb-2">{market.name}</h3>
   171	                
   172	                <div className="flex items-center text-gray-600 mb-2">
   173	                  <MapPin className="h-4 w-4 mr-1" />
   174	                  <span>{market.suburb}, {market.state}</span>
   175	                </div>
   176	
   177	                {market.frequency && (
   178	                  <div className="flex items-center text-gray-600 mb-2">
   179	                    <Calendar className="h-4 w-4 mr-1" />
   180	                    <span>{market.frequency}</span>
   181	                  </div>
   182	                )}
   183	
   184	                {market.operating_hours && (
   185	                  <div className="flex items-center text-gray-600 mb-4">
   186	                    <Clock className="h-4 w-4 mr-1" />
   187	                    <span>{market.operating_hours}</span>
   188	                  </div>
   189	                )}
   190	
   191	                {market.description && (
   192	                  <p className="text-gray-600 text-sm mb-4 line-clamp-2">
   193	                    {market.description.substring(0, 100)}...
   194	                  </p>
   195	                )}
   196	
   197	                <div className="flex gap-2">
   198	                  <Link 
   199	                    to={`/markets/${market.slug}`}
   200	                    className="btn-primary flex-1 text-center"
   201	                  >
   202	                    View Details
   203	                  </Link>
   204	                  {market.website && (
   205	                    <button className="btn-secondary px-3 py-2" title="Visit Website">
   206	                      üåê
   207	                    </button>
   208	                  )}
   209	                </div>
   210	              </div>
   211	            ))}
   212	          </div>
   213	        )}
   214	      </div>
   215	    </div>
   216	  )
   217	}

========================================

üìÅ FILE: src/pages/Register.jsx
   Size: 4.4K | Modified: 2025-06-02
----------------------------------------
     1	import { useState } from 'react'
     2	import { Link } from 'react-router-dom'
     3	import { Eye, EyeOff } from 'lucide-react'
     4	
     5	export default function Register() {
     6	  const [showPassword, setShowPassword] = useState(false)
     7	  const [formData, setFormData] = useState({
     8	    name: '',
     9	    email: '',
    10	    password: '',
    11	    role: 'customer'
    12	  })
    13	
    14	  const handleSubmit = (e) => {
    15	    e.preventDefault()
    16	    // TODO: Implement registration with PocketBase
    17	    console.log('Register:', formData)
    18	  }
    19	
    20	  return (
    21	    <div className="min-h-screen bg-gray-50 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    22	      <div className="max-w-md w-full space-y-8">
    23	        <div>
    24	          <h2 className="mt-6 text-center text-3xl font-bold text-gray-900">
    25	            Join SA Markets
    26	          </h2>
    27	          <p className="mt-2 text-center text-sm text-gray-600">
    28	            Create your account to get started
    29	          </p>
    30	        </div>
    31	        <form className="mt-8 space-y-6" onSubmit={handleSubmit}>
    32	          <div className="space-y-4">
    33	            <div>
    34	              <label htmlFor="name" className="block text-sm font-medium text-gray-700">
    35	                Full Name
    36	              </label>
    37	              <input
    38	                id="name"
    39	                name="name"
    40	                type="text"
    41	                required
    42	                className="input-field mt-1"
    43	                placeholder="Enter your full name"
    44	                value={formData.name}
    45	                onChange={(e) => setFormData({...formData, name: e.target.value})}
    46	              />
    47	            </div>
    48	            <div>
    49	              <label htmlFor="email" className="block text-sm font-medium text-gray-700">
    50	                Email address
    51	              </label>
    52	              <input
    53	                id="email"
    54	                name="email"
    55	                type="email"
    56	                required
    57	                className="input-field mt-1"
    58	                placeholder="Enter your email"
    59	                value={formData.email}
    60	                onChange={(e) => setFormData({...formData, email: e.target.value})}
    61	              />
    62	            </div>
    63	            <div>
    64	              <label htmlFor="password" className="block text-sm font-medium text-gray-700">
    65	                Password
    66	              </label>
    67	              <div className="mt-1 relative">
    68	                <input
    69	                  id="password"
    70	                  name="password"
    71	                  type={showPassword ? 'text' : 'password'}
    72	                  required
    73	                  className="input-field pr-10"
    74	                  placeholder="Create a password"
    75	                  value={formData.password}
    76	                  onChange={(e) => setFormData({...formData, password: e.target.value})}
    77	                />
    78	                <button
    79	                  type="button"
    80	                  className="absolute inset-y-0 right-0 pr-3 flex items-center"
    81	                  onClick={() => setShowPassword(!showPassword)}
    82	                >
    83	                  {showPassword ? (
    84	                    <EyeOff className="h-5 w-5 text-gray-400" />
    85	                  ) : (
    86	                    <Eye className="h-5 w-5 text-gray-400" />
    87	                  )}
    88	                </button>
    89	              </div>
    90	            </div>
    91	            <div>
    92	              <label htmlFor="role" className="block text-sm font-medium text-gray-700">
    93	                I am a...
    94	              </label>
    95	              <select
    96	                id="role"
    97	                name="role"
    98	                className="input-field mt-1"
    99	                value={formData.role}
   100	                onChange={(e) => setFormData({...formData, role: e.target.value})}
   101	              >
   102	                <option value="customer">Market Customer</option>
   103	                <option value="stallholder">Stallholder/Vendor</option>
   104	                <option value="organizer">Market Organizer</option>
   105	              </select>
   106	            </div>
   107	          </div>
   108	
   109	          <div>
   110	            <button type="submit" className="btn-primary w-full">
   111	              Create Account
   112	            </button>
   113	          </div>
   114	
   115	          <div className="text-center">
   116	            <span className="text-sm text-gray-600">
   117	              Already have an account?{' '}
   118	              <Link to="/login" className="text-primary-600 hover:text-primary-500 font-medium">
   119	                Sign in here
   120	              </Link>
   121	            </span>
   122	          </div>
   123	        </form>
   124	      </div>
   125	    </div>
   126	  )
   127	}

========================================

üìÅ FILE: src/services/ApplicationService.js
   Size: 4.5K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/ApplicationService.js - Fix the import and missing methods
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	
     5	class ApplicationService {
     6	  // Get applications for market organizer
     7	  async getMarketApplications(marketId, filters = {}) {
     8	    try {
     9	      const filterConditions = [`market = "${marketId}"`];
    10	      
    11	      if (filters.status) {
    12	        filterConditions.push(`status = "${filters.status}"`);
    13	      }
    14	
    15	      const result = await pb.collection('applications').getList(
    16	        filters.page || 1,
    17	        filters.perPage || 20,
    18	        {
    19	          filter: filterConditions.join(' && '),
    20	          sort: '-created',
    21	          expand: 'stallholder,stallholder.user,market'
    22	        }
    23	      );
    24	
    25	      return result;
    26	    } catch (error) {
    27	      console.error('Error fetching market applications:', error);
    28	      throw error;
    29	    }
    30	  }
    31	
    32	  // Get applications for stallholder (method that was missing)
    33	  async getStallholderApplications(stallholderId, filters = {}) {
    34	    try {
    35	      const filterConditions = [`stallholder = "${stallholderId}"`];
    36	      
    37	      if (filters.status) {
    38	        filterConditions.push(`status = "${filters.status}"`);
    39	      }
    40	
    41	      const result = await pb.collection('applications').getList(
    42	        filters.page || 1,
    43	        filters.perPage || 20,
    44	        {
    45	          filter: filterConditions.join(' && '),
    46	          sort: '-created',
    47	          expand: 'market,stallholder'
    48	        }
    49	      );
    50	
    51	      return result;
    52	    } catch (error) {
    53	      console.error('Error fetching stallholder applications:', error);
    54	      throw error;
    55	    }
    56	  }
    57	
    58	  // Submit application to market
    59	  async submitApplication(applicationData) {
    60	    try {
    61	      const application = await pb.collection('applications').create({
    62	        ...applicationData,
    63	        status: 'pending',
    64	        payment_status: 'unpaid'
    65	      });
    66	      
    67	      auditLogger.log('application_submitted', pb.authStore.model?.id, {
    68	        applicationId: application.id,
    69	        marketId: applicationData.market,
    70	        stallholderId: applicationData.stallholder
    71	      });
    72	
    73	      return application;
    74	    } catch (error) {
    75	      console.error('Error submitting application:', error);
    76	      throw error;
    77	    }
    78	  }
    79	
    80	  // Update application status
    81	  async updateApplicationStatus(applicationId, status, organizerNotes = '') {
    82	    try {
    83	      const application = await pb.collection('applications').update(applicationId, {
    84	        status,
    85	        organizer_notes: organizerNotes
    86	      });
    87	      
    88	      auditLogger.log('application_status_updated', pb.authStore.model?.id, {
    89	        applicationId,
    90	        newStatus: status
    91	      });
    92	
    93	      return application;
    94	    } catch (error) {
    95	      console.error('Error updating application status:', error);
    96	      throw error;
    97	    }
    98	  }
    99	
   100	  // Get application statistics for market
   101	  async getApplicationStats(marketId) {
   102	    try {
   103	      const applications = await pb.collection('applications').getFullList({
   104	        filter: `market = "${marketId}"`
   105	      });
   106	
   107	      const stats = {
   108	        total: applications.length,
   109	        pending: applications.filter(app => app.status === 'pending').length,
   110	        approved: applications.filter(app => app.status === 'approved').length,
   111	        rejected: applications.filter(app => app.status === 'rejected').length,
   112	        cancelled: applications.filter(app => app.status === 'cancelled').length
   113	      };
   114	
   115	      return stats;
   116	    } catch (error) {
   117	      console.error('Error fetching application stats:', error);
   118	      throw error;
   119	    }
   120	  }
   121	
   122	  // Check if stallholder has existing application for market
   123	  async checkExistingApplication(stallholderId, marketId) {
   124	    try {
   125	      const existing = await pb.collection('applications').getFirstListItem(
   126	        `stallholder = "${stallholderId}" && market = "${marketId}" && status != "cancelled" && status != "rejected"`
   127	      );
   128	      return existing;
   129	    } catch (error) {
   130	      if (error.status === 404) {
   131	        return null; // No existing application
   132	      }
   133	      throw error;
   134	    }
   135	  }
   136	
   137	  // Cancel application
   138	  async cancelApplication(applicationId) {
   139	    try {
   140	      const application = await pb.collection('applications').update(applicationId, {
   141	        status: 'cancelled'
   142	      });
   143	      
   144	      auditLogger.log('application_cancelled', pb.authStore.model?.id, {
   145	        applicationId
   146	      });
   147	
   148	      return application;
   149	    } catch (error) {
   150	      console.error('Error cancelling application:', error);
   151	      throw error;
   152	    }
   153	  }
   154	}
   155	
   156	export default new ApplicationService();

========================================

üìÅ FILE: src/services/StallholderService.js
   Size: 5.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/StallholderService.js - Updated to fix import issues
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	import ApplicationService from './ApplicationService.js';
     5	
     6	class StallholderService {
     7	  // Get all stallholders with filtering
     8	  async getStallholders(filters = {}) {
     9	    try {
    10	      const filterConditions = ['user != ""']; // Changed from 'active = true' since we don't have that field
    11	      
    12	      if (filters.category) {
    13	        filterConditions.push(`product_categories ~ "${filters.category}"`);
    14	      }
    15	      
    16	      if (filters.state) {
    17	        filterConditions.push(`state = "${filters.state}"`);
    18	      }
    19	      
    20	      if (filters.search) {
    21	        filterConditions.push(`(business_name ~ "${filters.search}" || description ~ "${filters.search}")`);
    22	      }
    23	
    24	      if (filters.rating) {
    25	        filterConditions.push(`rating >= ${filters.rating}`);
    26	      }
    27	
    28	      if (filters.user) {
    29	        filterConditions.push(`user = "${filters.user}"`);
    30	      }
    31	
    32	      const result = await pb.collection('stallholders').getList(
    33	        filters.page || 1,
    34	        filters.perPage || 20,
    35	        {
    36	          filter: filterConditions.join(' && '),
    37	          sort: filters.sort || '-created',
    38	          expand: 'user'
    39	        }
    40	      );
    41	
    42	      return result;
    43	    } catch (error) {
    44	      console.error('Error fetching stallholders:', error);
    45	      throw error;
    46	    }
    47	  }
    48	
    49	  // Get single stallholder
    50	  async getStallholder(id) {
    51	    try {
    52	      const stallholder = await pb.collection('stallholders').getOne(id, {
    53	        expand: 'user'
    54	      });
    55	      return stallholder;
    56	    } catch (error) {
    57	      console.error('Error fetching stallholder:', error);
    58	      throw error;
    59	    }
    60	  }
    61	
    62	  // Create stallholder profile
    63	  async createStallholder(stallholderData) {
    64	    try {
    65	      const stallholder = await pb.collection('stallholders').create(stallholderData);
    66	      
    67	      auditLogger.log('stallholder_created', pb.authStore.model?.id, {
    68	        stallholderId: stallholder.id,
    69	        businessName: stallholder.business_name
    70	      });
    71	
    72	      return stallholder;
    73	    } catch (error) {
    74	      console.error('Error creating stallholder:', error);
    75	      throw error;
    76	    }
    77	  }
    78	
    79	  // Update stallholder profile
    80	  async updateStallholder(id, stallholderData) {
    81	    try {
    82	      const stallholder = await pb.collection('stallholders').update(id, stallholderData);
    83	      
    84	      auditLogger.log('stallholder_updated', pb.authStore.model?.id, {
    85	        stallholderId: id,
    86	        changes: Object.keys(stallholderData)
    87	      });
    88	
    89	      return stallholder;
    90	    } catch (error) {
    91	      console.error('Error updating stallholder:', error);
    92	      throw error;
    93	    }
    94	  }
    95	
    96	  // Get stallholder's applications - now properly delegated
    97	  async getApplications(stallholderId, filters = {}) {
    98	    return ApplicationService.getStallholderApplications(stallholderId, filters);
    99	  }
   100	
   101	  // Submit application to market - now properly delegated
   102	  async submitApplication(applicationData) {
   103	    return ApplicationService.submitApplication(applicationData);
   104	  }
   105	
   106	  // Get reviews for stallholder
   107	  async getReviews(stallholderId) {
   108	    try {
   109	      const reviews = await pb.collection('reviews').getList(1, 50, {
   110	        filter: `target_id = "${stallholderId}" && target_type = "stallholder"`,
   111	        sort: '-created',
   112	        expand: 'reviewer'
   113	      });
   114	      return reviews;
   115	    } catch (error) {
   116	      console.error('Error fetching reviews:', error);
   117	      throw error;
   118	    }
   119	  }
   120	
   121	  // Add review for stallholder
   122	  async addReview(reviewData) {
   123	    try {
   124	      const review = await pb.collection('reviews').create({
   125	        ...reviewData,
   126	        target_type: 'stallholder'
   127	      });
   128	
   129	      // Update stallholder rating
   130	      await this.updateStallholderRating(reviewData.target_id);
   131	      
   132	      auditLogger.log('review_added', pb.authStore.model?.id, {
   133	        reviewId: review.id,
   134	        targetId: reviewData.target_id,
   135	        rating: reviewData.rating
   136	      });
   137	
   138	      return review;
   139	    } catch (error) {
   140	      console.error('Error adding review:', error);
   141	      throw error;
   142	    }
   143	  }
   144	
   145	  // Update stallholder's average rating
   146	  async updateStallholderRating(stallholderId) {
   147	    try {
   148	      const reviews = await pb.collection('reviews').getFullList({
   149	        filter: `target_id = "${stallholderId}" && target_type = "stallholder"`
   150	      });
   151	
   152	      if (reviews.length === 0) return;
   153	
   154	      const totalRating = reviews.reduce((sum, review) => sum + review.rating, 0);
   155	      const averageRating = totalRating / reviews.length;
   156	
   157	      await pb.collection('stallholders').update(stallholderId, {
   158	        rating: Math.round(averageRating * 10) / 10, // Round to 1 decimal
   159	        reviews_count: reviews.length
   160	      });
   161	    } catch (error) {
   162	      console.error('Error updating stallholder rating:', error);
   163	    }
   164	  }
   165	
   166	  // Get product categories
   167	  async getProductCategories() {
   168	    return [
   169	      'Fresh Produce',
   170	      'Baked Goods',
   171	      'Arts & Crafts',
   172	      'Clothing & Accessories',
   173	      'Food & Beverages',
   174	      'Home & Garden',
   175	      'Beauty & Wellness',
   176	      'Books & Media',
   177	      'Vintage & Antiques',
   178	      'Handmade Jewelry',
   179	      'Plants & Flowers',
   180	      'Other'
   181	    ];
   182	  }
   183	}
   184	
   185	export default new StallholderService();

========================================

üìÅ FILE: src/services/marketService.js
   Size: 5.2K | Modified: 2025-06-02
----------------------------------------
     1	// src/services/marketService.js - Updated with better error handling
     2	import pb from '../lib/pocketbase.js';
     3	import { auditLogger } from '../utils/security.js';
     4	
     5	class MarketService {
     6	  // Get all active markets
     7	  async getMarkets(filters = {}) {
     8	    try {
     9	      const filterConditions = []; // Removed 'active = true' since the field might not exist yet
    10	      
    11	      if (filters.state) {
    12	        filterConditions.push(`state = "${filters.state}"`);
    13	      }
    14	      
    15	      if (filters.category) {
    16	        filterConditions.push(`category = "${filters.category}"`);
    17	      }
    18	      
    19	      if (filters.search) {
    20	        filterConditions.push(`(name ~ "${filters.search}" || suburb ~ "${filters.search}" || description ~ "${filters.search}")`);
    21	      }
    22	
    23	      const filterString = filterConditions.length > 0 ? filterConditions.join(' && ') : '';
    24	
    25	      const result = await pb.collection('markets').getList(
    26	        filters.page || 1,
    27	        filters.perPage || 20,
    28	        {
    29	          filter: filterString,
    30	          sort: filters.sort || '-created',
    31	          expand: 'category,organizer'
    32	        }
    33	      );
    34	
    35	      return result;
    36	    } catch (error) {
    37	      console.error('Error fetching markets:', error);
    38	      throw error;
    39	    }
    40	  }
    41	
    42	  // Get single market by ID or slug
    43	  async getMarket(idOrSlug) {
    44	    try {
    45	      const market = await pb.collection('markets').getFirstListItem(
    46	        `id = "${idOrSlug}" || slug = "${idOrSlug}"`,
    47	        {
    48	          expand: 'category,organizer'
    49	        }
    50	      );
    51	
    52	      return market;
    53	    } catch (error) {
    54	      console.error('Error fetching market:', error);
    55	      throw error;
    56	    }
    57	  }
    58	
    59	  // Create new market
    60	  async createMarket(marketData) {
    61	    try {
    62	      const market = await pb.collection('markets').create(marketData);
    63	      
    64	      auditLogger.log('market_created', pb.authStore.model?.id, {
    65	        marketId: market.id,
    66	        marketName: market.name
    67	      });
    68	
    69	      return market;
    70	    } catch (error) {
    71	      console.error('Error creating market:', error);
    72	      throw error;
    73	    }
    74	  }
    75	
    76	  // Update market
    77	  async updateMarket(id, marketData) {
    78	    try {
    79	      const market = await pb.collection('markets').update(id, marketData);
    80	      
    81	      auditLogger.log('market_updated', pb.authStore.model?.id, {
    82	        marketId: id,
    83	        changes: Object.keys(marketData)
    84	      });
    85	
    86	      return market;
    87	    } catch (error) {
    88	      console.error('Error updating market:', error);
    89	      throw error;
    90	    }
    91	  }
    92	
    93	  // Delete market
    94	  async deleteMarket(id) {
    95	    try {
    96	      await pb.collection('markets').delete(id);
    97	      
    98	      auditLogger.log('market_deleted', pb.authStore.model?.id, {
    99	        marketId: id
   100	      });
   101	
   102	      return true;
   103	    } catch (error) {
   104	      console.error('Error deleting market:', error);
   105	      throw error;
   106	    }
   107	  }
   108	
   109	  // Search markets by location (geolocation)
   110	  async searchNearby(latitude, longitude, radiusKm = 25) {
   111	    try {
   112	      // This is a simplified version - in production you'd use proper geospatial queries
   113	      const markets = await pb.collection('markets').getList(1, 50, {
   114	        filter: 'latitude != null && longitude != null',
   115	        expand: 'category'
   116	      });
   117	
   118	      // Calculate distances client-side (in production, do this server-side)
   119	      const marketsWithDistance = markets.items.map(market => {
   120	        const distance = this.calculateDistance(
   121	          latitude, longitude,
   122	          market.latitude, market.longitude
   123	        );
   124	        return { ...market, distance };
   125	      });
   126	
   127	      // Filter by radius and sort by distance
   128	      return marketsWithDistance
   129	        .filter(market => market.distance <= radiusKm)
   130	        .sort((a, b) => a.distance - b.distance);
   131	    } catch (error) {
   132	      console.error('Error searching nearby markets:', error);
   133	      throw error;
   134	    }
   135	  }
   136	
   137	  // Calculate distance between two points (Haversine formula)
   138	  calculateDistance(lat1, lon1, lat2, lon2) {
   139	    const R = 6371; // Earth's radius in kilometers
   140	    const dLat = this.deg2rad(lat2 - lat1);
   141	    const dLon = this.deg2rad(lon2 - lon1);
   142	    const a = 
   143	      Math.sin(dLat/2) * Math.sin(dLat/2) +
   144	      Math.cos(this.deg2rad(lat1)) * Math.cos(this.deg2rad(lat2)) * 
   145	      Math.sin(dLon/2) * Math.sin(dLon/2);
   146	    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
   147	    return R * c;
   148	  }
   149	
   150	  deg2rad(deg) {
   151	    return deg * (Math.PI/180);
   152	  }
   153	
   154	  // Get market categories - handle case where collection might not exist yet
   155	  async getCategories() {
   156	    try {
   157	      const categories = await pb.collection('market_categories').getFullList({
   158	        sort: 'name'
   159	      });
   160	      return categories;
   161	    } catch (error) {
   162	      console.error('Error fetching categories:', error);
   163	      // Return default categories if collection doesn't exist yet
   164	      return [
   165	        { id: 'farmers', name: 'Farmers Market', color: '#22c55e' },
   166	        { id: 'craft', name: 'Craft & Artisan', color: '#8b5cf6' },
   167	        { id: 'community', name: 'Community Market', color: '#3b82f6' },
   168	        { id: 'specialty', name: 'Specialty Market', color: '#f59e0b' },
   169	        { id: 'food', name: 'Food Market', color: '#ef4444' },
   170	        { id: 'vintage', name: 'Vintage & Antiques', color: '#6b7280' }
   171	      ];
   172	    }
   173	  }
   174	}
   175	
   176	export default new MarketService();

========================================

üìÅ FILE: src/utils/security.js
   Size: 4.3K | Modified: 2025-06-02
----------------------------------------
     1	// Input validation and sanitization
     2	export const validation = {
     3	  // Australian-specific validation
     4	  validateABN(abn) {
     5	    const cleanABN = abn.replace(/\s/g, '');
     6	    if (!/^\d{11}$/.test(cleanABN)) return false;
     7	    
     8	    // ABN checksum validation
     9	    const weights = [10, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19];
    10	    let sum = 0;
    11	    
    12	    for (let i = 0; i < 11; i++) {
    13	      sum += (parseInt(cleanABN[i]) - (i === 0 ? 1 : 0)) * weights[i];
    14	    }
    15	    
    16	    return sum % 89 === 0;
    17	  },
    18	
    19	  validateAustralianPhone(phone) {
    20	    const cleanPhone = phone.replace(/[\s\-\(\)]/g, '');
    21	    const australianPhoneRegex = /^(\+61|0)[2-478](?:[0-9]){8}$/;
    22	    return australianPhoneRegex.test(cleanPhone);
    23	  },
    24	
    25	  validatePostcode(postcode) {
    26	    return /^\d{4}$/.test(postcode);
    27	  },
    28	
    29	  validateEmail(email) {
    30	    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    31	    return emailRegex.test(email) && email.length <= 254;
    32	  },
    33	
    34	  // Password strength validation
    35	  validatePassword(password) {
    36	    const minLength = 12;
    37	    const hasUpperCase = /[A-Z]/.test(password);
    38	    const hasLowerCase = /[a-z]/.test(password);
    39	    const hasNumbers = /\d/.test(password);
    40	    const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
    41	    
    42	    return {
    43	      isValid: password.length >= minLength && hasUpperCase && hasLowerCase && hasNumbers && hasSpecialChar,
    44	      length: password.length >= minLength,
    45	      uppercase: hasUpperCase,
    46	      lowercase: hasLowerCase,
    47	      numbers: hasNumbers,
    48	      special: hasSpecialChar,
    49	      score: [hasUpperCase, hasLowerCase, hasNumbers, hasSpecialChar, password.length >= minLength]
    50	        .filter(Boolean).length
    51	    };
    52	  }
    53	};
    54	
    55	// Data sanitization
    56	export const sanitizer = {
    57	  // Remove potentially dangerous characters
    58	  sanitizeInput(input) {
    59	    if (typeof input !== 'string') return input;
    60	    
    61	    return input
    62	      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '') // Remove script tags
    63	      .replace(/javascript:/gi, '') // Remove javascript: URLs
    64	      .replace(/on\w+=/gi, '') // Remove event handlers
    65	      .replace(/[<>]/g, '') // Remove angle brackets
    66	      .trim();
    67	  },
    68	
    69	  // Sanitize HTML content (for descriptions, etc.)
    70	  sanitizeHTML(html) {
    71	    // In production, use a proper HTML sanitizer like DOMPurify
    72	    const allowedTags = ['p', 'br', 'strong', 'em', 'ul', 'ol', 'li', 'h1', 'h2', 'h3'];
    73	    // For now, just remove script tags and dangerous attributes
    74	    return html
    75	      .replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi, '')
    76	      .replace(/on\w+="[^"]*"/gi, '')
    77	      .replace(/javascript:/gi, '');
    78	  },
    79	
    80	  // Sanitize file names
    81	  sanitizeFileName(fileName) {
    82	    return fileName
    83	      .replace(/[^a-zA-Z0-9.\-_]/g, '_')
    84	      .replace(/_{2,}/g, '_')
    85	      .substr(0, 255);
    86	  }
    87	};
    88	
    89	// Rate limiting helper
    90	export const rateLimiter = {
    91	  attempts: new Map(),
    92	
    93	  isAllowed(key, limit = 5, windowMs = 15 * 60 * 1000) { // 5 attempts per 15 minutes
    94	    const now = Date.now();
    95	    const userAttempts = this.attempts.get(key) || [];
    96	    
    97	    // Remove old attempts outside the window
    98	    const validAttempts = userAttempts.filter(time => now - time < windowMs);
    99	    
   100	    if (validAttempts.length >= limit) {
   101	      return false;
   102	    }
   103	    
   104	    // Add current attempt
   105	    validAttempts.push(now);
   106	    this.attempts.set(key, validAttempts);
   107	    
   108	    return true;
   109	  },
   110	
   111	  getRemainingAttempts(key, limit = 5, windowMs = 15 * 60 * 1000) {
   112	    const now = Date.now();
   113	    const userAttempts = this.attempts.get(key) || [];
   114	    const validAttempts = userAttempts.filter(time => now - time < windowMs);
   115	    
   116	    return Math.max(0, limit - validAttempts.length);
   117	  }
   118	};
   119	
   120	// Audit logging
   121	export const auditLogger = {
   122	  log(event, userId, details = {}) {
   123	    const auditEntry = {
   124	      event,
   125	      userId,
   126	      details,
   127	      timestamp: new Date().toISOString(),
   128	      userAgent: navigator.userAgent,
   129	      sessionId: sessionStorage.getItem('session_id') || 'no_session'
   130	    };
   131	
   132	    // In development, log to console
   133	    if (import.meta.env.VITE_ENVIRONMENT === 'development') {
   134	      console.log('AUDIT LOG:', auditEntry);
   135	    }
   136	
   137	    // Store in local storage for debugging (remove in production)
   138	    const logs = JSON.parse(localStorage.getItem('audit_logs') || '[]');
   139	    logs.push(auditEntry);
   140	    localStorage.setItem('audit_logs', JSON.stringify(logs.slice(-100))); // Keep last 100
   141	  }
   142	};

========================================


üìä COMPLETE ANALYSIS SUMMARY
=============================================
Export completed: Mon Jun  2 13:13:16 UTC 2025
Output file: codebase-export.txt
Total size: 324K
Total lines: 8311
PocketBase URL: http://localhost:8090
PocketBase analysis: ‚úÖ Included
Sample data included: false
Missing critical files: 0
Generated for: SA Markets Directory Project
=============================================
